define(["exports","underscore","jquery","backbone","onload/loadConfig","utils/localization","libs/d3","viz/visualization","viz/trackster/tracks","mvc/tool/tools","mvc/dataset/data","utils/config","mvc/ui/icon-button"],function(e,t,n,a,d,i,o,l,r,s,c,u,f){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.SweepsterVisualizationView=e.SweepsterVisualization=void 0;var _=x(t),p=x(n),h=x(a),g=x(i),m=function(e){{if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var a=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};a.get||a.set?Object.defineProperty(t,n,a):t[n]=e[n]}return t.default=e,t}}(o),v=x(l),w=x(r),k=x(s),y=x(u),b=x(f);function x(e){return e&&e.__esModule?e:{default:e}}var $=h.default.Model.extend({defaults:{inputs:null,values:null}}),C=h.default.Model.extend({defaults:{tool:null,tree_data:null},initialize:function(e){var n=this;this.get("tool").get("inputs").each(function(e){e.on("change:min change:max change:num_samples",function(e){e.get("in_ptree")&&n.set_tree_data()},n),e.on("change:in_ptree",function(e){e.get("in_ptree")?n.add_param(e):n.remove_param(e),n.set_tree_data()},n)}),e.config&&_.default.each(e.config,function(t){var e=n.get("tool").get("inputs").find(function(e){return e.get("name")===t.name});n.add_param(e),e.set(t)})},add_param:function(e){e.get("ptree_index")||(e.set("in_ptree",!0),e.set("ptree_index",this.get_tree_params().length))},remove_param:function(e){e.set("in_ptree",!1),e.set("ptree_index",null),(0,_.default)(this.get_tree_params()).each(function(e,t){e.set("ptree_index",t+1)})},set_tree_data:function(){var e=_.default.map(this.get_tree_params(),function(e){return{param:e,samples:e.get_samples()}}),l=0;this.set("tree_data",{name:"Root",id:l++,children:0!==e.length?function t(n,a){var e=n[a],i=e.param,o=(i.get("label"),e.samples);return n.length-1===a?_.default.map(o,function(e){return{id:l++,name:e,param:i,value:e}}):_.default.map(o,function(e){return{id:l++,name:e,param:i,value:e,children:t(n,a+1)}})}(e,0):null})},get_tree_params:function(){return(0,_.default)(this.get("tool").get("inputs").where({in_ptree:!0})).sortBy(function(e){return e.get("ptree_index")})},get_num_leaves:function(){return this.get_tree_params().reduce(function(e,t){return e*t.get_samples().length},1)},get_node_settings:function(e){var t=this.get("tool").get_inputs_dict(),n=e.parent;if(n)for(;0!==n.depth;)t[n.param.get("name")]=n.value,n=n.parent;var a=this,i=function t(e,n){return e.param&&(n[e.param.get("name")]=e.value),e.children?_.default.flatten(_.default.map(e.children,function(e){return t(e,_.default.clone(n))})):new $({inputs:a.get("tool").get("inputs"),values:n})}(e,t);return _.default.isArray(i)||(i=[i]),i},get_connected_nodes:function(e){for(var t=[],n=e.parent;n;)t.push(n),n=n.parent;return _.default.flatten([t,function t(e){return e.children?_.default.flatten([e,_.default.map(e.children,function(e){return t(e)})]):e}(e)])},get_leaf:function(t){for(var e,n=this.get("tree_data");n.children;)e=n.children,n=_.default.find(e,function(e){return t[e.param.get("name")]===e.value});return n},toJSON:function(){return this.get_tree_params().map(function(e){return{name:e.get("name"),min:e.get("min"),max:e.get("max"),num_samples:e.get("num_samples")}})}}),z=h.default.Model.extend({defaults:{track:null,mode:"Pack",settings:null,regions:null},initialize:function(e){if(this.set("regions",e.regions),e.track){var t=_.default.extend({data_url:"".concat((0,d.getAppRoot)(),"dummy1"),converted_datasets_state_url:"".concat((0,d.getAppRoot)(),"dummy2")},e.track);this.set("track",w.default.object_from_template(t,{},null))}},same_settings:function(e){var t=this.get("settings"),n=e.get("settings");for(var a in t)if(!n[a]||t[a]!==n[a])return!1;return!0},toJSON:function(){return{track:this.get("track").to_dict(),settings:this.get("settings"),regions:this.get("regions")}}}),A=h.default.Collection.extend({model:z}),S=(e.SweepsterVisualization=v.default.Visualization.extend({defaults:_.default.extend({},v.default.Visualization.prototype.defaults,{dataset:null,tool:null,parameter_tree:null,regions:null,tracks:null,default_mode:"Pack"}),initialize:function(e){this.set("dataset",new c.Dataset(e.dataset)),this.set("tool",new k.default.Tool(e.tool)),this.set("regions",new v.default.GenomeRegionCollection(e.regions)),this.set("tracks",new A(e.tracks));var t=this.get("tool");this.set("tool_with_samplable_inputs",t),t.remove_inputs(["data","hidden_data","conditional","text"]),this.set("parameter_tree",new C({tool:t,config:e.tree_config}))},add_track:function(e){this.get("tracks").add(e)},toJSON:function(){return{id:this.get("id"),title:"Parameter exploration for dataset '".concat(this.get("dataset").get("name"),"'"),type:"sweepster",dataset_id:this.get("dataset").id,tool_id:this.get("tool").id,regions:this.get("regions").toJSON(),tree_config:this.get("parameter_tree").toJSON(),tracks:this.get("tracks").toJSON()}}}),h.default.View.extend({tagName:"tr",TILE_LEN:250,initialize:function(e){this.canvas_manager=e.canvas_manager,this.render(),this.model.on("change:track change:mode",this.draw_tiles,this)},render:function(){var e=this.model.get("settings"),t=e.get("values"),n=(0,p.default)("<td/>").addClass("settings").appendTo(this.$el),a=(0,p.default)("<div/>").addClass("track-info").hide().appendTo(n);a.append((0,p.default)("<div/>").css("font-weight","bold").text("Track Settings")),e.get("inputs").each(function(e){a.append("".concat(e.get("label"),": ").concat(t[e.get("name")],"<br/>"))});var i=this,o=((0,p.default)("<button/>").appendTo(a).text("Run on complete dataset").click(function(){a.toggle(),i.trigger("run_on_dataset",e)}),b.default.create_icon_buttons_menu([{title:(0,g.default)("Settings"),icon_class:"gear track-settings",on_click:function(){a.toggle()}},{title:(0,g.default)("Remove"),icon_class:"cross-circle",on_click:function(){i.$el.remove(),(0,p.default)(".tooltip").remove()}}]));n.prepend(o.$el),this.model.get("regions").each(function(){i.$el.append((0,p.default)("<td/>").addClass("tile").html((0,p.default)("<img/>").attr("src","".concat((0,d.getAppRoot)(),"images/loading_large_white_bg.gif"))))}),this.model.get("track")&&this.draw_tiles()},draw_tiles:function(){var l=this,r=this.model.get("track"),t=this.model.get("regions"),s=this.$el.find("td.tile");r&&p.default.when(r.data_manager.data_is_ready()).then(function(e){t.each(function(n,a){var e=n.length()/l.TILE_LEN,i=1/e,o=l.model.get("mode");p.default.when(r.data_manager.get_data(n,o,e,{})).then(function(e){var t=l.canvas_manager.new_canvas();t.width=l.TILE_LEN,t.height=r.get_canvas_height(e,o,i,t.width),r.draw_tile(e,t.getContext("2d"),o,n,i),(0,p.default)(s[a]).empty().append(t)})})})}})),O=h.default.View.extend({number_input_template:'<div class="form-row-input sweep"><input class="min" type="text" size="6" value="<%= min %>"> - <input class="max" type="text" size="6" value="<%= max %>"> samples: <input class="num_samples" type="text" size="1" value="<%= num_samples %>"></div>',select_input_template:'<div class="form-row-input sweep"><%= options %></div>',initialize:function(e){this.$el=e.tool_row,this.render()},render:function(){var t=this.model,e=(t.get("type"),this.$el.find(".form-row-input")),n=null;if(e.find(":input").change(function(){t.set("value",(0,p.default)(this).val())}),t instanceof k.default.IntegerToolParameter)n=(0,p.default)(_.default.template(this.number_input_template)(this.model.toJSON()));else if(t instanceof k.default.SelectToolParameter){var a=_.default.map(this.$el.find("select option"),function(e){return(0,p.default)(e).val()}).join(", ");n=(0,p.default)(_.default.template(this.select_input_template)({options:a}))}n.insertAfter(e);var i=this,o=b.default.create_icon_buttons_menu([{title:(0,g.default)("Add parameter to tree"),icon_class:"plus-button",on_click:function(){t.set("in_ptree",!0),e.hide(),n.show(),(0,p.default)(this).hide(),i.$el.find(".icon-button.toggle").show()}},{title:(0,g.default)("Remove parameter from tree"),icon_class:"toggle",on_click:function(){t.set("in_ptree",!1),n.hide(),e.show(),(0,p.default)(this).hide(),i.$el.find(".icon-button.plus-button").show()}}],{});this.$el.prepend(o.$el),t.get("in_ptree")?(e.hide(),i.$el.find(".icon-button.plus-button").hide()):(i.$el.find(".icon-button.toggle").hide(),n.hide()),_.default.each(["min","max","num_samples"],function(e){n.find(".".concat(e)).change(function(){t.set(e,parseFloat((0,p.default)(this).val()))})})}}),N=h.default.View.extend({className:"tree-design",initialize:function(e){this.render()},render:function(){var e=new k.default.ToolFormView({model:this.model.get("tool")});e.render(),this.$el.append(e.$el);var t=this.model.get("tool").get("inputs");this.$el.find(".form-row").not(".form-actions").each(function(e){new O({model:t.at(e),tool_row:(0,p.default)(this)})})}}),T=h.default.View.extend({className:"tool-parameter-tree",initialize:function(e){this.model.on("change:tree_data",this.render,this)},render:function(){this.$el.children().remove();var e=this.model.get_tree_params();if(e.length){this.width=100*(2+e.length),this.height=15*this.model.get_num_leaves();var i=this,t=m.layout.cluster().size([this.height,this.width-160]),n=m.svg.diagonal().projection(function(e){return[e.y,e.x]}),a=t.nodes(this.model.get("tree_data")),o=_.default.uniq(_.default.pluck(a,"y"));_.default.each(e,function(e,t){var n=o[t+1],a=(0,p.default)("#center").position().left;i.$el.append((0,p.default)("<div>").addClass("label").text(e.get("label")).css("left",n+a))});var l=m.select(this.$el[0]).append("svg").attr("width",this.width).attr("height",this.height+30).append("g").attr("transform","translate(40, 20)"),r=(l.selectAll("path.link").data(t.links(a)).enter().append("path").attr("class","link").attr("d",n),l.selectAll("g.node").data(a).enter().append("g").attr("class","node").attr("transform",function(e){return"translate(".concat(e.y,",").concat(e.x,")")}).on("mouseover",function(e){var n=_.default.pluck(i.model.get_connected_nodes(e),"id");r.filter(function(t){return void 0!==_.default.find(n,function(e){return e===t.id})}).style("fill","#f00")}).on("mouseout",function(){r.style("fill","#000")}));r.append("circle").attr("r",9),r.append("text").attr("dx",function(e){return e.children?-12:12}).attr("dy",3).attr("text-anchor",function(e){return e.children?"end":"start"}).text(function(e){return e.name})}}});e.SweepsterVisualizationView=h.default.View.extend({className:"Sweepster",helpText:"<div><h4>Getting Started</h4><ol><li>Create a parameter tree by using the icons next to the tool's parameter names to add or remove parameters.<li>Adjust the tree by using parameter inputs to select min, max, and number of samples<li>Run the tool with different settings by clicking on tree nodes</ol></div>",initialize:function(e){this.canvas_manager=new v.default.CanvasManager(this.$el.parents("body")),this.tool_param_tree_view=new T({model:this.model.get("parameter_tree")}),this.track_collection_container=(0,p.default)("<table/>").addClass("tracks"),this.model.get("parameter_tree").on("change:tree_data",this.handle_node_clicks,this);var t=this;this.model.get("tracks").each(function(e){e.get("track").view=t}),this.config=y.default.ConfigSettingCollection.from_models_and_saved_values([{key:"name",label:"Name",type:"text",default_value:""},{key:"a_color",label:"A Color",type:"color",default_value:"#FF0000"},{key:"c_color",label:"C Color",type:"color",default_value:"#00FF00"},{key:"g_color",label:"G Color",type:"color",default_value:"#0000FF"},{key:"t_color",label:"T Color",type:"color",default_value:"#FF00FF"},{key:"n_color",label:"N Color",type:"color",default_value:"#AAAAAA"},{key:"block_color",label:"Block color",type:"color"},{key:"reverse_strand_color",label:"Antisense strand color",type:"color"}],{})},render:function(){var e=new N({model:this.model.get("parameter_tree")});(0,p.default)("#left").append(e.$el);var n=this,t=n.model.get("regions"),a=(0,p.default)("<tr/>").appendTo(this.track_collection_container);t.each(function(e){a.append((0,p.default)("<th>").text(e.toString()))}),a.children().first().attr("colspan",2);var i=(0,p.default)("<div>").addClass("tiles");(0,p.default)("#right").append(i.append(this.track_collection_container)),n.model.get("tracks").each(function(e){n.add_track(e)});var o=(0,p.default)(this.helpText).addClass("help"),l=b.default.create_icon_buttons_menu([{title:(0,g.default)("Close"),icon_class:"cross-circle",on_click:function(){(0,p.default)(".tooltip").remove(),o.remove()}}]);o.prepend(l.$el.css("float","right")),(0,p.default)("#center").append(o),this.tool_param_tree_view.render(),(0,p.default)("#center").append(this.tool_param_tree_view.$el),this.handle_node_clicks();var r=b.default.create_icon_buttons_menu([{icon_class:"chevron-expand",title:"Set display mode"},{icon_class:"cross-circle",title:(0,g.default)("Close"),on_click:function(){window.top.location="".concat((0,d.getAppRoot)(),"visualizations/list")}}],{tooltip_config:{placement:"bottom"}}),s={};_.default.each(["Squish","Pack"],function(t){s[t]=function(){n.model.set("default_mode",t),n.model.get("tracks").each(function(e){e.set("mode",t)})}}),make_popupmenu(r.$el.find(".chevron-expand"),s),r.$el.attr("style","float: right"),(0,p.default)("#right .unified-panel-header-inner").append(r.$el)},get_base_color:function(e){return this.config.get_value("".concat(e.toLowerCase(),"_color"))||this.config.get_value("n_color")},run_tool_on_dataset:function(e){var t=this.model.get("tool"),n=t.get("name"),a=this.model.get("dataset");t.set_input_values(e.get("values")),p.default.when(t.rerun(a)).then(function(e){}),show_modal("Running ".concat(n," on complete dataset"),"".concat(n," is running on dataset '").concat(a.get("name"),"'. Outputs are in the dataset's history."),{Ok:function(){hide_modal()}})},add_track:function(t){var a=this,i=this.model.get("parameter_tree");a.model.add_track(t);var e=new S({model:t,canvas_manager:a.canvas_manager});return e.on("run_on_dataset",a.run_tool_on_dataset,a),a.track_collection_container.append(e.$el),e.$el.hover(function(){var e=i.get_leaf(t.get("settings").get("values")),n=_.default.pluck(i.get_connected_nodes(e),"id");m.select(a.tool_param_tree_view.$el[0]).selectAll("g.node").filter(function(t){return void 0!==_.default.find(n,function(e){return e===t.id})}).style("fill","#f00")},function(){m.select(a.tool_param_tree_view.$el[0]).selectAll("g.node").style("fill","#000")}),t},handle_node_clicks:function(){var l=this,r=this.model.get("parameter_tree"),s=this.model.get("regions");m.select(this.tool_param_tree_view.$el[0]).selectAll("g.node").on("click",function(e,t){var n=l.model.get("tool"),a=l.model.get("dataset"),i=r.get_node_settings(e),o=p.default.Deferred();10<=i.length?show_modal("Whoa there cowboy!","You clicked on a node to try ".concat(l.model.get("tool").get("name")," with ").concat(i.length," different combinations of settings. You can only run 10 jobs at a time."),{Ok:function(){hide_modal(),o.resolve(!1)}}):o.resolve(!0),p.default.when(o).then(function(e){if(e){var t=_.default.map(i,function(e){var t=new z({settings:e,regions:s,mode:l.model.get("default_mode")});return l.add_track(t),t});_.default.each(t,function(i,e){setTimeout(function(){n.set_input_values(i.get("settings").get("values")),p.default.when(n.rerun(a,s)).then(function(e){var t=e.first(),n=t.get("track_config");n.dataset=t,n.tool=null,n.prefs=l.config.to_key_value_dict();var a=w.default.object_from_template(n,l,null);a.init_for_tool_data(),i.set("track",a)})},1e4*e)})}})})}})});