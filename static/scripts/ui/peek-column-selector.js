define([],function(){"use strict";var s={renameColumns:!1,columnNames:[],commentChar:"#",hideCommentRows:!1,includePrompts:!0,topLeftContent:"Columns:"},c="peek-column-selector.change",d="control",l="control-prompt",o="selected",r="disabled",i="button",u="column-index",f="column-name";function n(e,t){var n,a=$("<td/>").html((n=e,$("<div/>").addClass(i).text(n.label))).attr("data-".concat(u),t);return e.disabled&&-1!==e.disabled.indexOf(t)&&a.addClass(r),a}function m(e,t,n){var a=e.children(".".concat(i));e.hasClass(o)?a.html(void 0!==t.selectedText?t.selectedText:t.label):a.html(void 0!==t.unselectedText?t.unselectedText:t.label)}function p(d,e){var t=n(d,e);return d.selected===e&&t.addClass(o),m(t,d),t.hasClass(r)||t.click(function(e){var t=$(this);if(!t.hasClass(o)){t.parent().children(".".concat(o)).removeClass(o).each(function(){m($(this),d)}),t.addClass(o),m(t,d);var n={},a=t.parent().attr("id"),r=t.data(u);n[a]=r,t.parents(".peek").trigger(c,n)}}),t}function h(l,e){var t=n(l,e);return l.selected&&-1!==l.selected.indexOf(e)&&t.addClass(o),m(t,l),t.hasClass(r)||t.click(function(e){var t=$(this);t.toggleClass(o),m(t,l);var n=t.parent().find(".".concat(o)).map(function(e,t){return $(t).data(u)}),a={},r=t.parent().attr("id"),d=$.makeArray(n);a[r]=d,t.parents(".peek").trigger(c,a)}),t}function C(e,t,n){var a=$("<tr/>").attr("id",t.id).addClass(d);if(n){var r=$("<td/>").addClass(l).text("".concat(t.label,":"));a.append(r)}return a.append(function(e,t){for(var n=[],a=0;a<e;a+=1)n.push(t.multiselect?h(t,a):p(t,a));return n}(e,t)),a}function t(d){d=$.extend(!0,{},s,d);var a=$(this).addClass("peek-column-selector").find("table"),r=a.find("th").length,e=a.find("tr").length,t=a.find("td[colspan]").map(function(e,t){var n=$(this);return n.text()&&n.text().match(new RegExp("^".concat(d.commentChar)))?$(this).css("color","grey").parent().get(0):null});if(d.hideCommentRows&&(t.hide(),e-=t.length),d.includePrompts){var n=$("<th/>").addClass("top-left").text(d.topLeftContent).attr("rowspan",e);a.find("tr").first().prepend(n)}var l=a.find("th:not(.top-left)").each(function(e,t){var n=$(this),a=n.text().replace(/^\d+\.*/,""),r=d.columnNames[e]||a;n.attr("data-".concat(f),r).text(e+1+(r?".".concat(r):""))});return d.renameColumns&&l.addClass("renamable-header").click(function(){var e=$(this),t=e.index()+(d.includePrompts?0:1),n=e.data(f),a=window.prompt("New column name:",n);if(null!==a&&a!==n){e.text(t+(a?".".concat(a):"")).data(f,a).attr("data-",f,a);var r=$.makeArray(e.parent().children("th:not(.top-left)").map(function(){return $(this).data(f)}));e.parents(".peek").trigger("peek-column-selector.rename",r)}}),d.controls.forEach(function(e,t){!function(e){if(e.disabled&&"array"!==$.type(e.disabled))throw new Error('"disabled" must be defined as an array of indeces: '.concat(JSON.stringify(e)));if(e.multiselect&&e.selected&&"array"!==$.type(e.selected))throw new Error('Mulitselect rows need an array for "selected": '.concat(JSON.stringify(e)));if(!e.label||!e.id)throw new Error("Peek controls need a label and id for each control row: ".concat(JSON.stringify(e)));if(e.disabled&&-1!==e.disabled.indexOf(e.selected))throw new Error("Selected column is in the list of disabled columns: ".concat(JSON.stringify(e)))}(e);var n=C(r,e,d.includePrompts);a.find("tbody").append(n)}),this}$.fn.extend({peekColumnSelector:function(e){return this.map(function(){return t.call(this,e)})}})});