define(["exports","jquery","backbone","onload/loadConfig","app","utils/localization","mvc/ui/ui-misc","mvc/form/form-view","mvc/ui/ui-table"],function(e,t,a,s,i,l,n,o,d){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=f(t),u=f(a),c=f(l),p=f(n),m=f(o),h=f(d);function f(e){return e&&e.__esModule?e:{default:e}}var b=u.default.Collection.extend({comparator:function(e,t){return e=e.get("name"),(t=t.get("name"))<e?1:e<t?-1:0}}),g=u.default.View.extend({initialize:function(e){var t=(0,i.getGalaxyInstance)(),a=this;this.active_tab="user";var l=t.currHistoryPanel&&t.currHistoryPanel.model.id;this.model=new u.default.Model,this.model.url="".concat((0,s.getAppRoot)(),"api/histories/").concat(l,"/custom_builds_metadata"),this.collection=new b,this.collection.url="".concat((0,s.getAppRoot)(),"api/users/").concat(t.user.id,"/custom_builds"),this.message=new p.default.Message({}),this.installed_builds=new p.default.Select.View({optional:!0,onchange:function(){a.installed_builds.value(null)},empty_text:"List of available builds:",error_text:"No system installed builds available."}),this.table=new h.default.View({cls:"grid",selectable:!1}),this.table.addHeader("Name"),this.table.addHeader("Key"),this.table.addHeader("Number of chroms/contigs"),this.table.addHeader(""),this.table.appendHeader(),this.setElement((0,r.default)("<div/>").append((0,r.default)("<h4/>").text("Current Custom Builds")).append(this.table.$el).append(this.$installed=(0,r.default)("<div/>").append((0,r.default)("<h4/>").text("System Installed Builds").addClass("mt-1")).append(this.installed_builds.$el)).append((0,r.default)("<h4/>").text("Add a Custom Build").addClass("mt-4")).append((0,r.default)("<span/>").addClass("row").append((0,r.default)("<div/>").addClass("col").append(this.message.$el).append(this.$form=(0,r.default)("<div/>").addClass("mt-1"))).append(this.$help=(0,r.default)("<div/>").addClass("col m-2")))),this.listenTo(this.collection,"add remove reset",function(){a._renderTable()}),this.listenTo(this.model,"change",function(){a._renderForm()}),this.collection.fetch(),this.model.fetch()},render:function(){this._renderTable(),this._renderForm()},_renderTable:function(){var t=this;this.table.delAll(),this.collection.sort(),this.collection.each(function(e){t.table.add(e.get("name")),t.table.add(e.id),t.table.add(void 0!==e.get("count")?e.get("count"):"Processing..."),t.table.add(new p.default.Button({icon:"fa-trash-o",cls:"ui-button-icon-plain",tooltip:(0,c.default)("Delete custom build."),onclick:function(){e.destroy()}}).$el),t.table.append(e.id)})},_renderForm:function(){var l=this,e="fasta",a=new m.default({inputs:[{type:"text",name:"name",label:"Name",help:"Specify a build name e.g. Hamster."},{type:"text",name:"id",label:"Key",help:"Specify a build key e.g. hamster_v1."},{name:"len",type:"conditional",test_param:{name:"type",label:"Definition",help:(0,c.default)("Provide the data source."),type:"select",value:e,data:[{value:"fasta",label:"FASTA-file from history"},{value:"file",label:"Len-file from disk"},{value:"text",label:"Len-file by copy/paste"}]},cases:[{value:"fasta",inputs:[{type:"select",name:"value",label:"FASTA-file",data:this.model.get("fasta_hdas")}]},{value:"file",inputs:[{type:"upload",name:"value",label:"Len-file",data:this.model.get("len_hdas")}]},{value:"text",inputs:[{type:"text",area:!0,name:"value",label:"Edit/Paste"}]}]}],buttons:{save:new p.default.Button({icon:"fa-save",tooltip:(0,c.default)("Create new Build"),title:(0,c.default)("Save"),cls:"btn btn-primary",onclick:function(){var e=a.data.create();e.id&&e.name?l.collection.create(e,{wait:!0,success:function(e){e.get("message")?l.message.update({message:e.get("message"),status:"warning"}):l.message.update({message:"Successfully added a new custom build.",status:"success"})},error:function(e,t){var a=t&&t.responseJSON&&t.responseJSON.err_msg;l.message.update({message:a||"Failed to create custom build.",status:"danger"})}}):l.message.update({message:"All inputs are required.",status:"danger"})}})},onchange:function(){var e=a.data.match("len|type");if(e){var t=a.field_list[e];l._renderHelp(t.value())}}});this.$form.empty().append(a.$el);var t=this.model.get("installed_builds");t&&t.length?(this.$installed.show(),this.installed_builds.update(this.model.get("installed_builds"))):this.$installed.hide(),this._renderHelp(e)},_renderHelp:function(e){this.$help.empty().addClass("alert alert-info").html("fasta"==e?this._templateFasta():this._templateLen())},_templateLen:function(){return"<h4>Length Format</h4><p>The length format is two-column, separated by whitespace, of the form:<pre>chrom/contig   length of chrom/contig</pre></p><p>For example, the first few entries of <em>mm9.len</em> are as follows:<pre>chr1    197195432\nchr2    181748087\nchr3    159599783\nchr4    155630120\nchr5    152537259</pre></p><p>Trackster uses this information to populate the select box for chrom/contig, andto set the maximum basepair of the track browser. You may either upload a .len fileof this format (Len File option), or directly enter the information into the box (Len Entry option).</p>"},_templateFasta:function(){return"<h4>FASTA format</h4><p>This is a multi-fasta file from your current history that provides the genomesequences for each chromosome/contig in your build.</p><p>Here is a snippet from an example multi-fasta file:<pre>>chr1\nATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\n\n>chr2\nGGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\n\n...</pre></p>"}});e.default={View:g}});