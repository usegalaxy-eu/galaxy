define(["exports","underscore","jquery","backbone","onload/loadConfig","app","utils/localization","utils/utils","mvc/ui/ui-misc","mvc/ui/ui-modal","mvc/tool/tool-form-base","mvc/webhooks"],function(e,t,o,i,l,h,a,n,r,s,u,c){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var d=w(t),f=w(o),p=w(i),m=w(a),b=w(n),_=w(r),g=w(s),v=w(u),y=w(c);function w(e){return e&&e.__esModule?e:{default:e}}var j=p.default.View.extend({initialize:function(e){var r=(0,h.getGalaxyInstance)(),s=this;this.modal=r.modal||new g.default.View,this.form=new v.default(b.default.merge({listen_to_history:!0,always_refresh:!1,buildmodel:function(i,a){var n=a.model.attributes,e="",t={},o=n.job_id;o?e="".concat((0,l.getAppRoot)(),"api/jobs/").concat(o,"/build_for_rerun"):(e="".concat((0,l.getAppRoot)(),"api/tools/").concat(n.id,"/build"),(t=f.default.extend({},r.params)).tool_id&&delete t.tool_id),n.version&&(t.tool_version=n.version),b.default.get({url:e,data:t,success:function(e){e.display?(a.model.set(e),s._customize(a),r.emit.debug("tool-form-base::_buildModel()","Initial tool model ready.",e),i.resolve()):window.location=(0,l.getAppRoot)()},error:function(e,t){var o=e&&e.err_msg||"Uncaught error.";401==t?window.location="".concat((0,l.getAppRoot)(),"user/login?").concat(f.default.param({redirect:"".concat((0,l.getAppRoot)(),"?tool_id=").concat(n.id)})):a.$el.is(":empty")?a.$el.prepend(new _.default.Message({message:o,status:"danger",persistent:!0}).$el):r.modal&&r.modal.show({title:(0,m.default)("Tool request failed"),body:o,buttons:{Close:function(){r.modal.hide()}}}),r.emit.debug("tool-form-base::_buildModel()","Initial tool model request failed.",e),i.reject()}})},postchange:function(t,o){var e={tool_id:o.model.get("id"),tool_version:o.model.get("version"),inputs:f.default.extend(!0,{},o.data.create())};o.wait(!0),r.emit.debug("tool-form::postchange()","Sending current state.",e),b.default.request({type:"POST",url:"".concat((0,l.getAppRoot)(),"api/tools/").concat(o.model.get("id"),"/build"),data:e,success:function(e){o.update(e),o.wait(!1),r.emit.debug("tool-form::postchange()","Received new model.",e),t.resolve()},error:function(e){r.emit.debug("tool-form::postchange()","Refresh request failed.",e),t.reject()}})}},e)),this.deferred=this.form.deferred,this.setElement("<div/>"),this.$el.append(this.form.$el)},_customize:function(e){var t=this,o=e.model.attributes,i=new _.default.Button({icon:"fa-check",tooltip:"Execute: ".concat(o.name," (").concat(o.version,")"),title:(0,m.default)("Execute"),cls:"btn btn-primary",wait_cls:"btn btn-info",onclick:function(){i.wait(),e.portlet.disable(),t.submit(o,function(){i.unwait(),e.portlet.enable()})}});if(o.buttons={execute:i},o.job_id&&o.job_remap){if("job_produced_collection_elements"===o.job_remap)var a="Replace elements in collection ?",n="The previous run of this tool failed. Use this option to replace the failed element(s) in the dataset collection that were produced during the previous tool run.";else a="Resume dependencies from this job ?",n="The previous run of this tool failed and other tools were waiting for it to finish successfully. Use this option to resume those tools using the new output(s) of this tool run.";o.inputs.push({label:a,name:"rerun_remap_job_id",type:"select",display:"radio",ignore:"__ignore__",value:"__ignore__",options:[["Yes",o.job_id],["No","__ignore__"]],help:n})}var r=(0,h.getGalaxyInstance)(),s={};r.user.attributes.preferences&&"extra_user_preferences"in r.user.attributes.preferences&&(s=JSON.parse(r.user.attributes.preferences.extra_user_preferences)),"true"===("use_cached_job|use_cached_job_checkbox"in s&&s["use_cached_job|use_cached_job_checkbox"])&&o.inputs.push({label:"BETA: Attempt to re-use jobs with identical parameters ?",help:"This may skip executing jobs that you have already run",name:"use_cached_job",type:"select",display:"radio",ignore:"__ignore__",value:"__ignore__",options:[["No",!1],["Yes",!0]]})},submit:function(e,a){var n=(0,h.getGalaxyInstance)(),r=this,s={tool_id:e.id,tool_version:e.version,inputs:this.form.data.create()};if(this.form.trigger("reset"),!r.validate(s))return n.emit.debug("tool-form::submit()","Submission canceled. Validation failed."),void(a&&a());if(e.action!=="".concat((0,l.getAppRoot)(),"tool_runner/index")){var o=(0,f.default)("<form/>").attr({action:e.action,method:e.method,enctype:e.enctype});return d.default.each(s.inputs,function(e,t){o.append((0,f.default)("<input/>").attr({name:t,value:e}))}),o.hide().appendTo("body").submit().remove(),void(a&&a())}n.emit.debug("tool-form::submit()","Validation complete.",s),b.default.request({type:"POST",url:"".concat((0,l.getAppRoot)(),"api/tools"),data:s,success:function(e){if(a&&a(),r.$el.children().hide(),r.$el.append(r._templateSuccess(e,s)),e.jobs&&0<e.jobs.length){r.$el.append((0,f.default)("<div/>",{id:"webhook-view"}));new y.default.WebhookView({type:"tool",toolId:s.tool_id})}n&&n.currHistoryPanel&&n.currHistoryPanel.refreshContents()},error:function(e){a&&a(),n.emit.debug("tool-form::submit","Submission failed.",e);var t=!1;if(e&&e.err_data){var o=r.form.data.matchResponse(e.err_data);for(var i in o){r.form.highlight(i,o[i]),t=!0;break}}t||r.modal.show({title:(0,m.default)("Job submission failed"),body:r._templateError(s,e&&e.err_msg),buttons:{Close:function(){r.modal.hide()}}})}})},validate:function(e){var t=this,o=(0,h.getGalaxyInstance)(),i=e.inputs,a=-1,n=null;for(var r in i){var s=i[r],l=this.form.data.match(r),u=this.form.field_list[l],c=this.form.input_list[l];if(l&&c&&u){if(!c.optional&&null==s)return this.form.highlight(l),!1;if(u.validate){var d=u.validate(function(){t.form.trigger("reset")});if(!d.valid)return this.form.highlight(l,d.message),!1}if(s&&s.batch){var f=s.values.length,p=0<f&&s.values[0]&&s.values[0].src;if(p)if(null===n)n=p;else if(n!==p)return this.form.highlight(l,"Please select either dataset or dataset list fields for all batch mode fields."),!1;if(-1===a)a=f;else if(a!==f)return this.form.highlight(l,"Please make sure that you select the same number of inputs for all batch mode fields. This field contains <b>".concat(f,"</b> selection(s) while a previous field contains <b>").concat(a,"</b>.")),!1}}else o.emit.debug("tool-form::validate()","Retrieving input objects failed.")}return!0},_getInputs:function(e){var t=[],o={};for(var i in e.inputs){var a=e.inputs[i];if(a&&f.default.isArray(a.values)){var n=!0,r=!1,s=void 0;try{for(var l,u=a.values[Symbol.iterator]();!(n=(l=u.next()).done);n=!0){var c=l.value;c.src&&!o[c.id]&&(t.push(c),o[c.id]=!0)}}catch(e){r=!0,s=e}finally{try{n||null==u.return||u.return()}finally{if(r)throw s}}}}return t},_templateRow:function(e,t){var o=2<arguments.length&&void 0!==arguments[2]?arguments[2]:3,i="";if(e.sort(function(e,t){return t.hid-e.hid}),0<e.length){i+="<p>".concat(t,":</p>");var a=!0,n=!1,r=void 0;try{for(var s,l=e[Symbol.iterator]();!(a=(s=l.next()).done);a=!0){var u=s.value,c=0<o?"".concat(u.hid,": ").concat(d.default.escape(u.name)):"...";if(i+='<p class="messagerow">\n                            <b>'.concat(c,"</b>\n                          </p>"),o--<=0)break}}catch(e){n=!0,r=e}finally{try{a||null==l.return||l.return()}finally{if(n)throw r}}}return i},_templateSuccess:function(e,t){var o=e.jobs.length;if(0<o){var i=this._getInputs(t),a=i.length,n=e.outputs.length,r=1<o?"".concat(o," jobs"):"1 job",s=1<a?"".concat(a," inputs"):"this input",l=1<n?"".concat(n," outputs"):"this output",u=this.form.model.get("name");return'<div class="donemessagelarge">\n                        <p>\n                            Executed <b>'.concat(u,"</b> and successfully added ").concat(r," to the queue.\n                        </p>\n                        ").concat(this._templateRow(i,"The tool uses ".concat(s)),"\n                        ").concat(this._templateRow(e.outputs,"It produces ".concat(l)),"\n                        <p>\n                            You can check the status of queued jobs and view the resulting data by refreshing the History panel. When the job has been run the status will change from 'running' to 'finished' if completed successfully or 'error' if problems were encountered.\n                        </p>\n                    </div>")}return this._templateError(e,"Invalid success response. No jobs found.")},_templateError:function(e,t){return(0,f.default)("<div/>").addClass("errormessagelarge").append((0,f.default)("<p/>").text("The server could not complete the request. Please contact the Galaxy Team if this error persists. ".concat(t||""))).append((0,f.default)("<pre/>").text(JSON.stringify(e,null,4)))}});e.default={View:j}});