define(["exports","underscore","mvc/dataset/states","mvc/collection/collection-li","mvc/collection/collection-view","mvc/history/history-item-li","utils/localization"],function(t,e,s,n,a,i,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=u(e),c=u(s),l=u(n),m=u(a),d=u(i),p=u(o);function u(t){return t&&t.__esModule?t:{default:t}}var v,h=l.default.DCListItemView,g=h.extend({className:"".concat(h.prototype.className," history-content"),_setUpListeners:function(){var s=this;h.prototype._setUpListeners.call(this);var t=function(t,e){s.render(0)};this.model.jobStatesSummary&&this.listenTo(this.model.jobStatesSummary,"change",t),this.listenTo(this.model,{"change:tags change:visible change:state":t})},_getFoldoutPanelClass:function(){return m.default.CollectionView},_swapNewRender:function(t){var e;h.prototype._swapNewRender.call(this,t);var s=this.model.jobStatesSummary;e=s?s.new()?"loading":s.errored()?"error":s.terminal()?"ok":s.running()?"running":"queued":this.model.get("job_source_id")?"loading":this.model.get("populated_state")?c.default.OK:c.default.RUNNING,this.$el.addClass("state-".concat(e));var n=this.stateDescription();return this.$(".state-description").html(n),this.$el},stateDescription:function(){var t=this.model,e=t.get("job_source_type"),s=m.default.collectionTypeDescription(t),n=m.default.collectionDescription(t),a=t.jobStatesSummary;if(e&&"Job"!=e){if(a&&a.hasDetails()){var i=a.new(),o=i?null:a.jobCount();if(i)return'\n                        <div class="progress state-progress">\n                            <span class="note">Creating jobs.<span class="blinking">..</span></span>\n                            <div class="progress-bar info" style="width:100%">\n                        </div>';if(a.errored()){var r=a.numInError();return"a ".concat(s," with ").concat(r," / ").concat(o," jobs in error")}if(a.terminal())return n;var c=a.states().running||0,l=(a.states().ok||0)/(1*o),d=c/(1*o),p=1-l-d,u=o&&1<o?"".concat(o," jobs"):"a job";return'\n                        <div class="progress state-progress">\n                            <span class="note">'.concat(u," generating a ").concat(s,'</span>\n                            <div class="progress-bar ok" style="width:').concat(100*l,'%"></div>\n                            <div class="progress-bar running" style="width:').concat(100*d,'%"></div>\n                            <div class="progress-bar new" style="width:').concat(100*p,'%">\n                        </div>')}return'\n                    <div class="progress state-progress">\n                        <span class="note">Loading job data for '.concat(s,'.<span class="blinking">..</span></span>\n                        <div class="progress-bar info" style="width:100%">\n                    </div>')}return n},toString:function(){var t=this.model?"".concat(this.model):"(no model)";return"HDCAListItemView(".concat(t,")")}});g.prototype.templates=(v=r.default.extend({},h.prototype.templates.warnings,{hidden:function(t){!t.visible&&'<div class="hidden-msg warningmessagesmall">'.concat((0,p.default)("This collection has been hidden"),"</div>")}}),r.default.extend({},h.prototype.templates,{warnings:v,titleBar:function(t){return'\n        <div class="title-bar clear" tabindex="0">\n            <span class="state-icon"></span>\n            <div class="title">\n                <span class="hid">'.concat(t.hid,'</span>\n                <span class="name">').concat(r.default.escape(t.name),'</span>\n            </div>\n            <div class="state-description">\n            </div>\n            ').concat(d.default.nametagTemplate(t),"\n        </div>\n    ")}})),t.default={HDCAListItemView:g}});