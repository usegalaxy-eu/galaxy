define(["exports","mvc/dataset/dataset-model","mvc/dataset/dataset-list","mvc/ui/ui-modal","mvc/base-mvc","utils/localization"],function(e,t,s,l,a,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=u(t),o=u(s),c=u(l),d=u(a),r=u(i);function u(e){return e&&e.__esModule?e:{default:e}}function h(e,t,s){return e.filter(function(e){return console.debug(e),!e.deleted&&e.visible&&(!s||void 0===e.collection_type)&&function(e,t){for(var s in t)if(t.hasOwnProperty(s)&&e[s]!==t[s])return!1;return!0}(e,t)})}var f=function(e,t){var s,l,a;(t=_.defaults(t||{},{datasetsOnly:!0,where:{state:"ok"},multiselect:!1,selected:[]})).title=t.title||(t.multiselect?(0,r.default)("Choose datasets:"):(0,r.default)("Choose a dataset:"));var i=jQuery.Deferred();if(!(e=(t.filter||h)(e,t.where,t.datasetsOnly)).length)return i.reject("No matches found");return t.multiselect&&((a={})[(0,r.default)("Ok")]=function(){i.resolve(l.getSelectedModels().map(function(e){return e.toJSON()}))}),(s=new c.default.View({height:"auto",buttons:a,closing_events:!0,closing_callback:function(){i.resolve(null)},body:['<div class="list-panel"></div>'].join("")})).$(".modal-header").remove(),s.$(".modal-footer").css("margin-top","0px"),(l=new o.default.DatasetList({title:t.title,subtitle:t.subtitle||(0,r.default)(["Click the checkboxes on the right to select datasets. ","Click the datasets names to see their details. "].join("")),el:s.$body.find(".list-panel"),selecting:!0,selected:t.selected,collection:new n.default.DatasetAssociationCollection(e)})).once("rendered:initial",function(){s.show(),s.$el.addClass("dataset-choice-modal")}),t.multiselect||(l.on("rendered",function(){l.$(".list-actions").hide()}),l.on("view:selected",function(e){i.resolve([e.model.toJSON()])})),l.render(0),i.always(function(){s.hide()})},m=Backbone.View.extend(d.default.LoggableMixin).extend({_logNamespace:"dataset",className:"dataset-choice",initialize:function(e){this.debug("".concat(this,"(DatasetChoice).initialize:"),e),this.label=void 0!==e.label?(0,r.default)(e.label):"",this.where=e.where,this.datasetsOnly=void 0===e.datasetsOnly||e.datasetsOnly,this.datasetJSON=e.datasetJSON||[],this.selected=e.selected||[],this._setUpListeners()},_setUpListeners:function(){},render:function(){var e=this.toJSON();return this.$el.html(this._template(e)),this.$(".selected").replaceWith(this._renderSelected(e)),this},_template:function(e){return _.template(["<label>",'<span class="prompt"><%- label %></span>','<div class="selected"></div>',"</label>"].join(""))(e)},_renderSelected:function(e){return e.selected.length?$(_.template(['<div class="selected">','<span class="title"><%- selected.hid %>: <%- selected.name %></span>','<span class="subtitle">',"<i><%- selected.misc_blurb %></i>","<i>","".concat((0,r.default)("format"),": "),"<%- selected.file_ext %></i>","<i><%- selected.misc_info %></i>","</span>","</div>"].join(""),{variable:"selected"})(e.selected[0])):$(['<span class="none-selected-msg">(',(0,r.default)("click to select a dataset"),")</span>"].join(""))},toJSON:function(){var t=this;return{label:t.label,datasets:t.datasetJSON,selected:_.compact(_.map(t.selected,function(e){return _.findWhere(t.datasetJSON,{id:e})}))}},events:{click:"chooseWithModal"},chooseWithModal:function(){var t=this;return this._createModal().done(function(e){e?(t.selected=_.pluck(e,"id"),t.trigger("selected",t,e),t.render()):t.trigger("cancelled",t)}).fail(function(){t.trigger("error",t,arguments)})},_createModal:function(){return new f(this.datasetJSON,this._getModalOptions())},_getModalOptions:function(){return{title:this.label,multiselect:!1,selected:this.selected,where:this.where,datasetsOnly:this.datasetsOnly}},toString:function(){return"DatasetChoice(".concat(this.selected,")")}}),p=m.extend({className:"".concat(m.prototype.className," multi"),cells:{hid:(0,r.default)("History #"),name:(0,r.default)("Name"),misc_blurb:(0,r.default)("Summary"),file_ext:(0,r.default)("Format"),genome_build:(0,r.default)("Genome"),tags:(0,r.default)("Tags"),annotation:(0,r.default)("Annotation")},initialize:function(e){this.showHeaders=void 0===e.showHeaders||e.showHeaders,this.cells=e.cells||this.cells,m.prototype.initialize.call(this,e)},_renderSelected:function(e){return e.selected.length?$(_.template(['<table class="selected">',"<% if( json.showHeaders ){ %>","<thead><tr>","<% _.map( json.cells, function( val, key ){ %>","<th><%- val %></th>","<% }); %>","</tr></thead>","<% } %>","<tbody>","<% _.map( json.selected, function( selected ){ %>","<tr>","<% _.map( json.cells, function( val, key ){ %>",'<td class="cell-<%- key %>"><%- selected[ key ] %></td>',"<% }) %>","</tr>","<% }); %>","</tbody>","</table>"].join(""),{variable:"json"})(e)):$(['<span class="none-selected-msg">(',(0,r.default)("click to select a dataset"),")</span>"].join(""))},toJSON:function(){return _.extend(m.prototype.toJSON.call(this),{showHeaders:this.showHeaders,cells:this.cells})},_getModalOptions:function(){return _.extend(m.prototype._getModalOptions.call(this),{multiselect:!0})},toString:function(){return"DatasetChoice(".concat(this.selected,")")}});e.default={DatasetChoiceModal:f,DatasetChoice:m,MultiDatasetChoice:p}});