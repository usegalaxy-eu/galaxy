define(["exports","jquery","backbone","onload/loadConfig","app","utils/localization","utils/utils","mvc/form/form-view","mvc/tool/tool-form-base"],function(e,t,a,r,u,n,o,l,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=_(t),c=_(a),f=_(n),p=_(o),d=_(l),m=_(i);function _(e){return e&&e.__esModule?e:{default:e}}var g=c.default.View.extend({initialize:function(e){var t=this,a=e.node;this.form=new d.default(p.default.merge(e,{onchange:function(){p.default.request({type:"POST",url:"".concat((0,r.getAppRoot)(),"api/workflows/build_module"),data:{id:a.id,type:a.type,content_id:a.content_id,inputs:t.form.data.create()},success:function(e){a.update_field_data(e)}})}})),b(this.form),this.form.render()}}),h=c.default.View.extend({initialize:function(e){var l=this,i=e.node;this.form=new m.default(p.default.merge(e,{text_enable:"Set in Advance",text_disable:"Set at Runtime",narrow:!0,initial_errors:!0,cls:"ui-portlet-section",initialmodel:function(e,t){l._customize(t),e.resolve()},buildmodel:function(e,t){t.model.get("postchange")(e,t)},postchange:function(t,a){var n=(0,u.getGalaxyInstance)(),e=a.model.attributes,o={tool_id:e.id,tool_version:e.version,type:"tool",inputs:s.default.extend(!0,{},a.data.create())};n.emit.debug("tool-form-workflow::postchange()","Sending current state.",o),p.default.request({type:"POST",url:"".concat((0,r.getAppRoot)(),"api/workflows/build_module"),data:o,success:function(e){a.model.set(e.config_form),l._customize(a),a.update(e.config_form),a.errors(e.config_form),i.update_field_data(e),n.emit.debug("tool-form-workflow::postchange()","Received new model.",e),t.resolve()},error:function(e){n.emit.debug("tool-form-workflow::postchange()","Refresh request failed.",e),t.reject()}})}}))},_customize:function(e){var t=e.model.attributes;p.default.deepeach(t.inputs,function(e){e.type&&(e.connectable=!0,-1!=["data","data_collection"].indexOf(e.type)?(e.type="hidden",e.info="Data input '".concat(e.name,"' (").concat(p.default.textify(e.extensions),")"),e.value={__class__:"RuntimeValue"}):e.fixed||(e.collapsible_value={__class__:"RuntimeValue"},e.is_workflow=e.options&&0===e.options.length||-1!=["integer","float"].indexOf(e.type)))}),p.default.deepeach(t.inputs,function(e){"conditional"===e.type&&(e.connectable=!1,e.test_param.collapsible_value=void 0)}),function(e){var t=e.model.attributes,a=t.inputs,n=t.node,o=n.post_job_actions,l=n.output_terminals&&Object.keys(n.output_terminals)[0];if(l)for(var i in a.push({name:"pja__".concat(l,"__EmailAction"),label:"Email notification",type:"boolean",value:String(Boolean(o["EmailAction".concat(l)])),ignore:"false",help:(0,f.default)("An email notification will be sent when the job has completed."),payload:{host:window.location.host}}),a.push({name:"pja__".concat(l,"__DeleteIntermediatesAction"),label:"Output cleanup",type:"boolean",value:String(Boolean(o["DeleteIntermediatesAction".concat(l)])),ignore:"false",help:"Upon completion of this step, delete non-starred outputs from completed workflow steps if they are no longer required as inputs."}),n.output_terminals){var r=n.output_terminals[i].label||i;a.push(v(i,r,t))}}(e),b(e)}});function b(l){var e=l.model.attributes,i=e.workflow,r=e.node;e.inputs.unshift({type:"text",name:"__annotation",label:"Annotation",fixed:!0,value:r.annotation,area:!0,help:"Add an annotation or notes to this step. Annotations are available when a workflow is viewed."}),e.inputs.unshift({type:"text",name:"__label",label:"Label",value:r.label,help:(0,f.default)("Add a step label."),fixed:!0,onchange:function(e){var t=!1;for(var a in i.nodes){var n=i.nodes[a];if(n.label&&n.label==e&&n.id!=r.id){t=!0;break}}var o=l.data.match("__label");l.element_list[o].model.set("error_text",t&&"Duplicate label. Please fix this before saving the workflow."),l.trigger("change")}})}function v(t,e,a){var n=[],o=[],l=a.datatypes,i=a.node,r=a.workflow;for(var u in l)n.push({0:l[u],1:l[u]});for(var u in i.input_terminals)o.push({name:i.input_terminals[u].name,label:i.input_terminals[u].label});var s,c,p=(s='This action will rename the output dataset. Click <a href="https://galaxyproject.org/learn/advanced-workflow/variables/">here</a> for more information. Valid input variables are:',s+="\n        <ul>\n            ".concat(o.map(function(e){return"<li><strong>".concat(e.name.replace(/\|/g,"."),"</strong>\n                                                         ").concat(e.label?"(".concat(e.label,")"):"","\n                                             </li>")}).join(""),"\n        </ul>\n    "));n.sort(function(e,t){return e.label>t.label?1:e.label<t.label?-1:0}),n.unshift({0:"Sequences",1:"Sequences"}),n.unshift({0:"Roadmaps",1:"Roadmaps"}),n.unshift({0:"Leave unchanged",1:"__empty__"});var d={title:"Configure Output: '".concat(e,"'"),type:"section",flat:!0,inputs:[{label:"Label",type:"text",value:(c=i.getWorkflowOutput(t))&&c.label||"",help:"This will provide a short name to describe the output - this must be unique across workflows.",onchange:function(e){r.attemptUpdateOutputLabel(i,t,e)}},{action:"RenameDatasetAction",pja_arg:"newname",label:"Rename dataset",type:"text",value:"",ignore:"",help:p},{action:"ChangeDatatypeAction",pja_arg:"newtype",label:"Change datatype",type:"select",ignore:"__empty__",value:"__empty__",options:n,help:"This action will change the datatype of the output to the indicated value."},{action:"TagDatasetAction",pja_arg:"tags",label:"Add Tags",type:"text",value:"",ignore:"",help:"This action will set tags for the dataset."},{action:"RemoveTagDatasetAction",pja_arg:"tags",label:"Remove Tags",type:"text",value:"",ignore:"",help:"This action will remove tags for the dataset."},{title:(0,f.default)("Assign columns"),type:"section",flat:!0,inputs:[{action:"ColumnSetAction",pja_arg:"chromCol",label:"Chrom column",type:"integer",value:"",ignore:""},{action:"ColumnSetAction",pja_arg:"startCol",label:"Start column",type:"integer",value:"",ignore:""},{action:"ColumnSetAction",pja_arg:"endCol",label:"End column",type:"integer",value:"",ignore:""},{action:"ColumnSetAction",pja_arg:"strandCol",label:"Strand column",type:"integer",value:"",ignore:""},{action:"ColumnSetAction",pja_arg:"nameCol",label:"Name column",type:"integer",value:"",ignore:""}],help:"This action will set column assignments in the output dataset. Blank fields are ignored."}]};return function e(t,a,n,o){var l=o.node.post_job_actions;for(var i in(a=a||[]).push(t),t.inputs){var r=t.inputs[i];if(r.action){if(r.name="pja__".concat(n,"__").concat(r.action),r.pja_arg&&(r.name+="__".concat(r.pja_arg)),r.payload)for(var u in r.payload)r.payload["".concat(r.name,"__").concat(u)]=r.payload[u],delete r.payload[u];var s=l[r.action+n];if(s){for(var c in a)a[c].expanded=!0;r.pja_arg?r.value=s.action_arguments&&s.action_arguments[r.pja_arg]||r.value:r.value="true"}}r.inputs&&e(r,a.slice(0),n,o)}}(d,[],t,a),d}e.default={Default:g,Tool:h}});