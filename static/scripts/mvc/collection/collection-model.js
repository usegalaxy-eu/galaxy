define(["exports","underscore","onload/loadConfig","mvc/dataset/dataset-model","mvc/base-mvc","utils/utils","utils/localization"],function(e,t,n,i,o,l,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var a=u(t),c=u(i),r=u(o),d=u(l);u(s);function u(e){return e&&e.__esModule?e:{default:e}}var h={defaults:{model_class:"DatasetCollectionElement",element_identifier:null,element_index:null,element_type:null},_mergeObject:function(e){var t=e.object,n=this.elementId;return t&&(n=e.object.id,delete e.object.id),a.default.extend(e,e.object,{element_id:n}),delete e.object,e},constructor:function(e,t){e=this._mergeObject(e),this.idAttribute="element_id",Backbone.Model.apply(this,arguments)},parse:function(e,t){var n=e;return n=this._mergeObject(n)}},f=Backbone.Model.extend(r.default.LoggableMixin).extend(h).extend({_logNamespace:"collections"}),m=Backbone.Collection.extend(r.default.LoggableMixin).extend({_logNamespace:"collections",model:f,toString:function(){return["DatasetCollectionElementCollection(",this.length,")"].join("")}}),g=c.default.DatasetAssociation.extend(r.default.mixin(h,{url:function(){if(!this.has("history_id"))return console.warn("no endpoint for non-hdas within a collection yet"),"".concat((0,n.getAppRoot)(),"api/datasets");var e=this._getDatasetId(),t="".concat((0,n.getAppRoot)(),"api/histories/").concat(this.get("history_id"),"/contents/").concat(e);return t},_getDatasetId:function(){return this.get("element_id")},defaults:a.default.extend({},c.default.DatasetAssociation.prototype.defaults,h.defaults),_downloadQueryParameters:function(){var e=this.get("file_ext")||"data",t=this.get("element_identifier"),n=this.get("parent_hdca_id");return"?to_ext=".concat(e,"&hdca_id=").concat(n,"&element_identifier=").concat(t)},constructor:function(e,t){this.debug("\t DatasetDCE.constructor:",e,t),h.constructor.call(this,e,t)},hasDetails:function(){return this.elements&&this.elements.length},toString:function(){this.get("element_identifier");return"DatasetDCE({objStr})"}})),_=m.extend({model:g,toString:function(){return["DatasetDCECollection(",this.length,")"].join("")}}),p=Backbone.Model.extend(r.default.LoggableMixin).extend(r.default.SearchableModelMixin).extend({_logNamespace:"collections",defaults:{collection_type:null,deleted:!1},collectionClass:function(){return 0<this.attributes.collection_type.indexOf(":")?D:_},initialize:function(e,t){this.debug("".concat(this,"(DatasetCollection).initialize:"),e,t,this),this.elements=this._createElementsModel(),this.on("change:elements",function(){this.log("change:elements"),this.elements=this._createElementsModel()})},_createElementsModel:function(){var e=this.collectionClass();this.debug("".concat(this,"._createElementsModel"),e,this.get("elements"),this.elements);var t=this.get("elements")||[];this.unset("elements",{silent:!0});var n=this.get("parent_hdca_id")||this.get("id");return a.default.each(t,function(e,t){a.default.extend(e,{parent_hdca_id:n})}),this.elements=new e(t),this.elements},toJSON:function(){var e=Backbone.Model.prototype.toJSON.call(this);return this.elements&&(e.elements=this.elements.toJSON()),e},inReadyState:function(){var e=this.get("populated");return this.isDeletedOrPurged()||e},hasDetails:function(){return 0!==this.elements.length},getVisibleContents:function(e){return this.elements},parse:function(e,t){var n=Backbone.Model.prototype.parse.call(this,e,t);return n.create_time&&(n.create_time=new Date(n.create_time)),n.update_time&&(n.update_time=new Date(n.update_time)),n},delete:function(e,t,n){return e=e||!1,t=t||!1,this.get("deleted")?jQuery.when():(n=d.default.merge(n,{method:"delete"}),this.save({deleted:!0,recursive:e,purge:t},n))},undelete:function(e){return this.get("deleted")?this.save({deleted:!1},e):jQuery.when()},isDeletedOrPurged:function(){return this.get("deleted")||this.get("purged")},searchAttributes:["name","tags"],toString:function(){var e=[this.get("id"),this.get("name")||this.get("element_identifier")];return"DatasetCollection(".concat(e.join(","),")")}}),b=p.extend(r.default.mixin(h,{constructor:function(e,t){this.debug("\t NestedDCDCE.constructor:",e,t),h.constructor.call(this,e,t)},toString:function(){return["NestedDCDCE(",this.object?"".concat(this.object):this.get("element_identifier"),")"].join("")}})),D=m.extend({model:b,toString:function(){return["NestedDCDCECollection(",this.length,")"].join("")}});e.default={DatasetCollection:p}});