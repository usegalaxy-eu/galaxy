define(["exports","underscore","backbone","onload/loadConfig","app","utils/localization","utils/utils","libs/toastr","mvc/library/library-model","mvc/ui/ui-select","mvc/collection/list-collection-creator","mvc/collection/pair-collection-creator","mvc/collection/list-of-pairs-collection-creator","mvc/history/hdca-model","libs/jquery/jstree"],function(e,t,i,d,p,o,a,s,l,r,n,c,h,u){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var m=C(t),f=C(i),_=C(o),b=C(a),g=C(s),y=C(l),v=C(r),w=C(n),k=C(c),x=C(h),I=C(u);function C(e){return e&&e.__esModule?e:{default:e}}var F=f.default.View.extend({el:"#center",events:{"click .toolbtn-create-folder":"createFolderFromModal","click .toolbtn-bulk-import":"importToHistoryModal","click .include-deleted-datasets-chk":"checkIncludeDeleted","click .toolbtn-bulk-delete":"deleteSelectedItems","click .toolbtn-show-locinfo":"showLocInfo","click .page-size-prompt":"showPageSizePrompt","click .toolbtn-collection-import":"showCollectionSelect"},defaults:{can_add_library_item:!1,contains_file_or_folder:!1,chain_call_control:{total_number:0,failed_number:0},disabled_jstree_element:"folders"},modal:null,jstree:null,histories:null,select_genome:null,select_extension:null,list_extensions:[],auto:{id:"auto",text:"Auto-detect",description:"This system will try to detect the file type automatically. If your file is not detected properly as one of the known formats, it most likely means that it has some format problems (e.g., different number of columns on different rows). You can still coerce the system to set your data to the format you think it should be. You can also upload compressed files, which will automatically be decompressed."},list_genomes:[],initialize:function(e){this.options=m.default.defaults(e||{},this.defaults),this.fetchExtAndGenomes(),this.render()},render:function(e){this.options=m.default.extend(this.options,e);var t=(0,p.getGalaxyInstance)(),i=this.templateToolBar(),o={id:this.options.id,is_admin:!1,is_anonym:!0,multiple_add_dataset_options:!1};t.user&&(o.is_admin=t.user.isAdmin(),o.is_anonym=t.user.isAnonymous(),null===t.config.user_library_import_dir&&!1===t.config.allow_library_path_paste&&null===t.config.library_import_dir||(o.multiple_add_dataset_options=!0)),this.$el.html(i(o))},renderPaginator:function(e){this.options=m.default.extend(this.options,e);var t=(0,p.getGalaxyInstance)(),i=this.templatePaginator();$("body").find(".folder-paginator").html(i({id:this.options.id,show_page:parseInt(this.options.show_page),page_count:parseInt(this.options.page_count),total_items_count:this.options.total_items_count,items_shown:this.options.items_shown,folder_page_size:t.libraries.preferences.get("folder_page_size")}))},configureElements:function(e){this.options=m.default.extend(this.options,e);var t=(0,p.getGalaxyInstance)();!0===this.options.can_add_library_item?$(".add-library-items").show():$(".add-library-items").hide(),!0===this.options.contains_file_or_folder&&t.user?t.user.isAnonymous()?($(".dataset-manipulation").show(),$(".logged-dataset-manipulation").hide()):($(".logged-dataset-manipulation").show(),$(".dataset-manipulation").show()):($(".logged-dataset-manipulation").hide(),$(".dataset-manipulation").hide()),this.$el.find('[data-toggle="tooltip"]').tooltip({trigger:"hover"})},createFolderFromModal:function(e){var t=this;e.preventDefault(),e.stopPropagation();var i=(0,p.getGalaxyInstance)(),o=this.templateNewFolderInModal();this.modal=i.modal,this.modal.show({closing_events:!0,title:(0,_.default)("Create New Folder"),body:o(),buttons:{Create:function(){t.createNewFolderEvent()},Close:function(){i.modal.hide()}}})},createNewFolderEvent:function(){var i=(0,p.getGalaxyInstance)(),e=this.serializeNewFolder();if(this.validateNewFolder(e)){var t,o=new y.default.FolderAsModel,a=f.default.history.fragment.split("/");t=-1<a.indexOf("page")?a[a.length-3]:a[a.length-1],o.url=o.urlRoot+t,o.save(e,{success:function(e){i.modal.hide(),g.default.success("Folder created."),e.set({type:"folder"}),i.libraries.folderListView.collection.add(e)},error:function(e,t){i.modal.hide(),void 0!==t.responseJSON?g.default.error(t.responseJSON.err_msg):g.default.error("An error occurred.")}})}else g.default.error("Folder's name is missing.");return!1},serializeNewFolder:function(){return{name:$("input[name='Name']").val(),description:$("input[name='Description']").val()}},validateNewFolder:function(e){return""!==e.name},importToHistoryModal:function(e){var t=this;e.preventDefault();var i=(0,p.getGalaxyInstance)(),o=this.findCheckedRows(),a=this.templateImportIntoHistoryModal();0===o.length?g.default.info("You must select some datasets first."):this.fetchUserHistories().done(function(){t.modal=i.modal,t.modal.show({closing_events:!0,title:(0,_.default)("Import into History"),body:a({histories:t.histories.models}),buttons:{Import:function(){t.importAllIntoHistory()},Close:function(){i.modal.hide()}}})}).fail(function(e,t){void 0!==t.responseJSON?g.default.error(t.responseJSON.err_msg):g.default.error("An error occurred.")})},fetchUserHistories:function(){return this.histories=new y.default.GalaxyHistories,this.histories.fetch()},importAllIntoHistory:function(){var t=this;this.modal.disableButton("Import");var e=this.modal.$("input[name=history_name]").val();if(""!==e)this.createNewHistory(e).done(function(e){t.processImportToHistory(e.id,e.name)}).fail(function(e,t,i){g.default.error("An error occurred.")}).always(function(){t.modal.enableButton("Import")});else{var i=$("select[name=import_to_history] option:selected").val(),o=$("select[name=import_to_history] option:selected").text();this.processImportToHistory(i,o),this.modal.enableButton("Import")}},createNewHistory:function(e){return $.post("".concat((0,d.getAppRoot)(),"api/histories"),{name:e})},processImportToHistory:function(e,t){for(var i=this.findCheckedItems(),o=[],a=i.dataset_ids.length-1;0<=a;a--){var s=i.dataset_ids[a];(r=new y.default.HistoryItem).url="".concat(r.urlRoot+e,"/contents"),r.content=s,r.source="library",o.push(r)}for(var l=i.folder_ids.length-1;0<=l;l--){var r,n=i.folder_ids[l];(r=new y.default.HistoryItem).url="".concat(r.urlRoot+e,"/contents"),r.content=n,r.source="library_folder",o.push(r)}this.initChainCallControl({length:o.length,action:"to_history",history_name:t}),jQuery.getJSON("".concat((0,d.getAppRoot)(),"history/set_as_current?id=").concat(e)),this.chainCallImportingIntoHistory(o,t)},updateProgress:function(){this.progress+=this.progressStep,$(".progress-bar-import").width("".concat(Math.round(this.progress),"%"));var e="".concat(Math.round(this.progress),"% Complete");$(".completion_span").text(e)},download:function(e){var t=this.findCheckedItems(),i="".concat((0,d.getAppRoot)(),"api/libraries/datasets/download/").concat(e),o={ld_ids:t.dataset_ids,folder_ids:t.folder_ids};this.processDownload(i,o,"get")},processDownload:function(e,t,i){if(e&&t){t="string"==typeof t?t:$.param(t);var o="";$.each(t.split("&"),function(){var e=this.split("=");o+='<input type="hidden" name="'.concat(e[0],'" value="').concat(e[1],'" />')}),$('<form action="'.concat(e,'" method="').concat(i||"post",'">').concat(o,"</form>")).appendTo("body").submit().remove(),g.default.info("Your download will begin soon.")}else g.default.error("An error occurred.")},addFilesFromHistoryModal:function(){var t=this,i=(0,p.getGalaxyInstance)();this.histories=new y.default.GalaxyHistories,this.histories.fetch().done(function(){t.modal=i.modal;var e=t.templateAddFilesFromHistory();t.modal.show({closing_events:!0,title:(0,_.default)("Adding datasets from your history"),body:e({histories:t.histories.models}),buttons:{Add:function(){t.addAllDatasetsFromHistory()},Close:function(){i.modal.hide()}},closing_callback:function(){i.libraries.library_router.navigate("folders/".concat(t.id),{trigger:!0})}}),t.fetchAndDisplayHistoryContents(t.histories.models[0].id),$("#dataset_add_bulk").change(function(e){t.fetchAndDisplayHistoryContents(e.target.value)})}).fail(function(e,t){void 0!==t.responseJSON?g.default.error(t.responseJSON.err_msg):g.default.error("An error occurred.")})},importFilesFromPathModal:function(){var e=this,t=(0,p.getGalaxyInstance)();this.modal=t.modal;var i=this.templateImportPathModal();this.modal.show({closing_events:!0,title:(0,_.default)("Please enter paths to import"),body:i({}),buttons:{Import:function(){e.importFromPathsClicked(e)},Close:function(){t.modal.hide()}},closing_callback:function(){t.libraries.library_router.navigate("folders/".concat(e.id),{trigger:!0})}}),this.renderSelectBoxes()},fetchExtAndGenomes:function(){var i=this;b.default.get({url:"".concat((0,d.getAppRoot)(),"api/datatypes?extension_only=False"),success:function(e){for(var t in i.list_extensions=[],e)i.list_extensions.push({id:e[t].extension,text:e[t].extension,description:e[t].description,description_url:e[t].description_url});i.list_extensions.sort(function(e,t){return e.id>t.id?1:e.id<t.id?-1:0}),i.list_extensions.unshift(i.auto)},cache:!0}),b.default.get({url:"".concat((0,d.getAppRoot)(),"api/genomes"),success:function(e){for(var t in i.list_genomes=[],e)i.list_genomes.push({id:e[t][1],text:e[t][0]});i.list_genomes.sort(function(e,t){return e.id>t.id?1:e.id<t.id?-1:0})},cache:!0})},renderSelectBoxes:function(){var e=(0,p.getGalaxyInstance)();this.select_genome=new v.default.View({css:"library-genome-select",data:this.list_genomes,container:e.modal.$el.find("#library_genome_select"),value:"?"}),this.select_extension=new v.default.View({css:"library-extension-select",data:this.list_extensions,container:e.modal.$el.find("#library_extension_select"),value:"auto"})},importFilesFromGalaxyFolderModal:function(t){var i=this,e=this.templateBrowserModal(),o=(0,p.getGalaxyInstance)();this.modal=o.modal,this.modal.show({closing_events:!0,title:(0,_.default)("Please select folders or files"),body:e({}),buttons:{Import:function(){i.importFromJstreePath(i,t)},Close:function(){o.modal.hide()}},closing_callback:function(){o.libraries.library_router.navigate("folders/".concat(i.id),{trigger:!0})}}),$(".libimport-select-all").bind("click",function(){$("#jstree_browser").jstree("check_all")}),$(".libimport-select-none").bind("click",function(){$("#jstree_browser").jstree("uncheck_all")}),this.renderSelectBoxes(),t.disabled_jstree_element="folders",this.renderJstree(t),$("input[type=radio]").change(function(e){"jstree-disable-folders"===e.target.value?(t.disabled_jstree_element="folders",i.renderJstree(t),$(".jstree-folders-message").hide(),$(".jstree-preserve-structure").hide(),$(".jstree-files-message").show()):"jstree-disable-files"===e.target.value&&($(".jstree-files-message").hide(),$(".jstree-folders-message").show(),$(".jstree-preserve-structure").show(),t.disabled_jstree_element="files",i.renderJstree(t))})},renderJstree:function(e){this.options=m.default.extend(this.options,e);var t=e.source||"userdir",i=this.options.disabled_jstree_element;this.jstree=new y.default.Jstree,this.jstree.url="".concat(this.jstree.urlRoot,"?target=").concat(t,"&format=jstree&disable=").concat(i),this.jstree.fetch({success:function(e,t){$("#jstree_browser").jstree("destroy"),$("#jstree_browser").jstree({core:{data:e},plugins:["types","checkbox"],types:{folder:{icon:"jstree-folder"},file:{icon:"jstree-file"}},checkbox:{three_state:!1}})},error:function(e,t){void 0!==t.responseJSON?404001===t.responseJSON.err_code?g.default.warning(t.responseJSON.err_msg):g.default.error(t.responseJSON.err_msg):g.default.error("An error occurred.")}})},importFromPathsClicked:function(){var e=this.modal.$el.find(".preserve-checkbox").is(":checked"),t=this.modal.$el.find(".link-checkbox").is(":checked"),i=this.modal.$el.find(".spacetab-checkbox").is(":checked"),o=this.modal.$el.find(".posix-checkbox").is(":checked"),a=this.modal.$el.find(".tag-files").is(":checked"),s=this.select_extension.value(),l=this.select_genome.value(),r=$("textarea#import_paths").val(),n=[];if(r){this.modal.disableButton("Import");for(var d=(r=r.split("\n")).length-1;0<=d;d--){var c=r[d].trim();0!==c.length&&n.push(c)}this.initChainCallControl({length:n.length,action:"adding_datasets"}),this.chainCallImportingFolders({paths:n,preserve_dirs:e,link_data:t,space_to_tab:i,to_posix_lines:o,source:"admin_path",file_type:s,tag_using_filenames:a,dbkey:l})}else g.default.info("Please enter a path relative to Galaxy root.")},initChainCallControl:function(e){var t,i=(0,p.getGalaxyInstance)();switch(e.action){case"adding_datasets":t=this.templateAddingDatasetsProgressBar(),this.modal.$el.find(".modal-body").html(t({folder_name:this.options.folder_name}));break;case"deleting_datasets":t=this.templateDeletingItemsProgressBar(),this.modal.$el.find(".modal-body").html(t());break;case"to_history":t=this.templateImportIntoHistoryProgressBar(),this.modal.$el.find(".modal-body").html(t({history_name:e.history_name}));break;default:i.emit.error("Wrong action specified.","datalibs")}this.progress=0,this.progressStep=100/e.length,this.options.chain_call_control.total_number=e.length,this.options.chain_call_control.failed_number=0},importFromJstreePath:function(e,t){var i=$("#jstree_browser").jstree().get_selected(!0),o=m.default.filter(i,function(e){return 0==e.state.disabled}),a=this.modal.$el.find(".preserve-checkbox").is(":checked"),s=this.modal.$el.find(".link-checkbox").is(":checked"),l=this.modal.$el.find(".spacetab-checkbox").is(":checked"),r=this.modal.$el.find(".posix-checkbox").is(":checked"),n=this.select_extension.value(),d=this.select_genome.value(),c=this.modal.$el.find(".tag-files").is(":checked"),p=o[0].type,h=[];if(o.length<1)g.default.info("Please select some items first.");else{this.modal.disableButton("Import");for(var u=o.length-1;0<=u;u--)void 0!==o[u].li_attr.full_path&&h.push(o[u].li_attr.full_path);if(this.initChainCallControl({length:h.length,action:"adding_datasets"}),"folder"===p){var f="".concat(t.source,"_folder");this.chainCallImportingFolders({paths:h,preserve_dirs:a,link_data:s,space_to_tab:l,to_posix_lines:r,source:f,file_type:n,dbkey:d,tag_using_filenames:c})}else if("file"===p){f="".concat(t.source,"_file");this.chainCallImportingUserdirFiles({paths:h,file_type:n,dbkey:d,link_data:s,space_to_tab:l,to_posix_lines:r,source:f,tag_using_filenames:c})}}},fetchAndDisplayHistoryContents:function(i){var o=this;new y.default.HistoryContents({id:i}).fetch({success:function(e){var t=o.templateHistoryContents();o.histories.get(i).set({contents:e}),o.modal.$el.find(".library_selected_history_content").html(t({history_contents:e.models.reverse()})),o.modal.$el.find(".history-import-select-all").bind("click",function(){$(".library_selected_history_content [type=checkbox]").prop("checked",!0)}),o.modal.$el.find(".history-import-unselect-all").bind("click",function(){$(".library_selected_history_content [type=checkbox]").prop("checked",!1)})},error:function(e,t){void 0!==t.responseJSON?g.default.error(t.responseJSON.err_msg):g.default.error("An error occurred.")}})},addAllDatasetsFromHistory:function(){var e=this.modal.$el.find(".library_selected_history_content").find(":checked"),i=[],o=[],t=[];if(e.length<1)g.default.info("You must select some datasets first.");else{this.modal.disableButton("Add"),e.each(function(){var e=$(this).closest("li").data("id");if(e){var t=$(this).closest("li").data("name");i.push(e),o.push(t)}});for(var a=i.length-1;0<=a;a--){var s=i[a],l=new y.default.Item;l.url="".concat((0,d.getAppRoot)(),"api/folders/").concat(this.options.id,"/contents"),"collection"===o[a]?l.set({from_hdca_id:s}):l.set({from_hda_id:s}),t.push(l)}this.initChainCallControl({length:t.length,action:"adding_datasets"}),this.chainCallAddingHdas(t)}},chainCallImportingIntoHistory:function(e,t){var i=this,o=(0,p.getGalaxyInstance)(),a=e.pop();if(void 0===a)return 0===this.options.chain_call_control.failed_number?g.default.success("Selected datasets imported into history. Click this to start analyzing it.","",{onclick:function(){window.location=(0,d.getAppRoot)()}}):this.options.chain_call_control.failed_number===this.options.chain_call_control.total_number?g.default.error("There was an error and no datasets were imported into history."):this.options.chain_call_control.failed_number<this.options.chain_call_control.total_number&&g.default.warning("Some of the datasets could not be imported into history. Click this to see what was imported.","",{onclick:function(){window.location=(0,d.getAppRoot)()}}),o.modal.hide(),!0;$.when(a.save({content:a.content,source:a.source})).done(function(){i.updateProgress(),i.chainCallImportingIntoHistory(e,t)}).fail(function(){i.options.chain_call_control.failed_number+=1,i.updateProgress(),i.chainCallImportingIntoHistory(e,t)})},chainCallImportingUserdirFiles:function(t){var i=this,e=(0,p.getGalaxyInstance)(),o=t.paths.pop();if(void 0===o)return 0===this.options.chain_call_control.failed_number?(g.default.success("Selected files imported into the current folder"),e.modal.hide()):g.default.error("An error occured."),!0;var a="".concat((0,d.getAppRoot)(),"api/libraries/datasets"),s={encoded_folder_id:this.id,source:t.source,path:o,file_type:t.file_type,link_data:t.link_data,space_to_tab:t.space_to_tab,to_posix_lines:t.to_posix_lines,dbkey:t.dbkey,tag_using_filenames:t.tag_using_filenames};$.when($.post(a,s)).done(function(e){i.updateProgress(),i.chainCallImportingUserdirFiles(t)}).fail(function(){i.options.chain_call_control.failed_number+=1,i.updateProgress(),i.chainCallImportingUserdirFiles(t)})},chainCallImportingFolders:function(t){var i=this,e=(0,p.getGalaxyInstance)(),o=t.paths.pop();if(void 0===o)return 0===this.options.chain_call_control.failed_number?(g.default.success("Selected folders and their contents imported into the current folder."),e.modal.hide()):g.default.error("An error occured."),!0;var a="".concat((0,d.getAppRoot)(),"api/libraries/datasets"),s={encoded_folder_id:this.id,source:t.source,path:o,preserve_dirs:t.preserve_dirs,link_data:t.link_data,to_posix_lines:t.to_posix_lines,space_to_tab:t.space_to_tab,file_type:t.file_type,dbkey:t.dbkey,tag_using_filenames:t.tag_using_filenames};$.when($.post(a,s)).done(function(e){i.updateProgress(),i.chainCallImportingFolders(t)}).fail(function(){i.options.chain_call_control.failed_number+=1,i.updateProgress(),i.chainCallImportingFolders(t)})},chainCallAddingHdas:function(t){var i=this,o=(0,p.getGalaxyInstance)();this.added_hdas=new y.default.Folder;var e=t.pop();if(void 0===e)return 0===this.options.chain_call_control.failed_number?g.default.success("Selected datasets from history added to the folder"):this.options.chain_call_control.failed_number===this.options.chain_call_control.total_number?g.default.error("There was an error and no datasets were added to the folder."):this.options.chain_call_control.failed_number<this.options.chain_call_control.total_number&&g.default.warning("Some of the datasets could not be added to the folder"),o.modal.hide(),this.added_hdas;$.when(e.save({from_hda_id:e.get("from_hda_id")})).done(function(e){o.libraries.folderListView.collection.add(e),i.updateProgress(),i.chainCallAddingHdas(t)}).fail(function(){i.options.chain_call_control.failed_number+=1,i.updateProgress(),i.chainCallAddingHdas(t)})},chainCallDeletingItems:function(i){var o=this,a=(0,p.getGalaxyInstance)();this.deleted_items=new y.default.Folder;var s=i.pop();if(void 0===s)return 0===this.options.chain_call_control.failed_number?g.default.success("Selected items were deleted."):this.options.chain_call_control.failed_number===this.options.chain_call_control.total_number?g.default.error("There was an error and no items were deleted. Please make sure you have sufficient permissions."):this.options.chain_call_control.failed_number<this.options.chain_call_control.total_number&&g.default.warning("Some of the items could not be deleted. Please make sure you have sufficient permissions."),a.modal.hide(),this.deleted_items;s.destroy().done(function(e){if(a.libraries.folderListView.collection.remove(s.id),o.updateProgress(),a.libraries.folderListView.options.include_deleted){var t=null;"folder"===e.type||"LibraryFolder"===e.model_class?t=new y.default.FolderAsModel(e):"file"===e.type||"LibraryDataset"===e.model_class?t=new y.default.Item(e):(a.emit.error("Unknown library item type found.","datalibs"),a.emit.error(e.type||e.model_class,"datalibs")),a.libraries.folderListView.collection.add(t)}o.chainCallDeletingItems(i)}).fail(function(){o.options.chain_call_control.failed_number+=1,o.updateProgress(),o.chainCallDeletingItems(i)})},checkIncludeDeleted:function(e){var t=(0,p.getGalaxyInstance)();e.target.checked?t.libraries.folderListView.fetchFolder({include_deleted:!0}):t.libraries.folderListView.fetchFolder({include_deleted:!1})},deleteSelectedItems:function(){var e=(0,p.getGalaxyInstance)(),t=[],i=[],o=this.findCheckedRows();if(0===o.length)g.default.info("You must select at least one item for deletion.");else{var a=this.templateDeletingItemsProgressBar();this.modal=e.modal,this.modal.show({closing_events:!0,title:(0,_.default)("Deleting selected items"),body:a({}),buttons:{Close:function(){e.modal.hide()}}}),this.options.chain_call_control.total_number=0,this.options.chain_call_control.failed_number=0,o.each(function(){var e=$(this).closest("tr").data("id").toString();void 0!==e&&("F"==e.substring(0,1)?i.push(e):t.push(e))});var s=t.length+i.length;this.progressStep=100/s,this.progress=0;for(var l=[],r=t.length-1;0<=r;r--){var n=new y.default.Item({id:t[r]});l.push(n)}for(var d=i.length-1;0<=d;d--){var c=new y.default.FolderAsModel({id:i[d]});l.push(c)}this.options.chain_call_control.total_number=s,this.chainCallDeletingItems(l)}},showLocInfo:function(){var e=this,t=(0,p.getGalaxyInstance)(),i=null;null!==t.libraries.libraryListView?(i=t.libraries.libraryListView.collection.get(this.options.parent_library_id),this.showLocInfoModal(i)):(i=new y.default.Library({id:this.options.parent_library_id})).fetch({success:function(){e.showLocInfoModal(i)},error:function(e,t){void 0!==t.responseJSON?g.default.error(t.responseJSON.err_msg):g.default.error("An error occurred.")}})},showLocInfoModal:function(e){var t=(0,p.getGalaxyInstance)(),i=this.templateLocInfoInModal();this.modal=t.modal,this.modal.show({closing_events:!0,title:(0,_.default)("Location Details"),body:i({library:e,options:this.options}),buttons:{Close:function(){t.modal.hide()}}})},showImportModal:function(e){var t=(0,p.getGalaxyInstance)();switch(e.source){case"history":this.addFilesFromHistoryModal();break;case"importdir":this.importFilesFromGalaxyFolderModal({source:"importdir"});break;case"path":this.importFilesFromPathModal();break;case"userdir":this.importFilesFromGalaxyFolderModal({source:"userdir"});break;default:t.libraries.library_router.back(),g.default.error("Invalid import source.")}},showPageSizePrompt:function(e){e.preventDefault();var t=(0,p.getGalaxyInstance)(),i=prompt("How many items per page do you want to see?",t.libraries.preferences.get("folder_page_size"));null!=i&&i==parseInt(i)&&(t.libraries.preferences.set({folder_page_size:parseInt(i)}),t.libraries.folderListView.render({id:this.options.id,show_page:1}))},findCheckedRows:function(){return $("#folder_list_body").find(":checked")},findCheckedItems:function(){var t=[],i=[];return this.findCheckedRows().each(function(){var e=$(this).closest("tr").data("id").toString();"F"==e.substring(0,1)?t.push(e):i.push(e)}),{folder_ids:t,dataset_ids:i}},showCollectionSelect:function(e){var t=this;e.preventDefault();var i=(0,p.getGalaxyInstance)(),o=this.findCheckedItems(),a=this.templateCollectionSelectModal();this.modal=i.modal,this.modal.show({closing_events:!0,title:"Create History Collection from Datasets",body:a({selected_datasets:o.dataset_ids.length}),buttons:{Continue:function(){t.showColectionBuilder(o.dataset_ids)},Close:function(){i.modal.hide()}}}),this.prepareCollectionTypeSelect(),this.prepareHistoryTypeSelect()},prepareCollectionTypeSelect:function(){var t=this;this.collectionType="list",this.select_collection_type=new v.default.View({css:"library-collection-type-select",container:this.modal.$el.find(".library-collection-type-select"),data:[{id:"list",text:"List"},{id:"paired",text:"Paired"},{id:"list:paired",text:"List of Pairs"},{id:"rules",text:"From Rules"}],value:"list",onchange:function(e){t.updateCollectionType(e)}})},prepareHistoryTypeSelect:function(){var i=this;this.fetchUserHistories().done(function(){for(var e=[],t=i.histories.length-1;0<=t;t--)e.unshift({id:i.histories.models[t].id,text:i.histories.models[t].get("name")});i.select_collection_history=new v.default.View({css:"library-collection-history-select",container:i.modal.$el.find(".library-collection-history-select"),data:e,value:e[0].id})})},updateCollectionType:function(e){this.collectionType=e},showColectionBuilder:function(e){var t=this,i=(0,p.getGalaxyInstance)(),o=[],a=this.modal.$('input[type="radio"]:checked').val();if("selection"===a)for(var s=e.length-1;0<=s;s--){var l={},r=i.libraries.folderListView.folder_container.get("folder").get(e[s]);l.id=e[s],l.name=r.get("name"),l.deleted=r.get("deleted"),l.state=r.get("state"),o.push(l)}else"folder"===a&&(o=new f.default.Collection(i.libraries.folderListView.folder_container.get("folder").where({type:"file"})).toJSON());var n=this.modal.$("input[name=history_name]").val();if(""!==n)this.createNewHistory(n).done(function(e){g.default.success("History created"),t.collectionImport(o,e.id,e.name)}).fail(function(e,t,i){g.default.error("An error occurred.")});else{var d=this.select_collection_history.value(),c=this.select_collection_history.text();this.collectionImport(o,d,c)}},collectionImport:function(e,a,t){var i,o,s=this,l="Creating Collection in ".concat(t);if("list"===this.collectionType)i=w.default.ListCollectionCreator,o=function(e,t,i){return e=e.map(function(e){return{id:e.id,name:e.name,src:"ldda"}}),s.createHDCA(e,s.collectionType,t,i,a)},w.default.collectionCreatorModal(e,{creationFn:o,title:l,defaultHideSourceItems:!0},i);else if("paired"===this.collectionType)i=k.default.PairCollectionCreator,o=function(e,t,i){return e=[{name:"forward",src:"ldda",id:e[0].id},{name:"reverse",src:"ldda",id:e[1].id}],s.createHDCA(e,s.collectionType,t,i,a)},w.default.collectionCreatorModal(e,{creationFn:o,title:l,defaultHideSourceItems:!0},i);else if("list:paired"===this.collectionType){var r=e.map(function(e){return{id:e.id,name:e.name,src:"ldda"}});x.default.pairedCollectionCreatorModal(r,{historyId:a,title:l,defaultHideSourceItems:!0})}else if("rules"===this.collectionType){w.default.ruleBasedCollectionCreatorModal(e,"library_datasets","collections",{creationFn:function(e,t,i,o){return s.createHDCA(e,t,i,o,a)},defaultHideSourceItems:!0})}},createHDCA:function(e,t,i,o,a,s){return new I.default.HistoryDatasetCollection({history_content_type:"dataset_collection",collection_type:t,history_id:a,name:i,hide_source_items:o||!1,element_identifiers:e}).save(s)},templateToolBar:function(){(0,p.getGalaxyInstance)();return m.default.template(['<div class="library_style_container">','<div class="d-flex align-items-center mb-2">','<span class="mr-1">DATA LIBRARIES</span>',"<div>",'<form class="form-inline">','<div class="form-check logged-dataset-manipulation mr-1" style="display:none;">','<input class="form-check-input include-deleted-datasets-chk" id="include_deleted_datasets_chk" type="checkbox">','<label class="form-check-label" for="include_deleted_datasets_chk">include deleted</label>',"</div>",'<button style="display:none;" title="Create new folder" class="btn btn-secondary toolbtn-create-folder add-library-items add-library-items-folder mr-1" type="button">','<span class="fa fa-plus"></span> <span class="fa fa-folder"></span> Create Folder ',"</button>","<% if(multiple_add_dataset_options) { %>",'<div data-toggle="tooltip" data-placement="right" title="Add datasets to current folder" class="dropdown add-library-items add-library-items-datasets mr-1" style="display:none;">','<button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown">','<span class="fa fa-plus"></span> <span class="fa fa-file"></span> Add Datasets <span class="caret"></span>',"</button>",'<div class="dropdown-menu">','<a class="dropdown-item" href="#folders/<%= id %>/import/history"> from History</a>',"<% if(Galaxy.config.user_library_import_dir !== null) { %>",'<a class="dropdown-item" href="#folders/<%= id %>/import/userdir"> from User Directory</a>',"<% } %>","<% if(Galaxy.config.library_import_dir !== null || Galaxy.config.allow_library_path_paste) { %>",'<h5 class="dropdown-header">Admins only</h5>',"<% if(Galaxy.config.library_import_dir !== null) { %>",'<a class="dropdown-item" href="#folders/<%= id %>/import/importdir">from Import Directory</a>',"<% } %>","<% if(Galaxy.config.allow_library_path_paste) { %>",'<a class="dropdown-item" href="#folders/<%= id %>/import/path">from Path</a>',"<% } %>","<% } %>","</div>","</div>","<% } else { %>",'<a data-placement="top" title="Add Datasets to Current Folder" style="display:none;" class="btn btn-secondary add-library-items add-library-items-datasets" href="#folders/<%= id %>/import/history" role="button">','<span class="fa fa-plus"></span><span class="fa fa-file"></span>',"</a>","<% } %>",'<div data-toggle="tooltip" data-placement="right" title="Import to history" class="dropdown mr-1">','<button type="button" class="primary-button dropdown-toggle add-to-history" data-toggle="dropdown">','<span class="fa fa-book"></span> To History <span class="caret"></span>',"</button>",'<div class="dropdown-menu" role="menu">','<a href="" class="toolbtn-bulk-import add-to-history-datasets dropdown-item">as Datasets</a>','<a href="" class="toolbtn-collection-import add-to-history-collection dropdown-item">as a Collection</a>',"</div>","</div>",'<div data-toggle="tooltip" data-placement="right" title="Download items as archive" class="dropdown dataset-manipulation mr-1" style="display:none; ">','<button type="button" class="primary-button dropdown-toggle" data-toggle="dropdown">','<span class="fa fa-save"></span> Download <span class="caret"></span>',"</button>",'<div class="dropdown-menu" role="menu">','<a class="dropdown-item" href="#/folders/<%= id %>/download/tgz">.tar.gz</a>','<a class="dropdown-item" href="#/folders/<%= id %>/download/tbz">.tar.bz</a>','<a class="dropdown-item" href="#/folders/<%= id %>/download/zip">.zip</a>',"</div>","</div>",'<button data-toggle="tooltip" data-placement="right" title="Mark items deleted" class="primary-button toolbtn-bulk-delete logged-dataset-manipulation mr-1" style="display:none;" type="button">','<span class="fa fa-trash"></span> Delete',"</button>",'<span class="mr-1" data-toggle="tooltip" data-placement="right" title="Show location details">','<button data-id="<%- id %>" class="primary-button toolbtn-show-locinfo" type="button">','<span class="fa fa-info-circle"></span>',"&nbsp;Details","</button>","</span>",'<span data-toggle="tooltip" data-placement="right" title="See this screen annotated">','<a class="library-help-button" href="https://galaxyproject.org/data-libraries/screen/folder-contents/" target="_blank">','<button class="primary-button" type="button">','<span class="fa fa-question-circle"></span>',"&nbsp;Help","</button>","</a>","</span>","</form>","</div>","</div>",'<div id="folder_items_element" />','<div class="d-flex justify-content-center align-items-center folder-paginator mt-2 mb-2" />',"</div>"].join(""))},templateLocInfoInModal:function(){return m.default.template(["<div>",'<table class="grid table table-sm">',"<thead>",'<th style="width: 25%;">library</th>',"<th></th>","</thead>","<tbody>","<tr>","<td>name</td>",'<td><%- library.get("name") %></td>',"</tr>",'<% if(library.get("description") !== "") { %>',"<tr>","<td>description</td>",'<td><%- library.get("description") %></td>',"</tr>","<% } %>",'<% if(library.get("synopsis") !== "") { %>',"<tr>","<td>synopsis</td>",'<td><%- library.get("synopsis") %></td>',"</tr>","<% } %>",'<% if(library.get("create_time_pretty") !== "") { %>',"<tr>","<td>created</td>",'<td><span title="<%- library.get("create_time") %>"><%- library.get("create_time_pretty") %></span></td>',"</tr>","<% } %>","<tr>","<td>id</td>",'<td><%- library.get("id") %></td>',"</tr>","</tbody>","</table>",'<table class="grid table table-sm">',"<thead>",'<th style="width: 25%;">folder</th>',"<th></th>","</thead>","<tbody>","<tr>","<td>name</td>","<td><%- options.folder_name %></td>","</tr>",'<% if(options.folder_description !== "") { %>',"<tr>","<td>description</td>","<td><%- options.folder_description %></td>","</tr>","<% } %>","<tr>","<td>id</td>","<td><%- options.id %></td>","</tr>","</tbody>","</table>","</div>"].join(""))},templateNewFolderInModal:function(){return m.default.template(['<div id="new_folder_modal">',"<form>",'<input type="text" name="Name" value="" placeholder="Name" autofocus>','<input type="text" name="Description" value="" placeholder="Description">',"</form>","</div>"].join(""))},templateImportIntoHistoryModal:function(){return m.default.template(["<div>",'<div class="library-modal-item">',"Select history: ",'<select name="import_to_history" style="width:50%; margin-bottom: 1em; " autofocus>',"<% _.each(histories, function(history) { %>",'<option value="<%= _.escape(history.get("id")) %>"><%= _.escape(history.get("name")) %></option>',"<% }); %>","</select>","</div>",'<div class="library-modal-item">',"or create new: ",'<input type="text" name="history_name" value="" placeholder="name of the new history" style="width:50%;" />',"</div>","</div>"].join(""))},templateImportIntoHistoryProgressBar:function(){return m.default.template(['<div class="import_text">',"Importing selected items to history <b><%= _.escape(history_name) %></b>","</div>",'<div class="progress">','<div class="progress-bar progress-bar-import" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 00%;">','<span class="completion_span">0% Complete</span>',"</div>","</div>"].join(""))},templateAddingDatasetsProgressBar:function(){return m.default.template(['<div class="import_text">',"Adding selected datasets to library folder <b><%= _.escape(folder_name) %></b>","</div>",'<div class="progress">','<div class="progress-bar progress-bar-import" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 00%;">','<span class="completion_span">0% Complete</span>',"</div>","</div>"].join(""))},templateDeletingItemsProgressBar:function(){return m.default.template(['<div class="import_text">',"</div>",'<div class="progress">','<div class="progress-bar progress-bar-import" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 00%;">','<span class="completion_span">0% Complete</span>',"</div>","</div>"].join(""))},templateBrowserModal:function(){return m.default.template(['<div id="file_browser_modal">','<div style="margin-bottom:1em;">','<label title="Switch to selecting files" class="radio-inline import-type-switch">','<input type="radio" name="jstree-radio" value="jstree-disable-folders" checked="checked"> Choose Files',"</label>",'<label title="Switch to selecting folders" class="radio-inline import-type-switch">','<input type="radio" name="jstree-radio" value="jstree-disable-files"> Choose Folders',"</label>","</div>",'<div class="alert alert-info jstree-files-message">All files you select will be imported into the current folder ignoring their folder structure.</div>','<div class="alert alert-info jstree-folders-message" style="display:none;">All files within the selected folders and their subfolders will be imported into the current folder.</div>','<div style="margin-bottom:1em;">','<label class="checkbox-inline jstree-preserve-structure" style="display:none;">','<input class="preserve-checkbox" type="checkbox" value="preserve_directory_structure">',"Preserve directory structure","</label>",'<label class="checkbox-inline">','<input class="link-checkbox" type="checkbox" value="link_files">',"Link files instead of copying","</label>",'<label class="checkbox-inline">','<input class="posix-checkbox" type="checkbox" value="to_posix_lines" checked="checked">',"Convert line endings to POSIX","</label>",'<label class="checkbox-inline">','<input class="spacetab-checkbox" type="checkbox" value="space_to_tab">',"Convert spaces to tabs","</label>","</div>",'<button title="Select all files" type="button" class="button primary-button libimport-select-all">',"Select all","</button>",'<button title="Select no files" type="button" class="button primary-button libimport-select-none">',"Unselect all","</button>","<hr />",'<div id="jstree_browser">',"</div>","<hr />","<p>You can set extension type and genome for all imported datasets at once:</p>","<div>",'Type: <span id="library_extension_select" class="library-extension-select" />','Genome: <span id="library_genome_select" class="library-genome-select" />',"</div>","<br>","<div>",'<label class="checkbox-inline tag-files">',"Tag datasets based on file names",'<input class="tag-files" type="checkbox" value="tag_using_filenames">',"</label>","</div>","</div>"].join(""))},templateImportPathModal:function(){return m.default.template(['<div id="file_browser_modal">','<div class="alert alert-info jstree-folders-message">All files within the given folders and their subfolders will be imported into the current folder.</div>','<div style="margin-bottom: 0.5em;">','<label class="checkbox-inline">','<input class="preserve-checkbox" type="checkbox" value="preserve_directory_structure">',"Preserve directory structure","</label>",'<label class="checkbox-inline">','<input class="link-checkbox" type="checkbox" value="link_files">',"Link files instead of copying","</label>","<br>",'<label class="checkbox-inline">','<input class="posix-checkbox" type="checkbox" value="to_posix_lines" checked="checked">',"Convert line endings to POSIX","</label>",'<label class="checkbox-inline">','<input class="spacetab-checkbox" type="checkbox" value="space_to_tab">',"Convert spaces to tabs","</label>","</div>",'<textarea id="import_paths" class="form-control" rows="5" placeholder="Absolute paths (or paths relative to Galaxy root) separated by newline" autofocus></textarea>',"<hr />","<p>You can set extension type and genome for all imported datasets at once:</p>","<div>",'Type: <span id="library_extension_select" class="library-extension-select" />','Genome: <span id="library_genome_select" class="library-genome-select" />',"</div>","<div>",'<label class="checkbox-inline tag-files">',"Tag datasets based on file names",'<input class="tag-files" type="checkbox" value="tag_using_filenames">',"</label>","</div>","</div>"].join(""))},templateAddFilesFromHistory:function(){return m.default.template(['<div id="add_files_modal">',"<div>","1.&nbsp;Select history:&nbsp;",'<select id="dataset_add_bulk" name="dataset_add_bulk" style="width:66%; "> ',"<% _.each(histories, function(history) { %>",'<option value="<%= _.escape(history.get("id")) %>"><%= _.escape(history.get("name")) %></option>',"<% }); %>","</select>","</div>","<br/>",'<div class="library_selected_history_content">',"</div>","</div>"].join(""))},templateHistoryContents:function(){return m.default.template(["<p>2.&nbsp;Choose the datasets to import:</p>","<div>",'<button title="Select all datasets" type="button" class="button primary-button history-import-select-all">',"Select all","</button>",'<button title="Select all datasets" type="button" class="button primary-button history-import-unselect-all">',"Unselect all","</button>","</div>","<br>","<ul>","<% _.each(history_contents, function(history_item) { %>",'<% if (history_item.get("deleted") != true ) { %>','<% var item_name = history_item.get("name") %>','<% if (history_item.get("type") === "collection") { %>','<% var collection_type = history_item.get("collection_type") %>','<% if (collection_type === "list") { %>','<li data-id="<%= _.escape(history_item.get("id")) %>" data-name="<%= _.escape(history_item.get("type")) %>">',"<label>",'<label title="<%= _.escape(item_name) %>">','<input style="margin: 0;" type="checkbox"> <%= _.escape(history_item.get("hid")) %>: ','<%= item_name.length > 75 ? _.escape("...".concat(item_name.substr(-75))) : _.escape(item_name) %> (Dataset Collection)',"</label>","</li>","<% } else { %>",'<li><input style="margin: 0;" type="checkbox" onclick="return false;" disabled="disabled">','<span title="You can convert this collection into a collection of type list using the Collection Tools">','<%= _.escape(history_item.get("hid")) %>: ','<%= item_name.length > 75 ? _.escape("...".concat(item_name.substr(-75))) : _.escape(item_name) %> (Dataset Collection of type <%= _.escape(collection_type) %> not supported.)',"</span>","</li>","<% } %>",'<% } else if (history_item.get("visible") === true && history_item.get("state") === "ok") { %>','<li data-id="<%= _.escape(history_item.get("id")) %>" data-name="<%= _.escape(history_item.get("type")) %>">','<label title="<%= _.escape(item_name) %>">','<input style="margin: 0;" type="checkbox"> <%= _.escape(history_item.get("hid")) %>: ','<%= item_name.length > 75 ? _.escape("...".concat(item_name.substr(-75))) : _.escape(item_name) %>',"</label>","</li>","<% } %>","<% } %>","<% }); %>","</ul>"].join(""))},templatePaginator:function(){return m.default.template(['<ul class="pagination mr-1">',"<% if ( ( show_page - 1 ) > 0 ) { %>","<% if ( ( show_page - 1 ) > page_count ) { %>",'<li class="page-item"><a class="page-link" href="#folders/<%= id %>/page/1"><span class="fa fa-angle-double-left"></span></a></li>','<li class="page-item disabled"><a class="page-link" href="#folders/<%= id %>/page/<% print( show_page ) %>"><% print( show_page - 1 ) %></a></li>',"<% } else { %>",'<li class="page-item"><a class="page-link" href="#folders/<%= id %>/page/1"><span class="fa fa-angle-double-left"></span></a></li>','<li class="page-item"><a class="page-link" href="#folders/<%= id %>/page/<% print( show_page - 1 ) %>"><% print( show_page - 1 ) %></a></li>',"<% } %>","<% } else { %>",'<li class="page-item disabled"><a class="page-link" href="#folders/<%= id %>/page/1"><span class="fa fa-angle-double-left"></span></a></li>','<li class="page-item disabled"><a class="page-link" href="#folders/<%= id %>/page/<% print( show_page ) %>"><% print( show_page - 1 ) %></a></li>',"<% } %>",'<li class="page-item active">','<a class="page-link" href="#folders/<%= id %>/page/<% print( show_page ) %>"><% print( show_page ) %></a>',"</li>","<% if ( ( show_page ) < page_count ) { %>",'<li class="page-item"><a class="page-link" href="#folders/<%= id %>/page/<% print( show_page + 1 ) %>"><% print( show_page + 1 ) %></a></li>','<li class="page-item"><a class="page-link" href="#folders/<%= id %>/page/<% print( page_count ) %>"><span class="fa fa-angle-double-right"></span></a></li>',"<% } else { %>",'<li class="page-item disabled"><a class="page-link" href="#folders/<%= id %>/page/<% print( show_page  ) %>"><% print( show_page + 1 ) %></a></li>','<li class="page-item disabled"><a class="page-link" href="#folders/<%= id %>/page/<% print( page_count ) %>"><span class="fa fa-angle-double-right"></span></a></li>',"<% } %>","</ul>",'<span class="mr-1">',' <%- items_shown %> items shown <a href="" data-toggle="tooltip" data-placement="top" title="currently <%- folder_page_size %> per page" class="page-size-prompt">(change)</a>',"</span>",'<span class="mr-1">'," <%- total_items_count %> total","</span>"].join(""))},templateCollectionSelectModal:function(){return m.default.template(["<div>",'<div class="library-modal-item">',"<h4>Which datasets?</h4>",'<form class="form-inline">','<label class="radio-inline">','<input type="radio" name="radio_elements" id="selection_radio" value="selection" <% if (!selected_datasets) { %> disabled <% } else { %> checked <% } %> > current selection',"<% if (selected_datasets) { %>"," (<%- selected_datasets %>)","<% } %>","</label>",'<label class="radio-inline">','<input type="radio" name="radio_elements" id="folder_radio" value="folder" <% if (!selected_datasets) { %> checked <% } %> > all datasets in current folder',"</label>","</form>","</div>",'<div class="library-modal-item">',"<h4>Collection type</h4>",'<span class="library-collection-type-select"/>',"<h5>Which type to choose?</h5>","<ul>","<li>","List: Generic collection which groups any number of datasets into a set; similar to file system folder.","</li>","<li>","Paired: Simple collection containing exactly two sequence datasets; one reverse and the other forward.","</li>","<li>","List of Pairs: Advanced collection containing any number of Pairs; imagine as Pair-type collections inside of a List-type collection.","</li>","<li>","From Rules: Use Galaxy's rule builder to describe collections. This is more of an advanced feature that allows building any number of collections or any type.","</li>","</ul>","</div>",'<div class="library-modal-item">',"<h4>Select history</h4>",'<span class="library-collection-history-select"/>'," or create new: ",'<input type="text" name="history_name" value="" placeholder="name of the new history" />',"</div>","</div>"].join(""))}});e.default={FolderToolbarView:F}});