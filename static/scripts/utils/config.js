define(["exports","jquery","underscore","backbone","viz/trackster/util","app"],function(e,t,l,a,o,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var h=u(t),_=u(l),n=u(a),y=u(o);function u(e){return e&&e.__esModule?e:{default:e}}var d=n.default.Model.extend({initialize:function(e){var t=this.get("key");this.set("id",t);var l=_.default.find([{key:"name",label:"Name",type:"text",default_value:""},{key:"color",label:"Color",type:"color",default_value:null},{key:"min_value",label:"Min Value",type:"float",default_value:null},{key:"max_value",label:"Max Value",type:"float",default_value:null},{key:"mode",type:"string",default_value:this.mode,hidden:!0},{key:"height",type:"int",default_value:32,hidden:!0},{key:"pos_color",label:"Positive Color",type:"color",default_value:"#FF8C00"},{key:"neg_color",label:"Negative Color",type:"color",default_value:"#4169E1"},{key:"block_color",label:"Block color",type:"color",default_value:null},{key:"label_color",label:"Label color",type:"color",default_value:"black"},{key:"show_insertions",label:"Show insertions",type:"bool",default_value:!1},{key:"show_counts",label:"Show summary counts",type:"bool",default_value:!0},{key:"reverse_strand_color",label:"Antisense strand color",type:"color",default_value:null},{key:"show_differences",label:"Show differences only",type:"bool",default_value:!0}],function(e){return e.key===t});l&&this.set(_.default.extend({},l,e)),void 0===this.get("value")&&void 0!==this.get("default_value")&&(this.set_value(this.get("default_value")),this.get("value")||"color"!==this.get("type")||this.set("value",y.default.get_random_color()))},set_value:function(e,t){var l=this.get("type");"float"===l?e=parseFloat(e):"int"===l&&(e=parseInt(e,10)),this.set({value:e},t)}}),c=n.default.Collection.extend({model:d,to_key_value_dict:function(){var t={};return this.each(function(e){t[e.get("key")]=e.get("value")}),t},get_value:function(e){var t=this.get(e);if(t)return t.get("value")},set_value:function(e,t,l){var a=this.get(e);if(a)return a.set_value(t,l)},set_default_value:function(e,t){var l=this.get(e);if(l)return l.set("default_value",t)}},{from_models_and_saved_values:function(e,t){return t&&(e=_.default.map(e,function(e){return _.default.extend({},e,{value:t[e.key]})})),new c(e)}}),r=n.default.View.extend({className:"config-settings-view",render:function(){var v=this.$el;return this.collection.each(function(e,t){if(!e.get("hidden")){var l,a="param_".concat(t),o=e.get("type"),i=e.get("value"),n=(0,h.default)("<div class='form-row' />").appendTo(v);if(n.append((0,h.default)("<label />").attr("for",a).text("".concat(e.get("label"),":"))),"bool"===o)n.append((0,h.default)('<input type="checkbox" />').attr("id",a).attr("name",a).attr("checked",i));else if("text"===o)n.append((0,h.default)('<input type="text"/>').attr("id",a).val(i).click(function(){(0,h.default)(this).select()}));else if("select"===o){var u=(0,h.default)("<select />").attr("id",a);_.default.each(e.get("options"),function(e){(0,h.default)("<option/>").text(e.label).attr("value",e.value).appendTo(u)}),u.val(i),n.append(u)}else if("color"===o){var d=(0,h.default)("<div/>").appendTo(n),c=(0,h.default)("<input />").attr("id",a).attr("name",a).val(i).css("float","left").appendTo(d).click(function(e){(0,h.default)(".tooltip").removeClass("in");var t=(0,h.default)(this).siblings(".tooltip").addClass("in");t.css({left:(0,h.default)(this).position().left+(0,h.default)(this).width()+5,top:(0,h.default)(this).position().top-(0,h.default)(t).height()/2+(0,h.default)(this).height()/2}).show(),t.click(function(e){e.stopPropagation()}),(0,h.default)(document).bind("click.color-picker",function(){t.hide(),(0,h.default)(document).unbind("click.color-picker")}),e.stopPropagation()}),r=(0,h.default)("<a href='javascript:void(0)'/>").addClass("icon-button arrow-circle").appendTo(d).attr("title","Set new random color").tooltip(),s=(0,h.default)("<div class='tooltip right' style='position: absolute;' />").appendTo(d).hide(),f=(0,h.default)("<div class='tooltip-inner' style='text-align: inherit'></div>").appendTo(s);(0,h.default)("<div class='tooltip-arrow'></div>").appendTo(s);var p=h.default.farbtastic(f,{width:100,height:100,callback:c,color:i});d.append((0,h.default)("<div/>").css("clear","both")),l=p,r.click(function(){l.setColor(y.default.get_random_color())})}else n.append((0,h.default)("<input />").attr("id",a).attr("name",a).val(i));e.help&&n.append((0,h.default)("<div class='help'/>").text(e.help))}}),this},render_in_modal:function(e){var t=this,l=(0,i.getGalaxyInstance)(),a=function(){l.modal.hide(),(0,h.default)(window).unbind("keypress.check_enter_esc")},o=function(){l.modal.hide(),(0,h.default)(window).unbind("keypress.check_enter_esc"),t.update_from_form()};(0,h.default)(window).bind("keypress.check_enter_esc",function(e){27===(e.keyCode||e.which)?a():13===(e.keyCode||e.which)&&o()}),0===this.$el.children().length&&this.render(),l.modal.show({title:e||"Configure",body:this.$el,buttons:{Cancel:a,OK:o}})},update_from_form:function(){var o=this;this.collection.each(function(e,t){if(!e.get("hidden")){var l="param_".concat(t),a=o.$el.find("#".concat(l)).val();"bool"===e.get("type")&&(a=o.$el.find("#".concat(l)).is(":checked")),e.set_value(a)}})}});e.default={ConfigSetting:d,ConfigSettingCollection:c,ConfigSettingCollectionView:r}});