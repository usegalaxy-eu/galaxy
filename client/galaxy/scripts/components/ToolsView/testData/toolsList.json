[
  {
    "elems": [
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "from your computer",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "<p><strong>Auto-detect<\/strong><\/p>\n<p>The system will attempt to detect Axt, Fasta, Fastqsolexa, Gff, Gff3, Html, Lav, Maf, Tabular, Wiggle, Bed and Interval (Bed with headers) formats. If your file is not detected properly as one of the known formats, it most likely means that it has some format problems (e.g., different number of columns on different rows). You can still coerce the system to set your data to the format you think it should be.  You can also upload compressed files, which will automatically be decompressed.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Ab1<\/strong><\/p>\n<p>A binary sequence file in 'ab1' format with a '.ab1' file extension.  You must manually select this 'File Format' when uploading the file.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Axt<\/strong><\/p>\n<p>blastz pairwise alignment format.  Each alignment block in an axt file contains three lines: a summary line and 2 sequence lines.  Blocks are separated from one another by blank lines.  The summary line contains chromosomal position and size information about the alignment. It consists of 9 required fields.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Bam<\/strong><\/p>\n<p>A binary file compressed in the BGZF format with a '.bam' file extension.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Bed<\/strong><\/p>\n<ul>\n<li><p class=\"first\">Tab delimited format (tabular)<\/p>\n<\/li>\n<li><p class=\"first\">Does not require header line<\/p>\n<\/li>\n<li><p class=\"first\">Contains 3 required fields:<\/p>\n<ul class=\"simple\">\n<li>chrom - The name of the chromosome (e.g. chr3, chrY, chr2_random) or contig (e.g. ctgY1).<\/li>\n<li>chromStart - The starting position of the feature in the chromosome or contig. The first base in a chromosome is numbered 0.<\/li>\n<li>chromEnd - The ending position of the feature in the chromosome or contig. The chromEnd base is not included in the display of the feature. For example, the first 100 bases of a chromosome are defined as chromStart=0, chromEnd=100, and span the bases numbered 0-99.<\/li>\n<\/ul>\n<\/li>\n<li><p class=\"first\">May contain 9 additional optional BED fields:<\/p>\n<ul class=\"simple\">\n<li>name - Defines the name of the BED line. This label is displayed to the left of the BED line in the Genome Browser window when the track is open to full display mode or directly to the left of the item in pack mode.<\/li>\n<li>score - A score between 0 and 1000. If the track line useScore attribute is set to 1 for this annotation data set, the score value will determine the level of gray in which this feature is displayed (higher numbers = darker gray).<\/li>\n<li>strand - Defines the strand - either '+' or '-'.<\/li>\n<li>thickStart - The starting position at which the feature is drawn thickly (for example, the start codon in gene displays).<\/li>\n<li>thickEnd - The ending position at which the feature is drawn thickly (for example, the stop codon in gene displays).<\/li>\n<li>itemRgb - An RGB value of the form R,G,B (e.g. 255,0,0). If the track line itemRgb attribute is set to &quot;On&quot;, this RBG value will determine the display color of the data contained in this BED line. NOTE: It is recommended that a simple color scheme (eight colors or less) be used with this attribute to avoid overwhelming the color resources of the Genome Browser and your Internet browser.<\/li>\n<li>blockCount - The number of blocks (exons) in the BED line.<\/li>\n<li>blockSizes - A comma-separated list of the block sizes. The number of items in this list should correspond to blockCount.<\/li>\n<li>blockStarts - A comma-separated list of block starts. All of the blockStart positions should be calculated relative to chromStart. The number of items in this list should correspond to blockCount.<\/li>\n<\/ul>\n<\/li>\n<li><p class=\"first\">Example:<\/p>\n<pre class=\"literal-block\">\nchr22 1000 5000 cloneA 960 + 1000 5000 0 2 567,488, 0,3512\nchr22 2000 6000 cloneB 900 - 2000 6000 0 2 433,399, 0,3601\n<\/pre>\n<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Fasta<\/strong><\/p>\n<p>A sequence in FASTA format consists of a single-line description, followed by lines of sequence data.  The first character of the description line is a greater-than (&quot;&gt;&quot;) symbol in the first column.  All lines should be shorter than 80 characters:<\/p>\n<pre class=\"literal-block\">\n&gt;sequence1\natgcgtttgcgtgc\ngtcggtttcgttgc\n&gt;sequence2\ntttcgtgcgtatag\ntggcgcggtga\n<\/pre>\n<hr class=\"docutils\" />\n<p><strong>FastqSolexa<\/strong><\/p>\n<p>FastqSolexa is the Illumina (Solexa) variant of the Fastq format, which stores sequences and quality scores in a single file:<\/p>\n<pre class=\"literal-block\">\n&#64;seq1\nGACAGCTTGGTTTTTAGTGAGTTGTTCCTTTCTTT\n+seq1\nhhhhhhhhhhhhhhhhhhhhhhhhhhPW&#64;hhhhhh\n&#64;seq2\nGCAATGACGGCAGCAATAAACTCAACAGGTGCTGG\n+seq2\nhhhhhhhhhhhhhhYhhahhhhWhAhFhSIJGChO\n<\/pre>\n<p>Or:<\/p>\n<pre class=\"literal-block\">\n&#64;seq1\nGAATTGATCAGGACATAGGACAACTGTAGGCACCAT\n+seq1\n40 40 40 40 35 40 40 40 25 40 40 26 40 9 33 11 40 35 17 40 40 33 40 7 9 15 3 22 15 30 11 17 9 4 9 4\n&#64;seq2\nGAGTTCTCGTCGCCTGTAGGCACCATCAATCGTATG\n+seq2\n40 15 40 17 6 36 40 40 40 25 40 9 35 33 40 14 14 18 15 17 19 28 31 4 24 18 27 14 15 18 2 8 12 8 11 9\n<\/pre>\n<hr class=\"docutils\" />\n<p><strong>Gff<\/strong><\/p>\n<p>GFF lines have nine required fields that must be tab-separated.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Gff3<\/strong><\/p>\n<p>The GFF3 format addresses the most common extensions to GFF, while preserving backward compatibility with previous formats.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Interval (Genomic Intervals)<\/strong><\/p>\n<ul>\n<li><p class=\"first\">Tab delimited format (tabular)<\/p>\n<\/li>\n<li><p class=\"first\">File must start with definition line in the following format (columns may be in any order).:<\/p>\n<pre class=\"literal-block\">\n#CHROM START END STRAND\n<\/pre>\n<\/li>\n<li><p class=\"first\">CHROM - The name of the chromosome (e.g. chr3, chrY, chr2_random) or contig (e.g. ctgY1).<\/p>\n<\/li>\n<li><p class=\"first\">START - The starting position of the feature in the chromosome or contig. The first base in a chromosome is numbered 0.<\/p>\n<\/li>\n<li><p class=\"first\">END - The ending position of the feature in the chromosome or contig. The chromEnd base is not included in the display of the feature. For example, the first 100 bases of a chromosome are defined as chromStart=0, chromEnd=100, and span the bases numbered 0-99.<\/p>\n<\/li>\n<li><p class=\"first\">STRAND - Defines the strand - either '+' or '-'.<\/p>\n<\/li>\n<li><p class=\"first\">Example:<\/p>\n<pre class=\"literal-block\">\n#CHROM START END   STRAND NAME COMMENT\nchr1   10    100   +      exon myExon\nchrX   1000  10050 -      gene myGene\n<\/pre>\n<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Lav<\/strong><\/p>\n<p>Lav is the primary output format for BLASTZ.  The first line of a .lav file begins with #:lav..<\/p>\n<hr class=\"docutils\" />\n<p><strong>MAF<\/strong><\/p>\n<p>TBA and multiz multiple alignment format.  The first line of a .maf file begins with ##maf. This word is followed by white-space-separated &quot;variable=value&quot; pairs. There should be no white space surrounding the &quot;=&quot;.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Scf<\/strong><\/p>\n<p>A binary sequence file in 'scf' format with a '.scf' file extension.  You must manually select this 'File Format' when uploading the file.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Sff<\/strong><\/p>\n<p>A binary file in 'Standard Flowgram Format' with a '.sff' file extension.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Tabular (tab delimited)<\/strong><\/p>\n<p>Any data in tab delimited format (tabular)<\/p>\n<hr class=\"docutils\" />\n<p><strong>Table (delimiter-separated)<\/strong><\/p>\n<p>Any delimiter-separated tabular data (CSV or TSV).<\/p>\n<hr class=\"docutils\" />\n<p><strong>Wig<\/strong><\/p>\n<p>The wiggle format is line-oriented.  Wiggle data is preceded by a track definition line, which adds a number of options for controlling the default display of this track.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Other text type<\/strong><\/p>\n<p>Any text file<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.1.6",
        "link": "/tool_runner?tool_id=upload1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "upload1",
        "name": "Upload File"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "table browser",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.0",
        "link": "/tool_runner/data_source_redirect?tool_id=ucsc_table_direct1",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "ucsc_table_direct1",
        "name": "UCSC Main"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "table browser",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.0",
        "link": "/tool_runner/data_source_redirect?tool_id=ucsc_table_direct_archaea1",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "ucsc_table_direct_archaea1",
        "name": "UCSC Archaea"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "ENA SRA",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.1",
        "link": "/tool_runner/data_source_redirect?tool_id=ebi_sra_main",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "ebi_sra_main",
        "name": "EBI SRA"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "server",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.1",
        "link": "/tool_runner/data_source_redirect?tool_id=modENCODEfly",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "modENCODEfly",
        "name": "modENCODE fly"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "server",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.0",
        "link": "/tool_runner/data_source_redirect?tool_id=intermine",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "intermine",
        "name": "InterMine"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "server",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.0",
        "link": "/tool_runner/data_source_redirect?tool_id=flymine",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "flymine",
        "name": "Flymine"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "server",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.0",
        "link": "/tool_runner/data_source_redirect?tool_id=modmine",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "modmine",
        "name": "modENCODE modMine"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "server",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.0",
        "link": "/tool_runner/data_source_redirect?tool_id=mousemine",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "mousemine",
        "name": "MouseMine"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "server",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.0",
        "link": "/tool_runner/data_source_redirect?tool_id=ratmine",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "ratmine",
        "name": "Ratmine"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "server",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.0",
        "link": "/tool_runner/data_source_redirect?tool_id=yeastmine",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "yeastmine",
        "name": "YeastMine"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "server",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.1",
        "link": "/tool_runner/data_source_redirect?tool_id=modENCODEworm",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "modENCODEworm",
        "name": "modENCODE worm"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "server",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.1",
        "link": "/tool_runner/data_source_redirect?tool_id=wormbase",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "wormbase",
        "name": "WormBase"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "server",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.0",
        "link": "/tool_runner/data_source_redirect?tool_id=zebrafishmine",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "zebrafishmine",
        "name": "ZebrafishMine"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "server",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "1.0.0",
        "link": "/tool_runner/data_source_redirect?tool_id=eupathdb",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "eupathdb",
        "name": "EuPathDB"
      },
      {
        "panel_section_name": "Get Data",
        "xrefs": [],
        "description": "Human Hemoglobin Variants and Thalassemias",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "getext",
        "version": "2.0.0",
        "link": "/tool_runner/data_source_redirect?tool_id=hbvar",
        "target": "_top",
        "min_width": "800",
        "model_class": "DataSourceTool",
        "hidden": "",
        "id": "hbvar",
        "name": "HbVar"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "getext",
    "name": "Get Data"
  },
  {
    "elems": [
      {
        "panel_section_name": "Send Data",
        "xrefs": [],
        "description": "",
        "is_workflow_compatible": false,
        "labels": [],
        "help": "<dl class=\"docutils\">\n<dt><strong>What it does<\/strong><\/dt>\n<dd><p class=\"first\">Send dataset(s) from Galaxy to cloud-based storage (e.g., AWS S3).<\/p>\n<p class=\"last\">Supply a name of the target bucket where the data will be sent along\nwith an id for the desired cloud authorization. To get the list of Cloud\nAuthorization IDs available for your account, visit <cite>/api/cloud/authz<\/cite>.<\/p>\n<\/dd>\n<dt><strong>Remarks<\/strong><\/dt>\n<dd><p class=\"first\">This tool leverages OpenID Connect protocol and CloudAuthz (<a class=\"reference external\" href=\"https://github.com/galaxyproject/cloudauthz\">https://github.com/galaxyproject/cloudauthz<\/a>)\nto access cloud-based resources without requiring user credentials.<\/p>\n<p class=\"last\">If selecting multiple datasets, make sure each dataset is named\ndifferently; otherwise, only one copy of the selected datasets will be\ncopied.<\/p>\n<\/dd>\n<\/dl>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "send",
        "version": "0.1.0",
        "link": "/tool_runner?tool_id=send_to_cloud",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "send_to_cloud",
        "name": "Send to cloud"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "send",
    "name": "Send Data"
  },
  {
    "elems": [
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p>This tool takes a paired dataset collection and builds two datasets from it. If mapped over a list of paired datasets, this tool will produce two lists of datasets.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>If a collection consists of two forward and two reverse datasets (e.g., forward and reverse reads from a sequencing experiment) this tool will output two collections: one consisting of forward reads and one of reverse reads.<\/p>\n<p class=\"infomark\">This tool will create new history datasets from your collection but your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__UNZIP_COLLECTION__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "UnzipCollectionTool",
        "hidden": "",
        "id": "__UNZIP_COLLECTION__",
        "name": "Unzip Collection"
      },
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p>This tool takes two datasets and creates a dataset pair from them. Mapping over two lists, this tool can be used to build a list of dataset pairs from two individual lists of datasets.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>If you have one collection containing only forward reads and one containing only reverse, this tools will &quot;zip&quot; them together into a simple paired collection.<\/p>\n<p class=\"infomark\">This tool will create new history datasets for your collection but your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__ZIP_COLLECTION__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "ZipCollectionTool",
        "hidden": "",
        "id": "__ZIP_COLLECTION__",
        "name": "Zip Collection"
      },
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "datasets from a collection",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p>This tool takes a dataset collection and filters out datasets in the failed state. This is useful for continuing a multi-sample analysis when one of more of the samples fails at some point.<\/p>\n<p class=\"infomark\">This tool will create new history datasets from your collection but your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__FILTER_FAILED_DATASETS__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "FilterFailedDatasetsTool",
        "hidden": "",
        "id": "__FILTER_FAILED_DATASETS__",
        "name": "Filter failed"
      },
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "datasets from a collection",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p>This tool takes a dataset collection and filters out empty datasets. This is useful for continuing a multi-sample analysis when downstream tools require datasets to have content.<\/p>\n<p class=\"infomark\">This tool will create new history datasets from your collection but your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__FILTER_EMPTY_DATASETS__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "FilterEmptyDatasetsTool",
        "hidden": "",
        "id": "__FILTER_EMPTY_DATASETS__",
        "name": "Filter empty"
      },
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "into a flat list of datasets",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p>This tool takes nested collections such as a list of lists or a list of dataset pairs - and produces a flat list from the inputs. The collection identifiers are merged together to create new collection identifiers in the flattened result.<\/p>\n<p class=\"infomark\">This tool will create new history datasets from your collection but your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__FLATTEN__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "FlattenTool",
        "hidden": "",
        "id": "__FLATTEN__",
        "name": "Flatten Collection"
      },
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "into single list of datasets",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p>This tool takes two lists and creates a single unified list.<\/p>\n<p class=\"infomark\">This tool will create new history datasets for your collection but your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__MERGE_COLLECTION__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "MergeCollectionTool",
        "hidden": "",
        "id": "__MERGE_COLLECTION__",
        "name": "Merge Collections"
      },
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "from contents of a file",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\">This tool will take an input list and a text file with new identifiers\nand build a new list with the same datasets but these new identifiers.\nThe order and number of entries in the text file must match the order\nof the items you want to rename in your dataset collection.<\/p>\n<p class=\"infomark\">Alternatively a tabular file may be supplied, where the first column\nif the current identifier that should be renamed, and the second column\ncontains the new label. This file may contain less entries than items\nin the collection. In that case only matching list identifiers will be\nrelabeled.<\/p>\n<p class=\"infomark\">Valid identifiers must contain only characters (a-z, A-Z), numbers (0-9),\ndash and underscore (-, _). Punctuation or whitespace are not allowed.<\/p>\n<p class=\"infomark\">This tool will create new history datasets from your collection\nbut your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__RELABEL_FROM_FILE__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "RelabelFromFileTool",
        "hidden": "",
        "id": "__RELABEL_FROM_FILE__",
        "name": "Relabel List Identifiers"
      },
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "from contents of a file",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\">This tool will take an input list and a text file with\nnames (i.e. identifiers). It will split the input list into\ntwo new lists - one filtered to contain only the list members\nwhose names are listed in the text file, and one containing\nall the other elements.<\/p>\n<p class=\"infomark\">This tool will create new history datasets from your collection\nbut your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__FILTER_FROM_FILE__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "FilterFromFileTool",
        "hidden": "",
        "id": "__FILTER_FROM_FILE__",
        "name": "Filter List"
      },
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "of list of datasets",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p>This tool takes list-type collections - and produces a sorted ist from the inputs. The collection identifiers are sorted either alphabetically or numerically (where the characters other than 0-9 are stripped before sorting).<\/p>\n<p class=\"infomark\">This tool will create new history datasets from your collection but your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__SORTLIST__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "SortTool",
        "hidden": "",
        "id": "__SORTLIST__",
        "name": "Sort Collection"
      },
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "from contents of a file",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\">This tool will take an input collection and a tabular file,\nwhere the first column indicates an element identifier and the\nremaining columns contains the new tags. This file may contain\nless entries than elements in the collection.\nIn that case only matching list identifiers will be tagged.<\/p>\n<p class=\"infomark\">This tool will create new history datasets from your collection\nbut your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__TAG_FROM_FILE__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "TagFromFileTool",
        "hidden": "",
        "id": "__TAG_FROM_FILE__",
        "name": "Tag elements from file"
      },
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p>This tool allows one to process an existing Galaxy dataset collection's metadata as tabular data,\napply a series of rules to it, and generate a new collection. When used interactively in the tool\nform, a dynamic preview of the processing will be available in a tabular data viewer but this tool\nmay be used in workflows as well where no such preview can be generated.<\/p>\n<p>This tool is an advanced feature but has a lot of flexibility - it can be used to process collections\nwith arbitrary nesting and can do many kinds of filtering, re-sorting, nesting,\nflattening, and arbitrary combinations thereof not possible with Galaxy's other, more simple\ncollection operation tools.<\/p>\n<p>More information about the rule processor in general can be found <a class=\"reference external\" href=\"https://github.com/jmchilton/training-material/blob/rules/topics/introduction/tutorials/galaxy-intro-rules/tutorial.md\">here<\/a> (this link is to documentation that is pretty rough still).<\/p>\n<p class=\"infomark\">This tool will create new history datasets from your collection but your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__APPLY_RULES__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "ApplyRulesTool",
        "hidden": "",
        "id": "__APPLY_RULES__",
        "name": "Apply Rule to Collection"
      },
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "from one or more datasets",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\">This tool will create a new collection from your history datasets but your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__BUILD_LIST__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "BuildListCollectionTool",
        "hidden": "",
        "id": "__BUILD_LIST__",
        "name": "Build List"
      },
      {
        "panel_section_name": "Collection Operations",
        "xrefs": [],
        "description": "from a list",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\">This tool will create new history datasets from your collection but your quota usage will not increase.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "collection_operations",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=__EXTRACT_DATASET__",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "ExtractDatasetCollectionTool",
        "hidden": "",
        "id": "__EXTRACT_DATASET__",
        "name": "Extract Dataset"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "collection_operations",
    "name": "Collection Operations"
  },
  {
    "elems": [
      {
        "panel_section_name": "Expression Tools",
        "xrefs": [],
        "description": "from dataset",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "",
        "edam_operations": [],
        "form_style": "special",
        "edam_topics": [],
        "panel_section_id": "expression_tools",
        "version": "0.1.0",
        "link": "/tool_runner?tool_id=param_value_from_file",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "ExpressionTool",
        "hidden": "",
        "id": "param_value_from_file",
        "name": "Parse parameter value"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "expression_tools",
    "name": "Expression Tools"
  },
  {
    "elems": [
      {
        "panel_section_name": "Lift-Over",
        "xrefs": [],
        "description": "between assemblies and genomes",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"warningmark\">Make sure that the genome build of the input dataset is specified (click the pencil icon in the history item to set it if necessary).<\/p>\n<p class=\"warningmark\">This tool can work with interval, GFF, and GTF datasets. It requires the interval datasets to have chromosome in column 1,\nstart co-ordinate in column 2 and end co-ordinate in column 3. BED comments\nand track and browser lines will be ignored, but if other non-interval lines\nare present the tool will return empty output datasets.<\/p>\n<hr class=\"docutils\" />\n<p class=\"infomark\"><strong>What it does<\/strong><\/p>\n<p>This tool is based on the LiftOver utility and Chain track from <a class=\"reference external\" href=\"http://genome.ucsc.edu/\">the UC Santa Cruz Genome Browser<\/a>.<\/p>\n<p>It converts coordinates and annotations between assemblies and genomes. It produces 2 files, one containing all the mapped coordinates and the other containing the unmapped coordinates, if any.<\/p>\n<blockquote>\n<\/blockquote>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>Converting the following hg16 intervals to hg18 intervals:<\/p>\n<pre class=\"literal-block\">\nchrX  85170   112199  AK002185  0  +\nchrX  110458  112199  AK097346  0  +\nchrX  112203  121212  AK074528  0  -\n<\/pre>\n<p>will produce the following hg18 intervals:<\/p>\n<pre class=\"literal-block\">\nchrX  132991  160020  AK002185  0  +\nchrX  158279  160020  AK097346  0  +\nchrX  160024  169033  AK074528  0  -\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "liftOver",
        "version": "1.0.6",
        "link": "/tool_runner?tool_id=liftOver1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "liftOver1",
        "name": "Convert genome coordinates"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "liftOver",
    "name": "Lift-Over"
  },
  {
    "elems": [
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "to an existing dataset",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\"><strong>TIP:<\/strong> If your data is not TAB delimited, use <em>Text Manipulation-&gt;Convert<\/em><\/p>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>You can enter any value and it will be added as a new column to your dataset<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>If your original data looks like this:<\/p>\n<pre class=\"literal-block\">\nchr1 10  100 geneA\nchr2 200 300 geneB\nchr2 400 500 geneC\n<\/pre>\n<p>Typing <strong>+<\/strong> in the text box will generate:<\/p>\n<pre class=\"literal-block\">\nchr1 10  100 geneA +\nchr2 200 300 geneB +\nchr2 400 500 geneC +\n<\/pre>\n<p>You can also add line numbers by selecting <strong>Iterate: YES<\/strong>. In this case if you enter <strong>1<\/strong> in the text box you will get:<\/p>\n<pre class=\"literal-block\">\nchr1 10  100 geneA 1\nchr2 200 300 geneB 2\nchr2 400 500 geneC 3\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=addValue",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "addValue",
        "name": "Add column"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "tail-to-head",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"warningmark\"><strong>WARNING:<\/strong> Be careful not to concatenate datasets of different kinds (e.g., sequences with intervals). This tool does not check if the datasets being concatenated are in the same format.<\/p>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>Concatenates datasets<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>Concatenating Dataset:<\/p>\n<pre class=\"literal-block\">\nchrX  151087187  151087355  A  0  -\nchrX  151572400  151572481  B  0  +\n<\/pre>\n<p>with Dataset1:<\/p>\n<pre class=\"literal-block\">\nchr1  151242630  151242955  X  0  +\nchr1  151271715  151271999  Y  0  +\nchr1  151278832  151279227  Z  0  -\n<\/pre>\n<p>and with Dataset2:<\/p>\n<pre class=\"literal-block\">\nchr2  100000030  200000955  P  0  +\nchr2  100000015  200000999  Q  0  +\n<\/pre>\n<p>will result in the following:<\/p>\n<pre class=\"literal-block\">\nchrX  151087187  151087355  A  0  -\nchrX  151572400  151572481  B  0  +\nchr1  151242630  151242955  X  0  +\nchr1  151271715  151271999  Y  0  +\nchr1  151278832  151279227  Z  0  -\nchr2  100000030  200000955  P  0  +\nchr2  100000015  200000999  Q  0  +\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=cat1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "cat1",
        "name": "Concatenate datasets"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "columns from a table",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"warningmark\"><strong>WARNING: This tool breaks column assignments.<\/strong> To re-establish column assignments run the tools and click on the pencil icon in the latest history item.<\/p>\n<p class=\"infomark\">The output of this tool is always in tabular format (e.g., if your original delimiters are commas, they will be replaced with tabs). For example:<\/p>\n<blockquote>\n<p>Cutting columns 1 and 3 from:<\/p>\n<pre class=\"literal-block\">\napple,is,good\nwindows,is,bad\n<\/pre>\n<p>will give:<\/p>\n<pre class=\"literal-block\">\napple   good\nwindows bad\n<\/pre>\n<\/blockquote>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>This tool selects (cuts out) specified columns from the dataset.<\/p>\n<ul class=\"simple\">\n<li>Columns are specified as <strong>c1<\/strong>, <strong>c2<\/strong>, and so on. Column count begins with <strong>1<\/strong><\/li>\n<li>Columns can be specified in any order (e.g., <strong>c2,c1,c6<\/strong>)<\/li>\n<li>If you specify more columns than actually present - empty spaces will be filled with dots<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>Input dataset (six columns: c1, c2, c3, c4, c5, and c6):<\/p>\n<pre class=\"literal-block\">\nchr1 10   1000  gene1 0 +\nchr2 100  1500  gene2 0 +\n<\/pre>\n<p><strong>cut<\/strong> on columns &quot;<strong>c1,c4,c6<\/strong>&quot; will return:<\/p>\n<pre class=\"literal-block\">\nchr1 gene1 +\nchr2 gene2 +\n<\/pre>\n<p><strong>cut<\/strong> on columns &quot;<strong>c6,c5,c4,c1<\/strong>&quot; will return:<\/p>\n<pre class=\"literal-block\">\n+ 0 gene1 chr1\n+ 0 gene2 chr2\n<\/pre>\n<p><strong>cut<\/strong> on columns &quot;<strong>c1-c3<\/strong>&quot; will return:<\/p>\n<pre class=\"literal-block\">\nchr1 10   1000\nchr2 100  1500\n<\/pre>\n<p><strong>cut<\/strong> on columns &quot;<strong>c8,c7,c4<\/strong>&quot; will return:<\/p>\n<pre class=\"literal-block\">\n. . gene1\n. . gene2\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "1.0.2",
        "link": "/tool_runner?tool_id=Cut1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Cut1",
        "name": "Cut"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "together",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\"><strong>TIP:<\/strong> If your data is not TAB delimited, use <em>Text Manipulation-&gt;Convert<\/em><\/p>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>This tool merges columns together. Any number of valid columns can be merged in any order.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>Input dataset (five columns: c1, c2, c3, c4, and c5):<\/p>\n<pre class=\"literal-block\">\n1 10   1000  gene1 chr\n2 100  1500  gene2 chr\n<\/pre>\n<p>merging columns &quot;<strong>c5,c1<\/strong>&quot; will return:<\/p>\n<pre class=\"literal-block\">\n1 10   1000  gene1 chr chr1\n2 100  1500  gene2 chr chr2\n<\/pre>\n<p class=\"warningmark\">Note that all original columns are preserved and the result of merge is added as the rightmost column.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=mergeCols1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "mergeCols1",
        "name": "Merge Columns"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "delimiters to TAB",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>Converts all delimiters of a specified type into TABs. Consecutive delimiters can be condensed in a single TAB.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<ul>\n<li><p class=\"first\">Input file:<\/p>\n<pre class=\"literal-block\">\nchrX||151283558|151283724|NM_000808_exon_8_0_chrX_151283559_r|0|-\nchrX|151370273|151370486|NM_000808_exon_9_0_chrX_151370274_r|0|-\nchrX|151559494|151559583|NM_018558_exon_1_0_chrX_151559495_f|0|+\nchrX|151564643|151564711|NM_018558_exon_2_0_chrX_151564644_f||||0|+\n<\/pre>\n<\/li>\n<li><p class=\"first\">Converting all pipe delimiters of the above file to TABs and condensing delimiters will get:<\/p>\n<pre class=\"literal-block\">\nchrX  151283558  151283724  NM_000808_exon_8_0_chrX_151283559_r  0  -\nchrX  151370273  151370486  NM_000808_exon_9_0_chrX_151370274_r  0  -\nchrX  151559494  151559583  NM_018558_exon_1_0_chrX_151559495_f  0  +\nchrX  151564643  151564711  NM_018558_exon_2_0_chrX_151564644_f  0  +\n<\/pre>\n<\/li>\n<\/ul>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=Convert+characters1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Convert characters1",
        "name": "Convert"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "as a new dataset",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"warningmark\"><strong>TIP<\/strong>. Once your interval appears in history, you must tell Galaxy which genome it belongs to by clicking pencil icon or the &quot;?&quot; link in the history item.<\/p>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>This tool allows you to create a single genomic interval. The resulting history item will be in the BED format.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>Typing the following values in the form:<\/p>\n<pre class=\"literal-block\">\nChromosome: chrX\nStart position: 151087187\nEnd position: 151370486\nName: NM_000808\nStrand: minus\n<\/pre>\n<p>will create a single interval:<\/p>\n<pre class=\"literal-block\">\nchrX  151087187  151370486  NM_000808  0  -\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=createInterval",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "createInterval",
        "name": "Create single interval"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "of selected columns",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"warningmark\"><strong>This tool breaks column assignments.<\/strong> To re-establish column assignments run the tool and click on the pencil icon in the resulting history item.<\/p>\n<p class=\"warningmark\">The format of the resulting dataset from this tool is always tabular.<\/p>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>This tool selects specified columns from a dataset and converts the values of those columns to upper or lower case.<\/p>\n<ul class=\"simple\">\n<li>Columns are specified as <strong>c1<\/strong>, <strong>c2<\/strong>, and so on.<\/li>\n<li>Columns can be specified in any order (e.g., <strong>c2,c1,c6<\/strong>)<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>Changing columns 1 and 3 ( delimited by Comma ) to upper case in:<\/p>\n<pre class=\"literal-block\">\napple,is,good\nwindows,is,bad\n<\/pre>\n<p>will result in:<\/p>\n<pre class=\"literal-block\">\nAPPLE is GOOD\nWINDOWS is BAD\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=ChangeCase",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "ChangeCase",
        "name": "Change Case"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "two files side by side",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\">Paste preserves column assignments of the first dataset.<\/p>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>This tool merges two datasets side by side. If the first (left) dataset contains column assignments such as chromosome, start, end and strand, these will be preserved. However, if you would like to change column assignments, click the pencil icon in the history item.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>First dataset:<\/p>\n<pre class=\"literal-block\">\na 1\na 2\na 3\n<\/pre>\n<p>Second dataset:<\/p>\n<pre class=\"literal-block\">\n20\n30\n40\n<\/pre>\n<p>Pasting them together will produce:<\/p>\n<pre class=\"literal-block\">\na 1 20\na 2 30\na 3 40\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=Paste1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Paste1",
        "name": "Paste"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "of a file",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool removes a specified number of lines from the beginning of a dataset.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>Input File:<\/p>\n<pre class=\"literal-block\">\nchr7  56632  56652   D17003_CTCF_R6  310  +\nchr7  56736  56756   D17003_CTCF_R7  354  +\nchr7  56761  56781   D17003_CTCF_R4  220  +\nchr7  56772  56792   D17003_CTCF_R7  372  +\nchr7  56775  56795   D17003_CTCF_R4  207  +\n<\/pre>\n<p>After removing the first 3 lines the dataset will look like this:<\/p>\n<pre class=\"literal-block\">\nchr7  56772  56792   D17003_CTCF_R7  372  +\nchr7  56775  56795   D17003_CTCF_R4  207  +\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=Remove+beginning1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Remove beginning1",
        "name": "Remove beginning"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "from a file",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool selects N random lines from a file, with no repeats, and preserving ordering.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>Input File:<\/p>\n<pre class=\"literal-block\">\nchr7  56632  56652   D17003_CTCF_R6  310  +\nchr7  56736  56756   D17003_CTCF_R7  354  +\nchr7  56761  56781   D17003_CTCF_R4  220  +\nchr7  56772  56792   D17003_CTCF_R7  372  +\nchr7  56775  56795   D17003_CTCF_R4  207  +\n<\/pre>\n<p>Selecting 2 random lines might return this:<\/p>\n<pre class=\"literal-block\">\nchr7  56736  56756   D17003_CTCF_R7  354  +\nchr7  56775  56795   D17003_CTCF_R4  207  +\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "2.0.2",
        "link": "/tool_runner?tool_id=random_lines1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "random_lines1",
        "name": "Select random lines"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "lines from a dataset",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool outputs specified number of lines from the <strong>beginning<\/strong> of a dataset<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>Selecting 2 lines from this:<\/p>\n<pre class=\"literal-block\">\nchr7  56632  56652  D17003_CTCF_R6  310  +\nchr7  56736  56756  D17003_CTCF_R7  354  +\nchr7  56761  56781  D17003_CTCF_R4  220  +\nchr7  56772  56792  D17003_CTCF_R7  372  +\nchr7  56775  56795  D17003_CTCF_R4  207  +\n<\/pre>\n<p>will produce:<\/p>\n<pre class=\"literal-block\">\nchr7  56632  56652  D17003_CTCF_R6  310  +\nchr7  56736  56756  D17003_CTCF_R7  354  +\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=Show+beginning1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Show beginning1",
        "name": "Select first"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "lines from a dataset",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool outputs specified number of lines from the <strong>end<\/strong> of a dataset<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<ul>\n<li><p class=\"first\">Input File:<\/p>\n<pre class=\"literal-block\">\nchr7    57134   57154   D17003_CTCF_R7  356     -\nchr7    57247   57267   D17003_CTCF_R4  207     +\nchr7    57314   57334   D17003_CTCF_R5  269     +\nchr7    57341   57361   D17003_CTCF_R7  375     +\nchr7    57457   57477   D17003_CTCF_R3  188     +\n<\/pre>\n<\/li>\n<li><p class=\"first\">Show last two lines of above file. The result is:<\/p>\n<pre class=\"literal-block\">\nchr7    57341   57361   D17003_CTCF_R7  375     +\nchr7    57457   57477   D17003_CTCF_R3  188     +\n<\/pre>\n<\/li>\n<\/ul>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=Show+tail1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Show tail1",
        "name": "Select last"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "leading or trailing characters",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>Trims specified number of characters from a dataset or its field (if dataset is tab-delimited).<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example 1<\/strong><\/p>\n<p>Trimming this dataset:<\/p>\n<pre class=\"literal-block\">\n1234567890\nabcdefghijk\n<\/pre>\n<p>by setting <strong>Trim from the beginning up to this position<\/strong> to <em>2<\/em> and <strong>Remove everything from this position to the end<\/strong> to <em>6<\/em> will produce:<\/p>\n<pre class=\"literal-block\">\n23456\nbcdef\n<\/pre>\n<hr class=\"docutils\" />\n<p><strong>Example 2<\/strong><\/p>\n<p>Trimming column 2 of this dataset:<\/p>\n<pre class=\"literal-block\">\nabcde 12345 fghij 67890\nfghij 67890 abcde 12345\n<\/pre>\n<p>by setting <strong>Trim content of this column only<\/strong> to <em>2<\/em>, <strong>Trim from the beginning up to this position<\/strong> to <em>2<\/em>, and <strong>Remove everything from this position to the end<\/strong> to <em>4<\/em> will produce:<\/p>\n<pre class=\"literal-block\">\nabcde  234 fghij 67890\nfghij  789 abcde 12345\n<\/pre>\n<hr class=\"docutils\" />\n<p><strong>Example 3<\/strong><\/p>\n<p>Trimming column 2 of this dataset:<\/p>\n<pre class=\"literal-block\">\nabcde 12345 fghij 67890\nfghij 67890 abcde 12345\n<\/pre>\n<p>by setting <strong>Trim content of this column only<\/strong> to <em>2<\/em>, <strong>Trim from the beginning up to this position<\/strong> to <em>2<\/em>, and <strong>Remove everything from this position to the end<\/strong> to <em>-2<\/em> will produce:<\/p>\n<pre class=\"literal-block\">\nabcde  23 fghij 67890\nfghij  78 abcde 12345\n<\/pre>\n<hr class=\"docutils\" />\n<p><strong>Trimming FASTQ datasets<\/strong><\/p>\n<p>This tool can be used to trim sequences and quality strings in FASTQ datasets. This is done by selected <em>Yes<\/em> from the <strong>Is input dataset in FASTQ format?<\/strong> dropdown. If set to <em>Yes<\/em>, the tool will skip all even numbered lines (see warning below). For example, trimming last 5 bases of this dataset:<\/p>\n<pre class=\"literal-block\">\n&#64;081017-and-081020:1:1:1715:1759\nGGACTCAGATAGTAATCCACGCTCCTTTAAAATATC\n+\nII#IIIIIII$5+.(9IIIIIII$%*$G$A31I&amp;&amp;B\n<\/pre>\n<p>cab done by setting <strong>Remove everything from this position to the end<\/strong> to 31:<\/p>\n<pre class=\"literal-block\">\n&#64;081017-and-081020:1:1:1715:1759\nGGACTCAGATAGTAATCCACGCTCCTTTAAA\n+\nII#IIIIIII$5+.(9IIIIIII$%*$G$A3\n<\/pre>\n<p><strong>Note<\/strong> that headers are skipped.<\/p>\n<p class=\"warningmark\"><strong>WARNING:<\/strong> This tool will only work on properly formatted FASTQ datasets where (1) each read and quality string occupy one line and (2) '&#64;' (read header) and &quot;+&quot; (quality header) lines are evenly numbered like in the above example.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "0.0.1",
        "link": "/tool_runner?tool_id=trimmer",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "trimmer",
        "name": "Trim"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "of a dataset",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool outputs counts of specified attributes (lines, words, characters) of a dataset.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example Output<\/strong><\/p>\n<pre class=\"literal-block\">\n#lines  words  characters\n7499    41376  624971\n<\/pre>\n<hr class=\"docutils\" />\n<p><strong>Citation<\/strong><\/p>\n<p>If you use this tool in Galaxy, please cite Blankenberg D, et al. <em>In preparation.<\/em><\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=wc_gnu",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "wc_gnu",
        "name": "Line/Word/Character count"
      },
      {
        "panel_section_name": "Text Manipulation",
        "xrefs": [],
        "description": "on a dataset",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool outputs Secure Hashes / Message Digests of a dataset using the user selected algorithms.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Citation<\/strong><\/p>\n<p>If you use this tool in Galaxy, please cite Blankenberg D, et al. <em>In preparation.<\/em><\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "textutil",
        "version": "0.0.1",
        "link": "/tool_runner?tool_id=secure_hash_message_digest",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "secure_hash_message_digest",
        "name": "Secure Hash / Message Digest"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "textutil",
    "name": "Text Manipulation"
  },
  {
    "elems": [
      {
        "panel_section_name": "Convert Formats",
        "xrefs": [],
        "description": "converter",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool converts data from BED format to GFF format (scroll down for format description).<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>The following data in BED format:<\/p>\n<pre class=\"literal-block\">\nchr28   346187  388197  BC114771        0       +       346187  388197  0       9       144,81,115,63,155,96,134,105,112,       0,24095,26190,31006,32131,33534,36994,41793,41898,\n<\/pre>\n<p>Will be converted to GFF (<strong>note<\/strong> that the start coordinate is incremented by 1):<\/p>\n<pre class=\"literal-block\">\n\nchr28   bed2gff mRNA    346188  388197  0       +       .       mRNA BC114771;\nchr28   bed2gff exon    346188  346331  0       +       .       exon BC114771;\nchr28   bed2gff exon    370283  370363  0       +       .       exon BC114771;\nchr28   bed2gff exon    372378  372492  0       +       .       exon BC114771;\nchr28   bed2gff exon    377194  377256  0       +       .       exon BC114771;\nchr28   bed2gff exon    378319  378473  0       +       .       exon BC114771;\nchr28   bed2gff exon    379722  379817  0       +       .       exon BC114771;\nchr28   bed2gff exon    383182  383315  0       +       .       exon BC114771;\nchr28   bed2gff exon    387981  388085  0       +       .       exon BC114771;\nchr28   bed2gff exon    388086  388197  0       +       .       exon BC114771;\n<\/pre>\n<hr class=\"docutils\" />\n<p class=\"informark\"><strong>About formats<\/strong><\/p>\n<p><strong>BED format<\/strong> Browser Extensible Data format was designed at UCSC for displaying data tracks in the Genome Browser. It has three required fields and several additional optional ones:<\/p>\n<p>The first three BED fields (required) are:<\/p>\n<pre class=\"literal-block\">\n1. chrom - The name of the chromosome (e.g. chr1, chrY_random).\n2. chromStart - The starting position in the chromosome. (The first base in a chromosome is numbered 0.)\n3. chromEnd - The ending position in the chromosome, plus 1 (i.e., a half-open interval).\n<\/pre>\n<p>The additional BED fields (optional) are:<\/p>\n<pre class=\"literal-block\">\n 4. name - The name of the BED line.\n 5. score - A score between 0 and 1000.\n 6. strand - Defines the strand - either '+' or '-'.\n 7. thickStart - The starting position where the feature is drawn thickly at the Genome Browser.\n 8. thickEnd - The ending position where the feature is drawn thickly at the Genome Browser.\n 9. reserved - This should always be set to zero.\n10. blockCount - The number of blocks (exons) in the BED line.\n11. blockSizes - A comma-separated list of the block sizes. The number of items in this list should correspond to blockCount.\n12. blockStarts - A comma-separated list of block starts. All of the blockStart positions should be calculated relative to chromStart. The number of items in this list should correspond to blockCount.\n13. expCount - The number of experiments.\n14. expIds - A comma-separated list of experiment ids. The number of items in this list should correspond to expCount.\n15. expScores - A comma-separated list of experiment scores. All of the expScores should be relative to expIds. The number of items in this list should correspond to expCount.\n<\/pre>\n<p><strong>GFF format<\/strong> General Feature Format is a format for describing genes and other features associated with DNA, RNA and Protein sequences. GFF lines have nine tab-separated fields:<\/p>\n<pre class=\"literal-block\">\n1. seqname - Must be a chromosome or scaffold.\n2. source - The program that generated this feature.\n3. feature - The name of this type of feature. Some examples of standard feature types are &quot;CDS&quot;, &quot;start_codon&quot;, &quot;stop_codon&quot;, and &quot;exon&quot;.\n4. start - The starting position of the feature in the sequence. The first base is numbered 1.\n5. end - The ending position of the feature (inclusive).\n6. score - A score between 0 and 1000. If there is no score value, enter &quot;.&quot;.\n7. strand - Valid entries include '+', '-', or '.' (for don't know/care).\n8. frame - If the feature is a coding exon, frame should be a number between 0-2 that represents the reading frame of the first base. If the feature is not a coding exon, the value should be '.'.\n9. group - All lines with the same group are linked together into a single item.\n<\/pre>\n",
        "edam_operations": [
          "operation_3434"
        ],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "convert",
        "version": "2.0.0",
        "link": "/tool_runner?tool_id=bed2gff1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "bed2gff1",
        "name": "BED-to-GFF"
      },
      {
        "panel_section_name": "Convert Formats",
        "xrefs": [],
        "description": "converter",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool converts data from GFF format to BED format (scroll down for format description).<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>The following data in GFF format:<\/p>\n<pre class=\"literal-block\">\nchr22  GeneA  enhancer  10000000  10001000  500      +   .  TGA\nchr22  GeneA  promoter  10010000  10010100  900      +   .  TGA\n<\/pre>\n<p>Will be converted to BED (<strong>note<\/strong> that 1 is subtracted from the start coordinate):<\/p>\n<pre class=\"literal-block\">\nchr22   9999999  10001000   enhancer   0   +\nchr22  10009999  10010100   promoter   0   +\n<\/pre>\n<hr class=\"docutils\" />\n<p class=\"infomark\"><strong>About formats<\/strong><\/p>\n<p><strong>BED format<\/strong> Browser Extensible Data format was designed at UCSC for displaying data tracks in the Genome Browser. It has three required fields and several additional optional ones:<\/p>\n<p>The first three BED fields (required) are:<\/p>\n<pre class=\"literal-block\">\n1. chrom - The name of the chromosome (e.g. chr1, chrY_random).\n2. chromStart - The starting position in the chromosome. (The first base in a chromosome is numbered 0.)\n3. chromEnd - The ending position in the chromosome, plus 1 (i.e., a half-open interval).\n<\/pre>\n<p>The additional BED fields (optional) are:<\/p>\n<pre class=\"literal-block\">\n 4. name - The name of the BED line.\n 5. score - A score between 0 and 1000.\n 6. strand - Defines the strand - either '+' or '-'.\n 7. thickStart - The starting position where the feature is drawn thickly at the Genome Browser.\n 8. thickEnd - The ending position where the feature is drawn thickly at the Genome Browser.\n 9. reserved - This should always be set to zero.\n10. blockCount - The number of blocks (exons) in the BED line.\n11. blockSizes - A comma-separated list of the block sizes. The number of items in this list should correspond to blockCount.\n12. blockStarts - A comma-separated list of block starts. All of the blockStart positions should be calculated relative to chromStart. The number of items in this list should correspond to blockCount.\n13. expCount - The number of experiments.\n14. expIds - A comma-separated list of experiment ids. The number of items in this list should correspond to expCount.\n15. expScores - A comma-separated list of experiment scores. All of the expScores should be relative to expIds. The number of items in this list should correspond to expCount.\n<\/pre>\n<p><strong>GFF format<\/strong> General Feature Format is a format for describing genes and other features associated with DNA, RNA and Protein sequences. GFF lines have nine tab-separated fields:<\/p>\n<pre class=\"literal-block\">\n1. seqname - Must be a chromosome or scaffold.\n2. source - The program that generated this feature.\n3. feature - The name of this type of feature. Some examples of standard feature types are &quot;CDS&quot;, &quot;start_codon&quot;, &quot;stop_codon&quot;, and &quot;exon&quot;.\n4. start - The starting position of the feature in the sequence. The first base is numbered 1.\n5. end - The ending position of the feature (inclusive).\n6. score - A score between 0 and 1000. If there is no score value, enter &quot;.&quot;.\n7. strand - Valid entries include '+', '-', or '.' (for don't know/care).\n8. frame - If the feature is a coding exon, frame should be a number between 0-2 that represents the reading frame of the first base. If the feature is not a coding exon, the value should be '.'.\n9. group - All lines with the same group are linked together into a single item.\n<\/pre>\n",
        "edam_operations": [
          "operation_3434"
        ],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "convert",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=gff2bed1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "gff2bed1",
        "name": "GFF-to-BED"
      },
      {
        "panel_section_name": "Convert Formats",
        "xrefs": [],
        "description": "Converts a MAF formatted file to the BED format",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool converts every MAF block to an interval line (in BED format; scroll down for description of MAF and BED formats) describing position of that alignment block within a corresponding genome.<\/p>\n<p>The interface for this tool contains two pages (steps):<\/p>\n<blockquote>\n<ul class=\"simple\">\n<li><strong>Step 1 of 2<\/strong>. Choose multiple alignments from history to be converted to BED format.<\/li>\n<li><strong>Step 2 of 2<\/strong>. Choose species from the alignment to be included in the output and specify how to deal with alignment blocks that lack one or more species:<ul>\n<li><strong>Choose species<\/strong> - the tool reads the alignment provided during Step 1 and generates a list of species contained within that alignment. Using checkboxes you can specify taxa to be included in the output (only reference genome, shown in <strong>bold<\/strong>, is selected by default). If you select more than one species, then more than one history item will be created.<\/li>\n<li><strong>Choose to include/exclude blocks with missing species<\/strong> - if an alignment block does not contain any one of the species you selected within <strong>Choose species<\/strong> menu and this option is set to <strong>exclude blocks with missing species<\/strong>, then coordinates of such a block <strong>will not<\/strong> be included in the output (see <strong>Example 2<\/strong> below).<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/blockquote>\n<hr class=\"docutils\" />\n<p><strong>Example 1<\/strong>: <strong>Include only reference genome<\/strong> (hg18 in this case) and <strong>include blocks with missing species<\/strong>:<\/p>\n<p>For the following alignment:<\/p>\n<pre class=\"literal-block\">\na score=68686.000000\ns hg18.chr20     56827368 75 +  62435964 GACAGGGTGCATCTGGGAGGG---CCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns panTro2.chr20  56528685 75 +  62293572 GACAGGGTGCATCTGAGAGGG---CCTGCCAGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns rheMac2.chr10  89144112 69 -  94855758 GACAGGGTGCATCTGAGAGGG---CCTGCTGGGCCTTTG-TTCAAAACTAGATATGCCCCAACTCCAATTCTA-------\ns mm8.chr2      173910832 61 + 181976762 AGAAGGATCCACCT------------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC-------\ns canFam2.chr24  46551822 67 +  50763139 CG------GCGTCTGTAAGGGGCCACCGCCCGGCCTGTG-CTCAAAGCTACAAATGACTCAACTCCCAACCGA------C\n\na score=10289.000000\ns hg18.chr20    56827443 37 + 62435964 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns panTro2.chr20 56528760 37 + 62293572 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns rheMac2.chr10 89144181 37 - 94855758 ATGTGCGGAAAATGTGATACAGAAACCTGCAGAGCAG\n<\/pre>\n<p>the tool will create <strong>a single<\/strong> history item containing the following (<strong>note<\/strong> that field 4 is added to the output and is numbered iteratively: hg18_0, hg18_1 etc.):<\/p>\n<pre class=\"literal-block\">\nchr20    56827368    56827443   hg18_0   0   +\nchr20    56827443    56827480   hg18_1   0   +\n<\/pre>\n<hr class=\"docutils\" />\n<p><strong>Example 2<\/strong>: <strong>Include hg18 and mm8<\/strong> and <strong>exclude blocks with missing species<\/strong>:<\/p>\n<p>For the following alignment:<\/p>\n<pre class=\"literal-block\">\na score=68686.000000\ns hg18.chr20     56827368 75 +  62435964 GACAGGGTGCATCTGGGAGGG---CCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns panTro2.chr20  56528685 75 +  62293572 GACAGGGTGCATCTGAGAGGG---CCTGCCAGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns rheMac2.chr10  89144112 69 -  94855758 GACAGGGTGCATCTGAGAGGG---CCTGCTGGGCCTTTG-TTCAAAACTAGATATGCCCCAACTCCAATTCTA-------\ns mm8.chr2      173910832 61 + 181976762 AGAAGGATCCACCT------------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC-------\ns canFam2.chr24  46551822 67 +  50763139 CG------GCGTCTGTAAGGGGCCACCGCCCGGCCTGTG-CTCAAAGCTACAAATGACTCAACTCCCAACCGA------C\n\na score=10289.000000\ns hg18.chr20    56827443 37 + 62435964 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns panTro2.chr20 56528760 37 + 62293572 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns rheMac2.chr10 89144181 37 - 94855758 ATGTGCGGAAAATGTGATACAGAAACCTGCAGAGCAG\n<\/pre>\n<p>the tool will create <strong>two<\/strong> history items (one for hg18 and one fopr mm8) containing the following (<strong>note<\/strong> that both history items contain only one line describing the first alignment block. The second MAF block is not included in the output because it does not contain mm8):<\/p>\n<p>History item <strong>1<\/strong> (for hg18):<\/p>\n<pre class=\"literal-block\">\nchr20    56827368    56827443   hg18_0   0   +\n<\/pre>\n<p>History item <strong>2<\/strong> (for mm8):<\/p>\n<pre class=\"literal-block\">\nchr2    173910832   173910893    mm8_0   0   +\n<\/pre>\n<hr class=\"docutils\" />\n<p class=\"infomark\"><strong>About formats<\/strong><\/p>\n<p><strong>MAF format<\/strong> multiple alignment format file. This format stores multiple alignments at the DNA level between entire genomes.<\/p>\n<blockquote>\n<ul class=\"simple\">\n<li>The .maf format is line-oriented. Each multiple alignment ends with a blank line.<\/li>\n<li>Each sequence in an alignment is on a single line.<\/li>\n<li>Lines starting with # are considered to be comments.<\/li>\n<li>Each multiple alignment is in a separate paragraph that begins with an &quot;a&quot; line and contains an &quot;s&quot; line for each sequence in the multiple alignment.<\/li>\n<li>Some MAF files may contain two optional line types:<ul>\n<li>An &quot;i&quot; line containing information about what is in the aligned species DNA before and after the immediately preceding &quot;s&quot; line;<\/li>\n<li>An &quot;e&quot; line containing information about the size of the gap between the alignments that span the current block.<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/blockquote>\n<p><strong>BED format<\/strong> Browser Extensible Data format was designed at UCSC for displaying data tracks in the Genome Browser. It has three required fields and a number of additional optional ones:<\/p>\n<p>The first three BED fields (required) are:<\/p>\n<pre class=\"literal-block\">\n1. chrom - The name of the chromosome (e.g. chr1, chrY_random).\n2. chromStart - The starting position in the chromosome. (The first base in a chromosome is numbered 0.)\n3. chromEnd - The ending position in the chromosome, plus 1 (i.e., a half-open interval).\n<\/pre>\n<p>Additional (optional) fields are:<\/p>\n<pre class=\"literal-block\">\n4. name - The name of the BED line.\n5. score - A score between 0 and 1000.\n6. strand - Defines the strand - either '+' or '-'.\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "convert",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=MAF_To_BED1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "MAF_To_BED1",
        "name": "MAF to BED"
      },
      {
        "panel_section_name": "Convert Formats",
        "xrefs": [],
        "description": "Converts a MAF formatted file to the Interval format",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool converts every MAF block to a set of genomic intervals describing the position of that alignment block within a corresponding genome. Sequences from aligning species are also included in the output.<\/p>\n<p>The interface for this tool contains several options:<\/p>\n<blockquote>\n<ul class=\"simple\">\n<li><strong>MAF file to convert<\/strong>. Choose multiple alignments from history to be converted to BED format.<\/li>\n<li><strong>Choose species<\/strong>. Choose additional species from the alignment to be included in the output<\/li>\n<li><strong>Exclude blocks which have a species missing<\/strong>. if an alignment block does not contain any one of the species found in the alignment set and this option is set to <strong>exclude blocks with missing species<\/strong>, then coordinates of such a block <strong>will not<\/strong> be included in the output (see <strong>Example 2<\/strong> below).<\/li>\n<li><strong>Remove Gap characters from sequences<\/strong>. Gaps can be removed from sequences before they are output.<\/li>\n<\/ul>\n<\/blockquote>\n<hr class=\"docutils\" />\n<p><strong>Example 1<\/strong>: <strong>Include only reference genome<\/strong> (hg18 in this case) and <strong>include blocks with missing species<\/strong>:<\/p>\n<p>For the following alignment:<\/p>\n<pre class=\"literal-block\">\na score=68686.000000\ns hg18.chr20     56827368 75 +  62435964 GACAGGGTGCATCTGGGAGGG---CCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns panTro2.chr20  56528685 75 +  62293572 GACAGGGTGCATCTGAGAGGG---CCTGCCAGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns rheMac2.chr10  89144112 69 -  94855758 GACAGGGTGCATCTGAGAGGG---CCTGCTGGGCCTTTG-TTCAAAACTAGATATGCCCCAACTCCAATTCTA-------\ns mm8.chr2      173910832 61 + 181976762 AGAAGGATCCACCT------------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC-------\ns canFam2.chr24  46551822 67 +  50763139 CG------GCGTCTGTAAGGGGCCACCGCCCGGCCTGTG-CTCAAAGCTACAAATGACTCAACTCCCAACCGA------C\n\na score=10289.000000\ns hg18.chr20    56827443 37 + 62435964 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns panTro2.chr20 56528760 37 + 62293572 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns rheMac2.chr10 89144181 37 - 94855758 ATGTGCGGAAAATGTGATACAGAAACCTGCAGAGCAG\n<\/pre>\n<p>the tool will create <strong>a single<\/strong> history item containing the following (<strong>note<\/strong> the name field is numbered iteratively: hg18_0_0, hg18_1_0 etc. where the first number is the block number and the second number is the iteration through the block (if a species appears twice in a block, that interval will be repeated) and sequences for each species are included in the order specified in the header: the field is left empty when no sequence is available for that species):<\/p>\n<pre class=\"literal-block\">\n#chrom        start   end     strand  score   name    canFam2 hg18    mm8     panTro2 rheMac2\nchr20 56827368        56827443        +       68686.0 hg18_0_0        CG------GCGTCTGTAAGGGGCCACCGCCCGGCCTGTG-CTCAAAGCTACAAATGACTCAACTCCCAACCGA------C        GACAGGGTGCATCTGGGAGGG---CCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-        AGAAGGATCCACCT------------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC-------        GACAGGGTGCATCTGAGAGGG---CCTGCCAGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-        GACAGGGTGCATCTGAGAGGG---CCTGCTGGGCCTTTG-TTCAAAACTAGATATGCCCCAACTCCAATTCTA-------\nchr20 56827443        56827480        +       10289.0 hg18_1_0                ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG           ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG   ATGTGCGGAAAATGTGATACAGAAACCTGCAGAGCAG\n<\/pre>\n<hr class=\"docutils\" />\n<p><strong>Example 2<\/strong>: <strong>Include hg18 and mm8<\/strong> and <strong>exclude blocks with missing species<\/strong>:<\/p>\n<p>For the following alignment:<\/p>\n<pre class=\"literal-block\">\na score=68686.000000\ns hg18.chr20     56827368 75 +  62435964 GACAGGGTGCATCTGGGAGGG---CCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns panTro2.chr20  56528685 75 +  62293572 GACAGGGTGCATCTGAGAGGG---CCTGCCAGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns rheMac2.chr10  89144112 69 -  94855758 GACAGGGTGCATCTGAGAGGG---CCTGCTGGGCCTTTG-TTCAAAACTAGATATGCCCCAACTCCAATTCTA-------\ns mm8.chr2      173910832 61 + 181976762 AGAAGGATCCACCT------------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC-------\ns canFam2.chr24  46551822 67 +  50763139 CG------GCGTCTGTAAGGGGCCACCGCCCGGCCTGTG-CTCAAAGCTACAAATGACTCAACTCCCAACCGA------C\n\na score=10289.000000\ns hg18.chr20    56827443 37 + 62435964 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns panTro2.chr20 56528760 37 + 62293572 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns rheMac2.chr10 89144181 37 - 94855758 ATGTGCGGAAAATGTGATACAGAAACCTGCAGAGCAG\n<\/pre>\n<p>the tool will create <strong>two<\/strong> history items (one for hg18 and one for mm8) containing the following (<strong>note<\/strong> that both history items contain only one line describing the first alignment block. The second MAF block is not included in the output because it does not contain mm8):<\/p>\n<p>History item <strong>1<\/strong> (for hg18):<\/p>\n<pre class=\"literal-block\">\n#chrom       start   end     strand  score   name    canFam2 hg18    mm8     panTro2 rheMac2\nchr20        56827368        56827443        +       68686.0 hg18_0_0        CG------GCGTCTGTAAGGGGCCACCGCCCGGCCTGTG-CTCAAAGCTACAAATGACTCAACTCCCAACCGA------C        GACAGGGTGCATCTGGGAGGG---CCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-        AGAAGGATCCACCT------------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC-------        GACAGGGTGCATCTGAGAGGG---CCTGCCAGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-        GACAGGGTGCATCTGAGAGGG---CCTGCTGGGCCTTTG-TTCAAAACTAGATATGCCCCAACTCCAATTCTA-------\n<\/pre>\n<p>History item <strong>2<\/strong> (for mm8):<\/p>\n<pre class=\"literal-block\">\n#chrom       start   end     strand  score   name    canFam2 hg18    mm8     panTro2 rheMac2\nchr2 173910832       173910893       +       68686.0 mm8_0_0 CG------GCGTCTGTAAGGGGCCACCGCCCGGCCTGTG-CTCAAAGCTACAAATGACTCAACTCCCAACCGA------C        GACAGGGTGCATCTGGGAGGG---CCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-        AGAAGGATCCACCT------------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC-------        GACAGGGTGCATCTGAGAGGG---CCTGCCAGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-        GACAGGGTGCATCTGAGAGGG---CCTGCTGGGCCTTTG-TTCAAAACTAGATATGCCCCAACTCCAATTCTA-------\n<\/pre>\n<hr class=\"docutils\" />\n<p class=\"infomark\"><strong>About formats<\/strong><\/p>\n<p><strong>MAF format<\/strong> multiple alignment format file. This format stores multiple alignments at the DNA level between entire genomes.<\/p>\n<blockquote>\n<ul class=\"simple\">\n<li>The .maf format is line-oriented. Each multiple alignment ends with a blank line.<\/li>\n<li>Each sequence in an alignment is on a single line.<\/li>\n<li>Lines starting with # are considered to be comments.<\/li>\n<li>Each multiple alignment is in a separate paragraph that begins with an &quot;a&quot; line and contains an &quot;s&quot; line for each sequence in the multiple alignment.<\/li>\n<li>Some MAF files may contain two optional line types:<ul>\n<li>An &quot;i&quot; line containing information about what is in the aligned species DNA before and after the immediately preceding &quot;s&quot; line;<\/li>\n<li>An &quot;e&quot; line containing information about the size of the gap between the alignments that span the current block.<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/blockquote>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "convert",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=MAF_To_Interval1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "MAF_To_Interval1",
        "name": "MAF to Interval"
      },
      {
        "panel_section_name": "Convert Formats",
        "xrefs": [],
        "description": "Converts a MAF formatted file to FASTA format",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>Types of MAF to FASTA conversion<\/strong><\/p>\n<blockquote>\n<ul class=\"simple\">\n<li><strong>Multiple Blocks<\/strong> converts a single MAF block to a single FASTA block. For example, if you have 6 MAF blocks, they will be converted to 6 FASTA blocks.<\/li>\n<li><strong>One Sequence per Species<\/strong> converts MAF blocks to a single aggregated FASTA block. For example, if you have 6 MAF blocks, they will be converted and concatenated into a single FASTA block.<\/li>\n<\/ul>\n<\/blockquote>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>This tool converts MAF blocks to FASTA format and concatenates them into a single FASTA block or outputs multiple FASTA blocks separated by empty lines.<\/p>\n<p>The interface for this tool contains two pages (steps):<\/p>\n<blockquote>\n<ul>\n<li><p class=\"first\"><strong>Step 1 of 2<\/strong>. Choose multiple alignments from history to be converted to FASTA format.<\/p>\n<\/li>\n<li><p class=\"first\"><strong>Step 2 of 2<\/strong>. Choose the type of output as well as the species from the alignment to be included in the output.<\/p>\n<p>Multiple Block output has additional options:<\/p>\n<ul class=\"simple\">\n<li><strong>Choose species<\/strong> - the tool reads the alignment provided during Step 1 and generates a list of species contained within that alignment. Using checkboxes you can specify taxa to be included in the output (all species are selected by default).<\/li>\n<li><strong>Choose to include/exclude blocks with missing species<\/strong> - if an alignment block does not contain any one of the species you selected within <strong>Choose species<\/strong> menu and this option is set to <strong>exclude blocks with missing species<\/strong>, then such a block <strong>will not<\/strong> be included in the output (see <strong>Example 2<\/strong> below).  For example, if you want to extract human, mouse, and rat from a series of alignments and one of the blocks does not contain mouse sequence, then this block will not be converted to FASTA and will not be returned.<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/blockquote>\n<hr class=\"docutils\" />\n<p><strong>Example 1<\/strong>:<\/p>\n<p>In the concatenated approach, the following alignment:<\/p>\n<pre class=\"literal-block\">\na score=68686.000000\ns hg18.chr20     56827368 75 +  62435964 GACAGGGTGCATCTGGGAGGG---CCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns panTro2.chr20  56528685 75 +  62293572 GACAGGGTGCATCTGAGAGGG---CCTGCCAGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns rheMac2.chr10  89144112 69 -  94855758 GACAGGGTGCATCTGAGAGGG---CCTGCTGGGCCTTTG-TTCAAAACTAGATATGCCCCAACTCCAATTCTA-------\ns mm8.chr2      173910832 61 + 181976762 AGAAGGATCCACCT------------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC-------\ns canFam2.chr24  46551822 67 +  50763139 CG------GCGTCTGTAAGGGGCCACCGCCCGGCCTGTG-CTCAAAGCTACAAATGACTCAACTCCCAACCGA------C\n\na score=10289.000000\ns hg18.chr20    56827443 37 + 62435964 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns panTro2.chr20 56528760 37 + 62293572 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns rheMac2.chr10 89144181 37 - 94855758 ATGTGCGGAAAATGTGATACAGAAACCTGCAGAGCAG\n<\/pre>\n<p>will be converted to (<strong>note<\/strong> that because mm8 (mouse) and canFam2 (dog) are absent from the second block, they are replaced with gaps after concatenation):<\/p>\n<pre class=\"literal-block\">\n&gt;canFam2\nCG------GCGTCTGTAAGGGGCCACCGCCCGGCCTGTG-CTCAAAGCTACAAATGACTCAACTCCCAACCGA------C-------------------------------------\n&gt;hg18\nGACAGGGTGCATCTGGGAGGG---CCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\n&gt;mm8\nAGAAGGATCCACCT------------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC--------------------------------------------\n&gt;panTro2\nGACAGGGTGCATCTGAGAGGG---CCTGCCAGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\n&gt;rheMac2\nGACAGGGTGCATCTGAGAGGG---CCTGCTGGGCCTTTG-TTCAAAACTAGATATGCCCCAACTCCAATTCTA-------ATGTGCGGAAAATGTGATACAGAAACCTGCAGAGCAG\n<\/pre>\n<hr class=\"docutils\" />\n<p><strong>Example 2a<\/strong>: Multiple Block Approach <strong>Include all species<\/strong> and <strong>include blocks with missing species<\/strong>:<\/p>\n<p>The following alignment:<\/p>\n<pre class=\"literal-block\">\na score=68686.000000\ns hg18.chr20     56827368 75 +  62435964 GACAGGGTGCATCTGGGAGGG---CCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns panTro2.chr20  56528685 75 +  62293572 GACAGGGTGCATCTGAGAGGG---CCTGCCAGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns rheMac2.chr10  89144112 69 -  94855758 GACAGGGTGCATCTGAGAGGG---CCTGCTGGGCCTTTG-TTCAAAACTAGATATGCCCCAACTCCAATTCTA-------\ns mm8.chr2      173910832 61 + 181976762 AGAAGGATCCACCT------------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC-------\ns canFam2.chr24  46551822 67 +  50763139 CG------GCGTCTGTAAGGGGCCACCGCCCGGCCTGTG-CTCAAAGCTACAAATGACTCAACTCCCAACCGA------C\n\na score=10289.000000\ns hg18.chr20    56827443 37 + 62435964 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns panTro2.chr20 56528760 37 + 62293572 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns rheMac2.chr10 89144181 37 - 94855758 ATGTGCGGAAAATGTGATACAGAAACCTGCAGAGCAG\n<\/pre>\n<p>will be converted to:<\/p>\n<pre class=\"literal-block\">\n&gt;hg18.chr20(+):56827368-56827443|hg18_0\nGACAGGGTGCATCTGGGAGGG---CCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\n&gt;panTro2.chr20(+):56528685-56528760|panTro2_0\nGACAGGGTGCATCTGAGAGGG---CCTGCCAGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\n&gt;rheMac2.chr10(-):89144112-89144181|rheMac2_0\nGACAGGGTGCATCTGAGAGGG---CCTGCTGGGCCTTTG-TTCAAAACTAGATATGCCCCAACTCCAATTCTA-------\n&gt;mm8.chr2(+):173910832-173910893|mm8_0\nAGAAGGATCCACCT------------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC-------\n&gt;canFam2.chr24(+):46551822-46551889|canFam2_0\nCG------GCGTCTGTAAGGGGCCACCGCCCGGCCTGTG-CTCAAAGCTACAAATGACTCAACTCCCAACCGA------C\n\n&gt;hg18.chr20(+):56827443-56827480|hg18_1\nATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\n&gt;panTro2.chr20(+):56528760-56528797|panTro2_1\nATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\n&gt;rheMac2.chr10(-):89144181-89144218|rheMac2_1\nATGTGCGGAAAATGTGATACAGAAACCTGCAGAGCAG\n<\/pre>\n<hr class=\"docutils\" />\n<p><strong>Example 2b<\/strong>: Multiple Block Approach <strong>Include hg18 and mm8<\/strong> and <strong>exclude blocks with missing species<\/strong>:<\/p>\n<p>The following alignment:<\/p>\n<pre class=\"literal-block\">\na score=68686.000000\ns hg18.chr20     56827368 75 +  62435964 GACAGGGTGCATCTGGGAGGG---CCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns panTro2.chr20  56528685 75 +  62293572 GACAGGGTGCATCTGAGAGGG---CCTGCCAGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC-\ns rheMac2.chr10  89144112 69 -  94855758 GACAGGGTGCATCTGAGAGGG---CCTGCTGGGCCTTTG-TTCAAAACTAGATATGCCCCAACTCCAATTCTA-------\ns mm8.chr2      173910832 61 + 181976762 AGAAGGATCCACCT------------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC-------\ns canFam2.chr24  46551822 67 +  50763139 CG------GCGTCTGTAAGGGGCCACCGCCCGGCCTGTG-CTCAAAGCTACAAATGACTCAACTCCCAACCGA------C\n\na score=10289.000000\ns hg18.chr20    56827443 37 + 62435964 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns panTro2.chr20 56528760 37 + 62293572 ATGTGCAGAAAATGTGATACAGAAACCTGCAGAGCAG\ns rheMac2.chr10 89144181 37 - 94855758 ATGTGCGGAAAATGTGATACAGAAACCTGCAGAGCAG\n<\/pre>\n<p>will be converted to (<strong>note<\/strong> that the second MAF block, which does not have mm8, is not included in the output):<\/p>\n<pre class=\"literal-block\">\n&gt;hg18.chr20(+):56827368-56827443|hg18_0\nGACAGGGTGCATCTGGGAGGGCCTGCCGGGCCTTTA-TTCAACACTAGATACGCCCCATCTCCAATTCTAATGGAC\n&gt;mm8.chr2(+):173910832-173910893|mm8_0\nAGAAGGATCCACCT---------TGCTGGGCCTCTGCTCCAGCAAGACCCACCTCCCAACTCAAATGCCC------\n<\/pre>\n<hr class=\"docutils\" />\n<p class=\"infomark\"><strong>About formats<\/strong><\/p>\n<blockquote>\n<p><strong>MAF format<\/strong> multiple alignment format file. This format stores multiple alignments at the DNA level between entire genomes.<\/p>\n<ul class=\"simple\">\n<li>The .maf format is line-oriented. Each multiple alignment ends with a blank line.<\/li>\n<li>Each sequence in an alignment is on a single line.<\/li>\n<li>Lines starting with # are considered to be comments.<\/li>\n<li>Each multiple alignment is in a separate paragraph that begins with an &quot;a&quot; line and contains an &quot;s&quot; line for each sequence in the multiple alignment.<\/li>\n<li>Some MAF files may contain two optional line types:<ul>\n<li>An &quot;i&quot; line containing information about what is in the aligned species DNA before and after the immediately preceding &quot;s&quot; line;<\/li>\n<li>An &quot;e&quot; line containing information about the size of the gap between the alignments that span the current block.<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/blockquote>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "convert",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=MAF_To_Fasta1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "MAF_To_Fasta1",
        "name": "MAF to FASTA"
      },
      {
        "panel_section_name": "Convert Formats",
        "xrefs": [],
        "description": "",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool extracts data from the 454 Sequencer SFF format and creates three files containing the:\nSequences (FASTA),\nQualities (QUAL) and\nClippings (XML)<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "convert",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=Sff_extractor",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Sff_extractor",
        "name": "SFF converter"
      },
      {
        "panel_section_name": "Convert Formats",
        "xrefs": [],
        "description": "converter",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>Syntax<\/strong><\/p>\n<p>This tool converts bedgraph or wiggle data into bigWig type.<\/p>\n<ul>\n<li><p class=\"first\"><strong>Wiggle format<\/strong>: The .wig format is line-oriented. Wiggle data is preceded by a UCSC track definition line.  Following the track definition line is the track data, which can be entered in three different formats described below.<\/p>\n<ul>\n<li><p class=\"first\"><strong>BED format<\/strong> with no declaration line and four columns of data:<\/p>\n<pre class=\"literal-block\">\nchromA  chromStartA  chromEndA  dataValueA\nchromB  chromStartB  chromEndB  dataValueB\n<\/pre>\n<\/li>\n<li><p class=\"first\"><strong>variableStep<\/strong> two column data; started by a declaration line and followed with chromosome positions and data values:<\/p>\n<pre class=\"literal-block\">\nvariableStep  chrom=chrN  [span=windowSize]\nchromStartA  dataValueA\nchromStartB  dataValueB\n<\/pre>\n<\/li>\n<li><p class=\"first\"><strong>fixedStep<\/strong> single column data; started by a declaration line and followed with data values:<\/p>\n<pre class=\"literal-block\">\nfixedStep  chrom=chrN  start=position  step=stepInterval  [span=windowSize]\ndataValue1\ndataValue2\n<\/pre>\n<\/li>\n<\/ul>\n<\/li>\n<li><p class=\"first\">The <strong>BedGraph format<\/strong> is described in detail at the <a class=\"reference external\" href=\"http://genome.ucsc.edu/goldenPath/help/bedgraph.html\">UCSC Bioinformatics website<\/a><\/p>\n<\/li>\n<\/ul>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "convert",
        "version": "1.1.1",
        "link": "/tool_runner?tool_id=wig_to_bigWig",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "wig_to_bigWig",
        "name": "Wig/BedGraph-to-bigWig"
      },
      {
        "panel_section_name": "Convert Formats",
        "xrefs": [],
        "description": "converter",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p>This tool converts a <strong>sorted<\/strong> BED file into a bigBed file.<\/p>\n<p>Currently, the bedFields option to specify the number of non-standard fields is not supported as an AutoSQL file must be provided, which is a format\ncurrently not supported by Galaxy.<\/p>\n",
        "edam_operations": [
          "operation_3434"
        ],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "convert",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=bed_to_bigBed",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "bed_to_bigBed",
        "name": "BED-to-bigBed"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "convert",
    "name": "Convert Formats"
  },
  {
    "elems": [
      {
        "panel_section_name": "Filter and Sort",
        "xrefs": [],
        "description": "data on any column using simple expressions",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"warningmark\">Double equal signs, ==, must be used as <em>&quot;equal to&quot;<\/em> (e.g., <strong>c1 == 'chr22'<\/strong>)<\/p>\n<p class=\"infomark\"><strong>TIP:<\/strong> Attempting to apply a filtering condition may throw exceptions if the data type (e.g., string, integer) in every line of the columns being filtered is not appropriate for the condition (e.g., attempting certain numerical calculations on strings).  If an exception is thrown when applying the condition to a line, that line is skipped as invalid for the filter condition.  The number of invalid skipped lines is documented in the resulting history item as a &quot;Condition/data issue&quot;.<\/p>\n<p class=\"infomark\"><strong>TIP:<\/strong> If your data is not TAB delimited, use <em>Text Manipulation-&gt;Convert<\/em><\/p>\n<hr class=\"docutils\" />\n<p><strong>Syntax<\/strong><\/p>\n<p>The filter tool allows you to restrict the dataset using simple conditional statements.<\/p>\n<ul class=\"simple\">\n<li>Columns are referenced with <strong>c<\/strong> and a <strong>number<\/strong>. For example, <strong>c1<\/strong> refers to the first column of a tab-delimited file<\/li>\n<li>Make sure that multi-character operators contain no white space ( e.g., <strong>&lt;=<\/strong> is valid while <strong>&lt; =<\/strong> is not valid )<\/li>\n<li>When using 'equal-to' operator <strong>double equal sign '==' must be used<\/strong> ( e.g., <strong>c1=='chr1'<\/strong> )<\/li>\n<li>Non-numerical values must be included in single or double quotes ( e.g., <strong>c6=='+'<\/strong> )<\/li>\n<li>Filtering condition can include logical operators, but <strong>make sure operators are all lower case<\/strong> ( e.g., <strong>(c1!='chrX' and c1!='chrY') or not c6=='+'<\/strong> )<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<ul class=\"simple\">\n<li><strong>c1=='chr1'<\/strong> selects lines in which the first column is chr1<\/li>\n<li><strong>c3-c2&lt;100*c4<\/strong> selects lines where subtracting column 3 from column 2 is less than the value of column 4 times 100<\/li>\n<li><strong>len(c2.split(',')) &lt; 4<\/strong> will select lines where the second column has less than four comma separated elements<\/li>\n<li><strong>c2&gt;=1<\/strong> selects lines in which the value of column 2 is greater than or equal to 1<\/li>\n<li>Numbers should not contain commas - <strong>c2&lt;=44,554,350<\/strong> will not work, but <strong>c2&lt;=44554350<\/strong> will<\/li>\n<li>Some words in the data can be used, but must be single or double quoted ( e.g., <strong>c3=='exon'<\/strong> )<\/li>\n<\/ul>\n",
        "edam_operations": [
          "operation_0335"
        ],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "filter",
        "version": "1.1.0",
        "link": "/tool_runner?tool_id=Filter1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Filter1",
        "name": "Filter"
      },
      {
        "panel_section_name": "Filter and Sort",
        "xrefs": [],
        "description": "data in ascending or descending order",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\"><strong>TIP:<\/strong> If your data is not TAB delimited, use <em>Text Manipulation-&gt;Convert<\/em><\/p>\n<hr class=\"docutils\" />\n<p><strong>Syntax<\/strong><\/p>\n<p>This tool sorts the dataset on any number of columns in either ascending or descending order.<\/p>\n<ul class=\"simple\">\n<li><strong>Numerical sort<\/strong> orders numbers by their magnitude, ignores all characters besides numbers, and evaluates a string of numbers to the value they signify.<\/li>\n<li><strong>General numeric sort<\/strong> orders numbers by their general numerical value. Unlike the numerical sort option, it can handle numbers in scientific notation too.<\/li>\n<li><strong>Alphabetical sort<\/strong> is a phonebook type sort based on the conventional order of letters in an alphabet. Each nth letter is compared with the nth letter of other words in the list, starting at the first letter of each word and advancing to the second, third, fourth, and so on, until the order is established. Therefore, in an alphabetical sort, 2 comes after 100 (1 &lt; 2).<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Examples<\/strong><\/p>\n<p>The list of numbers 4,17,3,5 collates to 3,4,5,17 by numerical sorting, while it collates to 17,3,4,5 by alphabetical sorting.<\/p>\n<p>Sorting the following:<\/p>\n<pre class=\"literal-block\">\nQ     d    7   II    jhu  45\nA     kk   4   I     h    111\nPd    p    1   ktY   WS   113\nA     g    10  H     ZZ   856\nA     edf  4   tw    b    234\nBBB   rt   10  H     ZZ   100\nA     rew  10  d     b    1111\nC     sd   19  YH    aa   10\nHah   c    23  ver   bb   467\nMN    gtr  1   a     X    32\nN     j    9   a     T    205\nBBB   rrf  10  b     Z    134\nodfr  ws   6   Weg   dew  201\nC     f    3   WW    SW   34\nA     jhg  4   I     b    345\nPd    gf   7   Gthe  de   567\nrS    hty  90  YY    LOp  89\nA     g    10  H     h    43\nA     g    4   I     h    500\n<\/pre>\n<p>on columns 1 (alphabetical), 3 (numerical), and 6 (numerical) in ascending order will yield:<\/p>\n<pre class=\"literal-block\">\nA     kk   4   I     h    111\nA     edf  4   tw    b    234\nA     jhg  4   I     b    345\nA     g    4   I     h    500\nA     g    10  H     h    43\nA     g    10  H     ZZ   856\nA     rew  10  d     b    1111\nBBB   rt   10  H     ZZ   100\nBBB   rrf  10  b     Z    134\nC     f    3   WW    SW   34\nC     sd   19  YH    aa   10\nHah   c    23  ver   bb   467\nMN    gtr  1   a     X    32\nN     j    9   a     T    205\nodfr  ws   6   Weg   dew  201\nPd    p    1   ktY   WS   113\nPd    gf   7   Gthe  de   567\nQ     d    7   II    jhu  45\nrS    hty  90  YY    LOp  89\n<\/pre>\n<p>Sorting the following:<\/p>\n<pre class=\"literal-block\">\nchr10  100  200  feature1  100.01   +\nchr20  800  900  feature2  1.1      +\nchr2   500  600  feature3  1000.1   +\nchr1   300  400  feature4  1.1e-05  +\nchr21  300  500  feature5  1.1e2    +\nchr15  700  800  feature6  1.1e4    +\n<\/pre>\n<p>on column 5 (numerical) in ascending order will yield:<\/p>\n<pre class=\"literal-block\">\nchr1   300  400  feature4  1.1e-05  +\nchr15  700  800  feature6  1.1e4    +\nchr20  800  900  feature2  1.1      +\nchr21  300  500  feature5  1.1e2    +\nchr10  100  200  feature1  100.01   +\nchr2   500  600  feature3  1000.1   +\n<\/pre>\n<p>on column 5 (general numeric) in ascending order will yield:<\/p>\n<pre class=\"literal-block\">\nchr1   300  400  feature4  1.1e-05  +\nchr20  800  900  feature2  1.1      +\nchr10  100  200  feature1  100.01   +\nchr21  300  500  feature5  1.1e2    +\nchr2   500  600  feature3  1000.1   +\nchr15  700  800  feature6  1.1e4    +\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "filter",
        "version": "1.1.0",
        "link": "/tool_runner?tool_id=sort1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "sort1",
        "name": "Sort"
      },
      {
        "panel_section_name": "Filter and Sort",
        "xrefs": [],
        "description": "lines that match an expression",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\"><strong>TIP:<\/strong> If your data is not TAB delimited, use <em>Text Manipulation-&gt;Convert<\/em><\/p>\n<hr class=\"docutils\" />\n<p><strong>Syntax<\/strong><\/p>\n<p>The select tool searches the data for lines containing or not containing a match to the given pattern. Regular Expression is introduced in this tool. A Regular Expression is a pattern describing a certain amount of text.<\/p>\n<ul class=\"simple\">\n<li><strong>( ) { } [ ] . * ? + ^ $<\/strong> are all special characters. <strong>\\<\/strong> can be used to &quot;escape&quot; a special character, allowing that special character to be searched for.<\/li>\n<li><strong>\\A<\/strong> matches the beginning of a string(but not an internal line).<\/li>\n<li><strong>\\d<\/strong> matches a digit, same as [0-9].<\/li>\n<li><strong>\\D<\/strong> matches a non-digit.<\/li>\n<li><strong>\\s<\/strong> matches a whitespace character.<\/li>\n<li><strong>\\S<\/strong> matches anything BUT a whitespace.<\/li>\n<li><strong>\\t<\/strong> matches a tab.<\/li>\n<li><strong>\\w<\/strong> matches an alphanumeric character.<\/li>\n<li><strong>\\W<\/strong> matches anything but an alphanumeric character.<\/li>\n<li><strong>(<\/strong> .. <strong>)<\/strong> groups a particular pattern.<\/li>\n<li><strong>\\Z<\/strong> matches the end of a string(but not a internal line).<\/li>\n<li><strong>{<\/strong> n or n, or n,m <strong>}<\/strong> specifies an expected number of repetitions of the preceding pattern.<ul>\n<li><strong>{n}<\/strong> The preceding item is matched exactly n times.<\/li>\n<li><strong>{n,}<\/strong> The preceding item is matched n or more times.<\/li>\n<li><strong>{n,m}<\/strong> The preceding item is matched at least n times but not more than m times.<\/li>\n<\/ul>\n<\/li>\n<li><strong>[<\/strong> ... <strong>]<\/strong> creates a character class. Within the brackets, single characters can be placed. A dash (-) may be used to indicate a range such as <strong>a-z<\/strong>.<\/li>\n<li><strong>.<\/strong> Matches any single character except a newline.<\/li>\n<li><strong>*<\/strong> The preceding item will be matched zero or more times.<\/li>\n<li><strong>?<\/strong> The preceding item is optional and matched at most once.<\/li>\n<li><strong>+<\/strong> The preceding item will be matched one or more times.<\/li>\n<li><strong>^<\/strong> has two meaning:\n- matches the beginning of a line or string.\n- indicates negation in a character class. For example, [^...] matches every character except the ones inside brackets.<\/li>\n<li><strong>$<\/strong> matches the end of a line or string.<\/li>\n<li><strong>|<\/strong> Separates alternate possibilities.<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<ul class=\"simple\">\n<li><strong>^chr([0-9A-Za-z])+<\/strong> would match lines that begin with chromosomes, such as lines in a BED format file.<\/li>\n<li><strong>(ACGT){1,5}<\/strong> would match at least 1 &quot;ACGT&quot; and at most 5 &quot;ACGT&quot; consecutively.<\/li>\n<li><strong>([^,][0-9]{1,3})(,[0-9]{3})*<\/strong> would match a large integer that is properly separated with commas such as 23,078,651.<\/li>\n<li><strong>(abc)|(def)<\/strong> would match either &quot;abc&quot; or &quot;def&quot;.<\/li>\n<li><strong>^\\W+#<\/strong> would match any line that is a comment.<\/li>\n<\/ul>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "filter",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=Grep1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Grep1",
        "name": "Select"
      },
      {
        "model_class": "ToolSectionLabel",
        "version": "",
        "id": "gff",
        "text": "GFF"
      },
      {
        "panel_section_name": "Filter and Sort",
        "xrefs": [],
        "description": "from GFF data",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool extracts selected features from GFF data.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>Selecting <strong>promoter<\/strong> from the following GFF data:<\/p>\n<pre class=\"literal-block\">\nchr22  GeneA  enhancer  10000000  10001000  500  +  .  TGA\nchr22  GeneA  promoter  10010000  10010100  900  +  .  TGA\nchr22  GeneB  promoter  10020000  10025000  400  -  .  TGB\nchr22  GeneB  CCDS2220  10030000  10065000  800  -  .  TGB\n<\/pre>\n<p>will produce the following output:<\/p>\n<pre class=\"literal-block\">\nchr22  GeneA  promoter  10010000  10010100  900  +  .  TGA\nchr22  GeneB  promoter  10020000  10025000  400  -  .  TGB\n<\/pre>\n<hr class=\"docutils\" />\n<p class=\"infomark\"><strong>About formats<\/strong><\/p>\n<p><strong>GFF format<\/strong> General Feature Format is a format for describing genes and other features associated with DNA, RNA and Protein sequences. GFF lines have nine tab-separated fields:<\/p>\n<pre class=\"literal-block\">\n1. seqname - Must be a chromosome or scaffold.\n2. source - The program that generated this feature.\n3. feature - The name of this type of feature. Some examples of standard feature types are &quot;CDS&quot;, &quot;start_codon&quot;, &quot;stop_codon&quot;, and &quot;exon&quot;.\n4. start - The starting position of the feature in the sequence. The first base is numbered 1.\n5. end - The ending position of the feature (inclusive).\n6. score - A score between 0 and 1000. If there is no score value, enter &quot;.&quot;.\n7. strand - Valid entries include '+', '-', or '.' (for don't know/care).\n8. frame - If the feature is a coding exon, frame should be a number between 0-2 that represents the reading frame of the first base. If the feature is not a coding exon, the value should be '.'.\n9. group - All lines with the same group are linked together into a single item.\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "filter",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=Extract_features1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Extract_features1",
        "name": "Extract features"
      },
      {
        "panel_section_name": "Filter and Sort",
        "xrefs": [],
        "description": "using simple expressions",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"warningmark\">Double equal signs, ==, must be used as <em>&quot;equal to&quot;<\/em> (e.g., <strong>c1 == 'chr22'<\/strong>)<\/p>\n<p class=\"infomark\"><strong>TIP:<\/strong> Attempting to apply a filtering condition may throw exceptions if the data type (e.g., string, integer) in every line of the attribute being filtered is not appropriate for the condition (e.g., attempting certain numerical calculations on strings).  If an exception is thrown when applying the condition to a line, that line is skipped as invalid for the filter condition.  The number of invalid skipped lines is documented in the resulting history item as a &quot;Condition/data issue&quot;.<\/p>\n<p class=\"infomark\"><strong>TIP:<\/strong> If your data is not TAB delimited, use <em>Text Manipulation-&gt;Convert<\/em><\/p>\n<hr class=\"docutils\" />\n<p><strong>Syntax<\/strong><\/p>\n<p>The filter tool allows you to restrict the dataset using simple conditional statements.<\/p>\n<ul class=\"simple\">\n<li>Make sure that multi-character operators contain no white space ( e.g., <strong>&lt;=<\/strong> is valid while <strong>&lt; =<\/strong> is not valid )<\/li>\n<li>When using 'equal-to' operator <strong>double equal sign '==' must be used<\/strong> ( e.g., <strong>attribute_name=='chr1'<\/strong> )<\/li>\n<li>Non-numerical values must be included in single or double quotes ( e.g., <strong>attribute_name=='XX22'<\/strong> )<\/li>\n<li>You can combine multiple conditional statements using <strong>and<\/strong> or <strong>or<\/strong> ( e.g., <strong>attribute_name=='XX22' or attribute_name=='XX21'<\/strong> )<\/li>\n<\/ul>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "filter",
        "version": "0.2",
        "link": "/tool_runner?tool_id=gff_filter_by_attribute",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "gff_filter_by_attribute",
        "name": "Filter GFF data by attribute"
      },
      {
        "panel_section_name": "Filter and Sort",
        "xrefs": [],
        "description": "using simple expressions",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\">Valid comparison operators are: &gt; &lt; &gt;=, &lt;=, !=, and ==<\/p>\n<hr class=\"docutils\" />\n<p><strong>Syntax<\/strong><\/p>\n<p>The filter tool allows you to restrict the dataset based on transcripts' feature counts.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "filter",
        "version": "0.1.1",
        "link": "/tool_runner?tool_id=gff_filter_by_feature_count",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "gff_filter_by_feature_count",
        "name": "Filter GFF data by feature count"
      },
      {
        "panel_section_name": "Filter and Sort",
        "xrefs": [],
        "description": "",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p>This tool filters a GTF file using a list of attribute values. The attribute values are\ntaken from the first column in the file; additional columns in the file are ignored. An example\nuse of this tool is to filter a GTF file using a list of transcript_ids or gene_ids obtained from Cuffdiff.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "filter",
        "version": "0.1",
        "link": "/tool_runner?tool_id=gtf_filter_by_attribute_values_list",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "gtf_filter_by_attribute_values_list",
        "name": "Filter GTF data by attribute values_list"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "filter",
    "name": "Filter and Sort"
  },
  {
    "elems": [
      {
        "panel_section_name": "Join, Subtract and Group",
        "xrefs": [],
        "description": "side by side on a specified field",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"warningmark\"><strong>This tool will force the ouput datatype to tabular.<\/strong> To change metadata assignments click on the &quot;edit attributes&quot; link of the history item generated by this tool.<\/p>\n<p class=\"infomark\"><strong>TIP:<\/strong> If your data is not TAB delimited, use <em>Text Manipulation-&gt;Convert<\/em><\/p>\n<hr class=\"docutils\" />\n<p><strong>Syntax<\/strong><\/p>\n<p>This tool joins lines of two datasets on a common field. An empty string (&quot;&quot;) is not a valid identifier.\nYou may choose to include lines of your first input that do not join with your second input.<\/p>\n<ul class=\"simple\">\n<li>Columns are referenced with a <strong>number<\/strong>. For example, <strong>3<\/strong> refers to the 3rd column of a tab-delimited file.<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>Dataset1:<\/p>\n<pre class=\"literal-block\">\nchr1 10 20 geneA\nchr1 50 80 geneB\nchr5 10 40 geneL\n<\/pre>\n<p>Dataset2:<\/p>\n<pre class=\"literal-block\">\ngeneA tumor-supressor\ngeneB Foxp2\ngeneC Gnas1\ngeneE INK4a\n<\/pre>\n<p>Joining the 4th column of Dataset1 with the 1st column of Dataset2 will yield:<\/p>\n<pre class=\"literal-block\">\nchr1 10 20 geneA geneA tumor-suppressor\nchr1 50 80 geneB geneB Foxp2\n<\/pre>\n<p>Joining the 4th column of Dataset1 with the 1st column of Dataset2, while keeping all lines from Dataset1, will yield:<\/p>\n<pre class=\"literal-block\">\nchr1 10 20 geneA geneA tumor-suppressor\nchr1 50 80 geneB geneB Foxp2\nchr5 10 40 geneL\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "group",
        "version": "2.1.2",
        "link": "/tool_runner?tool_id=join1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "join1",
        "name": "Join two Datasets"
      },
      {
        "panel_section_name": "Join, Subtract and Group",
        "xrefs": [],
        "description": "to find common or distinct rows",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\"><strong>TIP:<\/strong> If your data is not TAB delimited, use <em>Text Manipulation-&gt;Convert<\/em><\/p>\n<hr class=\"docutils\" />\n<p><strong>Syntax<\/strong><\/p>\n<p>This tool finds lines in one dataset that HAVE or DO NOT HAVE a common field with another dataset.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>If this is <strong>First dataset<\/strong>:<\/p>\n<pre class=\"literal-block\">\nchr1 10 20 geneA\nchr1 50 80 geneB\nchr5 10 40 geneL\n<\/pre>\n<p>and this is <strong>Second dataset<\/strong>:<\/p>\n<pre class=\"literal-block\">\ngeneA tumor-suppressor\ngeneB Foxp2\ngeneC Gnas1\ngeneE INK4a\n<\/pre>\n<p>Finding lines of the <strong>First dataset<\/strong> whose 4th column matches the 1st column of the <strong>Second dataset<\/strong> yields:<\/p>\n<pre class=\"literal-block\">\nchr1 10 20 geneA\nchr1 50 80 geneB\n<\/pre>\n<p>Conversely, using option <strong>Non Matching rows of First dataset<\/strong> on the same fields will yield:<\/p>\n<pre class=\"literal-block\">\nchr5 10 40 geneL\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "group",
        "version": "1.0.2",
        "link": "/tool_runner?tool_id=comp1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "comp1",
        "name": "Compare two Datasets"
      },
      {
        "panel_section_name": "Join, Subtract and Group",
        "xrefs": [],
        "description": "data by a column and perform aggregate operation on other columns.",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\"><strong>TIP:<\/strong> If your data is not TAB delimited, use <em>Text Manipulation-&gt;Convert<\/em><\/p>\n<hr class=\"docutils\" />\n<p><strong>Syntax<\/strong><\/p>\n<p>This tool allows you to group the input dataset by a particular column and perform aggregate functions: Mean, Median, Mode, Sum, Max, Min, Count, Concatenate, and Randomly pick on any column(s).<\/p>\n<p>The Concatenate function will take, for each group, each item in the specified column and build a comma delimited list. Concatenate Unique will do the same but will build a list of unique items with no repetition.<\/p>\n<p>Count and Count Unique are equivalent to Concatenate and Concatenate Unique, but will only count the number of items and will return an integer.<\/p>\n<ul class=\"simple\">\n<li>If multiple modes are present, all are reported.<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<ul>\n<li><p class=\"first\">For the following input:<\/p>\n<pre class=\"literal-block\">\nchr22  1000  1003  TTT\nchr22  2000  2003  aaa\nchr10  2200  2203  TTT\nchr10  1200  1203  ttt\nchr22  1600  1603  AAA\n<\/pre>\n<\/li>\n<li><p class=\"first\"><strong>Grouping on column 4<\/strong> while ignoring case, and performing operation <strong>Count on column 1<\/strong> will return:<\/p>\n<pre class=\"literal-block\">\nAAA    2\nTTT    3\n<\/pre>\n<\/li>\n<li><p class=\"first\"><strong>Grouping on column 4<\/strong> while not ignoring case, and performing operation <strong>Count on column 1<\/strong> will return:<\/p>\n<pre class=\"literal-block\">\naaa    1\nAAA    1\nttt    1\nTTT    2\n<\/pre>\n<\/li>\n<\/ul>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "group",
        "version": "2.1.4",
        "link": "/tool_runner?tool_id=Grouping1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Grouping1",
        "name": "Group"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "group",
    "name": "Join, Subtract and Group"
  },
  {
    "elems": [
      {
        "panel_section_name": "Fetch Alignments/Sequences",
        "xrefs": [],
        "description": "by Species",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool examines each MAF block for multiple occurrences of a species in a single block. When this occurs, a block is split into multiple blocks where every combination of one sequence per species per block is represented.<\/p>\n<p>The interface for this tool has two inputs:<\/p>\n<blockquote>\n<ul class=\"simple\">\n<li><strong>MAF file to split<\/strong>. Choose multiple alignments from history to be split by species.<\/li>\n<li><strong>Collapse empty alignment columns<\/strong>. Should alignment columns containing only gaps in the new blocks be removed.<\/li>\n<\/ul>\n<\/blockquote>\n<hr class=\"docutils\" />\n<p><strong>Example 1<\/strong>: <strong>Collapse empty alignment columns is Yes<\/strong>:<\/p>\n<p>For the following alignment:<\/p>\n<pre class=\"literal-block\">\na score=2047408.0\ns species1.chr1 147984545 85 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species1.chr1 147984545 83 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTT--GTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species1.chr1 147984645 79 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTT------AG\ns species1.chr1 147984645 79 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTC---GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTC---AG\ns species2.chr1 129723125 85 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species2.chr1 129723125 83 - 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCT--GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species2.chr1 129723925 79 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTC------AG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n<\/pre>\n<p>the tool will create <strong>a single<\/strong> history item containing 12 alignment blocks (notice that no columns contain only gaps):<\/p>\n<pre class=\"literal-block\">\na score=2047408.0\ns species1.chr1 147984545 85 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species2.chr1 129723125 85 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984545 83 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTT--GTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species2.chr1 129723125 85 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984645 79 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTT------AG\ns species2.chr1 129723125 85 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984645 79 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTC---GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTC---AG\ns species2.chr1 129723125 85 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984545 85 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species2.chr1 129723125 83 - 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCT--GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984545 83 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTT-GTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species2.chr1 129723125 83 - 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCT-GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC--GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984645 79 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTT------AG\ns species2.chr1 129723125 83 - 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCT--GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984645 79 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTC-GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTC---AG\ns species2.chr1 129723125 83 - 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC-GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984545 85 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species2.chr1 129723925 79 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTC------AG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984545 83 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTT--GTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species2.chr1 129723925 79 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTC------AG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984645 79 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTAG\ns species2.chr1 129723925 79 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGCAG\n\na score=2047408.0\ns species1.chr1 147984645 79 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTC---GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCAG\ns species2.chr1 129723925 79 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTC---AG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC---AG\n<\/pre>\n<hr class=\"docutils\" />\n<p><strong>Example 2<\/strong>: <strong>Collapse empty alignment columns is No<\/strong>:<\/p>\n<p>For the following alignment:<\/p>\n<pre class=\"literal-block\">\na score=2047408.0\ns species1.chr1 147984545 85 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species1.chr1 147984545 83 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTT--GTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species1.chr1 147984645 79 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTT------AG\ns species1.chr1 147984645 79 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTC---GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTC---AG\ns species2.chr1 129723125 85 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species2.chr1 129723125 83 - 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCT--GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species2.chr1 129723925 79 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTC------AG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n<\/pre>\n<p>the tool will create <strong>a single<\/strong> history item containing 12 alignment blocks (notice that some columns contain only gaps):<\/p>\n<pre class=\"literal-block\">\na score=2047408.0\ns species1.chr1 147984545 85 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species2.chr1 129723125 85 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984545 83 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTT--GTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species2.chr1 129723125 85 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984645 79 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTT------AG\ns species2.chr1 129723125 85 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984645 79 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTC---GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTC---AG\ns species2.chr1 129723125 85 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984545 85 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species2.chr1 129723125 83 - 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCT--GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984545 83 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTT--GTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species2.chr1 129723125 83 - 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCT--GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984645 79 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTT------AG\ns species2.chr1 129723125 83 - 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCT--GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984645 79 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTC---GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTC---AG\ns species2.chr1 129723125 83 - 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCT--GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTCGTCCTCAG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984545 85 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species2.chr1 129723925 79 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTC------AG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984545 83 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTT--GTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTCCTCAG\ns species2.chr1 129723925 79 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTC------AG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984645 79 + 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTT------AG\ns species2.chr1 129723925 79 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTC------AG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n\na score=2047408.0\ns species1.chr1 147984645 79 - 245522847 ATGGCGTCGGCCTCCTCCGGGCCGTCGTC---GGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTTGTC---AG\ns species2.chr1 129723925 79 + 229575298 ATGGCGTCGGCCTCCTCCGGGCCGTCGTCTTCGGTCGGTTTTTCATCCTTTGATCCCGCGGTCCCTTCCTGTACCTC------AG\ns species3.chr3  68255714 76 - 258222147 ATGGCGTCCGCCTCCTCAGGGCCAGCGGC---GGCGGGGTTTTCACCCCTTGATTCCGGGGTCCCTGCCGGTACCGC------AG\n<\/pre>\n<hr class=\"docutils\" />\n<p class=\"infomark\"><strong>About formats<\/strong><\/p>\n<p><strong>MAF format<\/strong> multiple alignment format file. This format stores multiple alignments at the DNA level between entire genomes.<\/p>\n<blockquote>\n<ul class=\"simple\">\n<li>The .maf format is line-oriented. Each multiple alignment ends with a blank line.<\/li>\n<li>Each sequence in an alignment is on a single line.<\/li>\n<li>Lines starting with # are considered to be comments.<\/li>\n<li>Each multiple alignment is in a separate paragraph that begins with an &quot;a&quot; line and contains an &quot;s&quot; line for each sequence in the multiple alignment.<\/li>\n<li>Some MAF files may contain two optional line types:<ul>\n<li>An &quot;i&quot; line containing information about what is in the aligned species DNA before and after the immediately preceding &quot;s&quot; line;<\/li>\n<li>An &quot;e&quot; line containing information about the size of the gap between the alignments that span the current block.<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/blockquote>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "fetchAlignSeq",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=MAF_split_blocks_by_species1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "MAF_split_blocks_by_species1",
        "name": "Split MAF blocks"
      },
      {
        "panel_section_name": "Fetch Alignments/Sequences",
        "xrefs": [],
        "description": "given a set of coding exon intervals",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>The coding sequence of genes are usually composed of several coding exons. Each of these coding exons is an individual genomic region, which when concatenated with each other constitutes the coding sequence. A single genomic region can be covered by multiple alignment blocks. In many cases it is desirable to stitch these alignment blocks together. This tool accepts a list of gene-based intervals, in the Gene BED format. For every interval it performs the following:<\/p>\n<blockquote>\n<ul class=\"simple\">\n<li>finds all MAF blocks that overlap the coding regions;<\/li>\n<li>sorts MAF blocks by alignment score;<\/li>\n<li>stitches blocks together and resolves overlaps based on alignment score;<\/li>\n<li>outputs alignments in FASTA format.<\/li>\n<\/ul>\n<\/blockquote>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "fetchAlignSeq",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=GeneBed_Maf_Fasta2",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "GeneBed_Maf_Fasta2",
        "name": "Stitch Gene blocks"
      },
      {
        "panel_section_name": "Fetch Alignments/Sequences",
        "xrefs": [],
        "description": "Alignment coverage information",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool takes a MAF file and an interval file and relates coverage information by interval for each species.\nIf a column does not exist in the reference genome, it is not included in the output.<\/p>\n<dl class=\"docutils\">\n<dt>Consider the interval: &quot;chrX 1000 1100 myInterval&quot;<\/dt>\n<dd><p class=\"first\">Let's suppose we want to do stats on three way alignments for H, M, and R. The result look like this:<\/p>\n<blockquote>\n<p>chrX 1000 1100 myInterval H XXX YYY<\/p>\n<p>chrX 1000 1100 myInterval M XXX YYY<\/p>\n<p>chrX 1000 1100 myInterval R XXX YYY<\/p>\n<\/blockquote>\n<p>where XXX and YYY are:<\/p>\n<blockquote class=\"last\">\n<p>XXX = number of nucleotides<\/p>\n<p>YYY = number of gaps<\/p>\n<\/blockquote>\n<\/dd>\n<\/dl>\n<hr class=\"docutils\" />\n<p>Alternatively, you can request only summary information for a set of intervals:<\/p>\n<blockquote>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"30%\" />\n<col width=\"41%\" />\n<col width=\"30%\" />\n<\/colgroup>\n<thead valign=\"bottom\">\n<tr><th class=\"head\">#species<\/th>\n<th class=\"head\">nucleotides<\/th>\n<th class=\"head\">coverage<\/th>\n<\/tr>\n<\/thead>\n<tbody valign=\"top\">\n<tr><td>hg18<\/td>\n<td>30639<\/td>\n<td>0.2372<\/td>\n<\/tr>\n<tr><td>rheMac2<\/td>\n<td>7524<\/td>\n<td>0.0582<\/td>\n<\/tr>\n<tr><td>panTro2<\/td>\n<td>30390<\/td>\n<td>0.2353<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>where <strong>coverage<\/strong> is the number of nucleotides divided by the total length of the provided intervals.<\/p>\n<\/blockquote>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "fetchAlignSeq",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=maf_stats1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "maf_stats1",
        "name": "MAF Coverage Stats"
      },
      {
        "panel_section_name": "Fetch Alignments/Sequences",
        "xrefs": [],
        "description": "by Species",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool allows the user to merge MAF blocks which are adjoining in each specified species from a MAF file. Columns which contain only gaps are removed. Species which are not desired are removed from the output.<\/p>\n<p><strong>Example<\/strong><\/p>\n<p>Specifying the desired species as hg17 and panTro1 with this MAF file:<\/p>\n<pre class=\"literal-block\">\na score=60426.000000\ns hg17.chr7    127471195 331 + 158628139 gtttgccatcttttgctgctctagggaatccagcagctgtcaccatgtaaacaagcccaggctagaccaGTTACCCTCATCATCTTAGCTGATAGCCAGCCAGCCACCACAGGCAtgagtcaggccatattgctggacccacagaattatgagctaaataaatagtcttgggttaagccactaagttttaggcatagtgtgttatgtaTCTCACAAACATATAAGACTGTGTGTTTGTTGACTGGAGGAAGAGATGCTATAAAGACCACCTTTTAAAACTTCCC-------------------------------AAATACT-GCCACTGATGTCCTG-----ATGGAGGTA-------TGAA-------------------AACATCCACTAA\ns panTro1.chr6 129885076 331 + 161576975 gtttgccatcttttgctgctcttgggaatccagcagctgtcaccatgtaaacaagcccaggctagaccaGTTACCCTCATCATCTTAGCTGATAGCCAGCCAGCCACCACAGGCAtgagtcaggccatattgctggacccacagaattatgagctaaataaatagtcttgggttaagccactaagttttaggcatagtgtgttatgtaTCTCACAAACATATAAGACTGTGTGTTTGTTGACTGGAGGAAGAGATGCTATAAAGACCACCTTTTGAAACTTCCC-------------------------------AAATACT-GCCACTGATGTCCTG-----ATGGAGGTA-------TGAA-------------------AACATCCACTAA\ns mm5.chr6      28904571 357 + 149721531 CTCCACTCTCGTTTGCTGTT----------------CTGTCACCATGGAAACAAA-CGAGGGTGGTCCAGTTACTATCTTGACTGCAGCTGGCAGTCAGTT-GCCACT-----CAGGAATAAGGCTATGCCATT-GATCCACTGAACCGTGATCTGGAAACCTGGCTGTTGTTT-------CAAGCCTTGGGGCCAGTTTGCGGTGTTACTCATGA--CTCTAAGATCGTGTGCTTG----CTGCAGGAAGAGACAGCAAGGGGGTTACATTTAAAAAGCCCCCAGTTTAGCTATAGGCAGGCCAACAGGTGTAAAAATACTCACTAGTAATGGGCTGAACTCATGGAGGTAGCATTAGTGAGACACTGTAACTGTTTTTTTAAAAATCACTAA\ns rn3.chr4      56178191 282 + 187371129 CTTCACTCTCATTTGCTGTT----------------CTGTCACTATGGAGACAAACACAGGCTAGCCCAGTTACTATCTTGATCACAGCAGCT-GTCAGCTAGCTGCCACTCACAGGAATAAGGCCATACCATT-GATCCACTGAACCTTGATCTAGGAATTTGGC----------------------TGGGGCCAGTTTGCGGTGTCACTCATGA--CTCTAAGATTGTGTGTTTG----CTCCAGGAAGAGACGGCAAGAGGATTACCTTTAAAAGGTTC---------------------------------GGAGTCTAGCTGTAGACAGCCCA-----ATG--GGTA-------TAAC-------------------AATACTCACTAA\n\na score=8157.000000\ns hg17.chr7    127471526 58 + 158628139 AATTTGTGGTTTATTCATTTTTCATTATTTTGTTTAAGGAGGTCTATAGTGGAAGAGG\ns panTro1.chr6 129885407 58 + 161576975 AATTTGTGGTTTATTCGTTTTTCATTATTTTGTTTAAGGAGGTCTATAGTGGAAGAGG\ns mm5.chr6      28904928 54 + 149721531 AA----CGTTTCATTGATTGCTCATCATTTAAAAAAAGAAATTCCTCAGTGGAAGAGG\n<\/pre>\n<p>results in:<\/p>\n<pre class=\"literal-block\">\na score=0.0\ns hg17.chr7    127471195 389 + 158628139 gtttgccatcttttgctgctctagggaatccagcagctgtcaccatgtaaacaagcccaggctagaccaGTTACCCTCATCATCTTAGCTGATAGCCAGCCAGCCACCACAGGCAtgagtcaggccatattgctggacccacagaattatgagctaaataaatagtcttgggttaagccactaagttttaggcatagtgtgttatgtaTCTCACAAACATATAAGACTGTGTGTTTGTTGACTGGAGGAAGAGATGCTATAAAGACCACCTTTTAAAACTTCCCAAATACTGCCACTGATGTCCTGATGGAGGTATGAAAACATCCACTAAAATTTGTGGTTTATTCATTTTTCATTATTTTGTTTAAGGAGGTCTATAGTGGAAGAGG\ns panTro1.chr6 129885076 389 + 161576975 gtttgccatcttttgctgctcttgggaatccagcagctgtcaccatgtaaacaagcccaggctagaccaGTTACCCTCATCATCTTAGCTGATAGCCAGCCAGCCACCACAGGCAtgagtcaggccatattgctggacccacagaattatgagctaaataaatagtcttgggttaagccactaagttttaggcatagtgtgttatgtaTCTCACAAACATATAAGACTGTGTGTTTGTTGACTGGAGGAAGAGATGCTATAAAGACCACCTTTTGAAACTTCCCAAATACTGCCACTGATGTCCTGATGGAGGTATGAAAACATCCACTAAAATTTGTGGTTTATTCGTTTTTCATTATTTTGTTTAAGGAGGTCTATAGTGGAAGAGG\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "fetchAlignSeq",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=MAF_Thread_For_Species1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "MAF_Thread_For_Species1",
        "name": "Join MAF blocks"
      },
      {
        "panel_section_name": "Fetch Alignments/Sequences",
        "xrefs": [],
        "description": "by Species",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What It Does<\/strong><\/p>\n<p>This tool allows the user to remove any undesired species from a MAF file. Columns which contain only gaps are removed. The options for this tool are:<\/p>\n<blockquote>\n<ul class=\"simple\">\n<li><strong>Exclude blocks which have missing species<\/strong> - suppose you want to restrict an 8-way alignment to human, mouse, and rat.  The tool will first remove all other species. Next, if this option is set to <strong>YES<\/strong> the tool WILL NOT return MAF blocks, which do not include human, mouse, or rat. This means that all alignment blocks returned by the tool will have exactly three sequences in this example.<\/li>\n<li><strong>Exclude blocks with have only one species<\/strong> - if this option is set to <strong>YES<\/strong> all single sequence alignment blocks WILL NOT be returned.<\/li>\n<\/ul>\n<\/blockquote>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "fetchAlignSeq",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=MAF_Limit_To_Species1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "MAF_Limit_To_Species1",
        "name": "Filter MAF blocks"
      },
      {
        "panel_section_name": "Fetch Alignments/Sequences",
        "xrefs": [],
        "description": "by Size",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool takes a MAF file and a size range and extracts the MAF blocks which fall within the specified range.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "fetchAlignSeq",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=maf_limit_size1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "maf_limit_size1",
        "name": "Filter MAF blocks"
      },
      {
        "panel_section_name": "Fetch Alignments/Sequences",
        "xrefs": [],
        "description": "given a set of block numbers and a MAF file",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool takes a list of block numbers, one per line, and extracts the corresponding MAF blocks from the provided file. Block numbers start at 0.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "fetchAlignSeq",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=maf_by_block_number1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "maf_by_block_number1",
        "name": "Extract MAF by block number"
      },
      {
        "panel_section_name": "Fetch Alignments/Sequences",
        "xrefs": [],
        "description": "a MAF file",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool takes a MAF file and creates a new MAF file, where each block has been reversed complemented.<\/p>\n<p><strong>Example<\/strong><\/p>\n<p>This MAF Block:<\/p>\n<pre class=\"literal-block\">\na score=8157.000000\ns hg17.chr7    127471526 58 + 158628139 AATTTGTGGTTTATTCATTTTTCATTATTTTGTTTAAGGAGGTCTATAGTGGAAGAGG\ns panTro1.chr6 129885407 58 + 161576975 AATTTGTGGTTTATTCGTTTTTCATTATTTTGTTTAAGGAGGTCTATAGTGGAAGAGG\ns mm5.chr6      28904928 54 + 149721531 AA----CGTTTCATTGATTGCTCATCATTTAAAAAAAGAAATTCCTCAGTGGAAGAGG\n<\/pre>\n<p>becomes:<\/p>\n<pre class=\"literal-block\">\na score=8157.000000\ns hg17.chr7     31156555 58 - 158628139 CCTCTTCCACTATAGACCTCCTTAAACAAAATAATGAAAAATGAATAAACCACAAATT\ns panTro1.chr6  31691510 58 - 161576975 CCTCTTCCACTATAGACCTCCTTAAACAAAATAATGAAAAACGAATAAACCACAAATT\ns mm5.chr6     120816549 54 - 149721531 CCTCTTCCACTGAGGAATTTCTTTTTTTAAATGATGAGCAATCAATGAAACG----TT\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "fetchAlignSeq",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=MAF_Reverse_Complement_1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "MAF_Reverse_Complement_1",
        "name": "Reverse Complement"
      },
      {
        "panel_section_name": "Fetch Alignments/Sequences",
        "xrefs": [],
        "description": "by specified attributes",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p>This tool allows you to build complex filters to be applied to each alignment block of a MAF file. You can define restraints on species based upon chromosome and strand. You can specify comma separated lists of chromosomes where appropriate.<\/p>\n<p class=\"infomark\">For example, this tool is useful to restrict a set of alignments to only those blocks which contain alignments between chromosomes that are considered homologous.<\/p>\n<hr class=\"docutils\" />\n<p class=\"warningmark\">If a species is not found in a particular block, all filters on that species are ignored.<\/p>\n<hr class=\"docutils\" />\n<p>This tool allows the user to remove any undesired species from a MAF file. If no species are specified then all species will be kept. If species are specified, columns which contain only gaps are removed. The options for this are:<\/p>\n<blockquote>\n<ul class=\"simple\">\n<li><strong>Exclude blocks which have missing species<\/strong> - suppose you want to restrict an 8-way alignment to human, mouse, and rat.  The tool will first remove all other species. Next, if this option is set to <strong>YES<\/strong> the tool WILL NOT return MAF blocks, which do not include human, mouse, or rat. This means that all alignment blocks returned by the tool will have exactly three sequences in this example.<\/li>\n<li><strong>Exclude blocks which have only one species<\/strong> - if this option is set to <strong>YES<\/strong> all single sequence alignment blocks WILL NOT be returned.<\/li>\n<\/ul>\n<\/blockquote>\n<hr class=\"docutils\" />\n<p>You can also provide a size range and limit your output to the MAF blocks which fall within the specified range.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "fetchAlignSeq",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=MAF_filter",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "MAF_filter",
        "name": "Filter MAF"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "fetchAlignSeq",
    "name": "Fetch Alignments/Sequences"
  },
  {
    "elems": [
      {
        "panel_section_name": "Operate on Genomic Intervals",
        "xrefs": [],
        "description": "converter",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>Syntax<\/strong><\/p>\n<p>This tool converts wiggle data into interval type.<\/p>\n<ul>\n<li><p class=\"first\"><strong>Wiggle format<\/strong>: The .wig format is line-oriented. Wiggle data is preceded by a UCSC track definition line.  Following the track definition line is the track data, which can be entered in three different formats described below.<\/p>\n<ul>\n<li><p class=\"first\"><strong>BED format<\/strong> with no declaration line and four columns of data:<\/p>\n<pre class=\"literal-block\">\nchromA  chromStartA  chromEndA  dataValueA\nchromB  chromStartB  chromEndB  dataValueB\n<\/pre>\n<\/li>\n<li><p class=\"first\"><strong>variableStep<\/strong> two column data; started by a declaration line and followed with chromosome positions and data values:<\/p>\n<pre class=\"literal-block\">\nvariableStep  chrom=chrN  [span=windowSize]\nchromStartA  dataValueA\nchromStartB  dataValueB\n<\/pre>\n<\/li>\n<li><p class=\"first\"><strong>fixedStep<\/strong> single column data; started by a declaration line and followed with data values:<\/p>\n<pre class=\"literal-block\">\nfixedStep  chrom=chrN  start=position  step=stepInterval  [span=windowSize]\ndataValue1\ndataValue2\n<\/pre>\n<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<ul>\n<li><p class=\"first\">input wiggle format file:<\/p>\n<pre class=\"literal-block\">\n#track type=wiggle_0 name=&quot;Bed Format&quot; description=&quot;BED format&quot;\nchr19 59302000 59302300 -1.0\nchr19 59302300 59302600 -0.75\nchr19 59302600 59302900 -0.50\nchr19 59302900 59303200 -0.25\nchr19 59303200 59303500 0.0\n#track type=wiggle_0 name=&quot;variableStep&quot; description=&quot;variableStep format&quot;\nvariableStep chrom=chr19 span=150\n59304701 10.0\n59304901 12.5\n59305401 15.0\n59305601 17.5\n#track type=wiggle_0 name=&quot;fixedStep&quot; description=&quot;fixed step&quot; visibility=full\nfixedStep chrom=chr19 start=59307401 step=300 span=200\n1000\n900\n800\n700\n600\n<\/pre>\n<\/li>\n<li><p class=\"first\">convert the above file to interval file:<\/p>\n<pre class=\"literal-block\">\nchr19       59302000        59302300        +       -1.0\nchr19       59302300        59302600        +       -0.75\nchr19       59302600        59302900        +       -0.5\nchr19       59302900        59303200        +       -0.25\nchr19       59303200        59303500        +       0.0\nchr19       59304701        59304851        +       10.0\nchr19       59304901        59305051        +       12.5\nchr19       59305401        59305551        +       15.0\nchr19       59305601        59305751        +       17.5\nchr19       59307701        59307901        +       1000.0\nchr19       59308001        59308201        +       900.0\nchr19       59308301        59308501        +       800.0\nchr19       59308601        59308801        +       700.0\nchr19       59308901        59309101        +       600.0\n<\/pre>\n<\/li>\n<\/ul>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "bxops",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=wiggle2simple1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "wiggle2simple1",
        "name": "Wiggle-to-Interval"
      },
      {
        "panel_section_name": "Operate on Genomic Intervals",
        "xrefs": [],
        "description": "Appends the average, min, max of datapoints per interval",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"warningmark\">This tool currently only has cached data for genome builds hg16, hg17 and hg18. However, you may use your own data point (wiggle) data, such as those available from UCSC. If you are trying to use your own data point file and it is not appearing as an option, make sure that the builds for your history items are the same.<\/p>\n<p class=\"warningmark\">This tool assumes that the input dataset is in interval format and contains at least a chrom column, a start column and an end column.  These 3 columns can be dispersed throughout any number of other data columns.<\/p>\n<hr class=\"docutils\" />\n<p class=\"infomark\"><strong>TIP:<\/strong> Computing summary information may throw exceptions if the data type (e.g., string, integer) in every line of the columns is not appropriate for the computation (e.g., attempting numerical calculations on strings).  If an exception is thrown when computing summary information for a line, that line is skipped as invalid for the computation.  The number of invalid skipped lines is documented in the resulting history item as a &quot;Data issue&quot;.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Syntax<\/strong><\/p>\n<p>This tool appends columns of summary information for each interval matched against a selected dataset.  For each interval, the average, minimum and maximum for the data falling within the interval is computed.<\/p>\n<ul class=\"simple\">\n<li>Several quantitative scores are provided for the ENCODE regions.<ul>\n<li><dl class=\"first docutils\">\n<dt>Various Scores<\/dt>\n<dd><ul class=\"first last\">\n<li>Regulatory Potential<\/li>\n<li>Neutral rate (Ancestral Repeats)<\/li>\n<li>GC fraction<\/li>\n<\/ul>\n<\/dd>\n<\/dl>\n<\/li>\n<li><dl class=\"first docutils\">\n<dt>Conservation Scores<\/dt>\n<dd><ul class=\"first last\">\n<li>PhastCons<\/li>\n<li>binCons<\/li>\n<li>GERP<\/li>\n<\/ul>\n<\/dd>\n<\/dl>\n<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>If your original data has the following format:<\/p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"24%\" />\n<col width=\"20%\" />\n<col width=\"20%\" />\n<col width=\"12%\" />\n<col width=\"24%\" />\n<\/colgroup>\n<tbody valign=\"top\">\n<tr><td>other1<\/td>\n<td>chrom<\/td>\n<td>start<\/td>\n<td>end<\/td>\n<td>other2<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>and you choose to aggregate phastCons scores, your output will look like this:<\/p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"18%\" />\n<col width=\"15%\" />\n<col width=\"15%\" />\n<col width=\"9%\" />\n<col width=\"18%\" />\n<col width=\"9%\" />\n<col width=\"9%\" />\n<col width=\"9%\" />\n<\/colgroup>\n<tbody valign=\"top\">\n<tr><td>other1<\/td>\n<td>chrom<\/td>\n<td>start<\/td>\n<td>end<\/td>\n<td>other2<\/td>\n<td>avg<\/td>\n<td>min<\/td>\n<td>max<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>where:<\/p>\n<ul class=\"simple\">\n<li><strong>avg<\/strong> - average phastCons score for each region<\/li>\n<li><strong>min<\/strong> - minimum phastCons score for each region<\/li>\n<li><strong>max<\/strong> - maximum phastCons score for each region<\/li>\n<\/ul>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "bxops",
        "version": "1.1.3",
        "link": "/tool_runner?tool_id=aggregate_scores_in_intervals2",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "aggregate_scores_in_intervals2",
        "name": "Aggregate datapoints"
      },
      {
        "panel_section_name": "Operate on Genomic Intervals",
        "xrefs": [],
        "description": "expander",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"warningmark\">This tool works only on a BED file that contains at least 12 fields (see <strong>Example<\/strong> and <strong>About formats<\/strong> below).  The output will be empty if applied to a BED file with 3 or 6 fields.<\/p>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>BED format can be used to represent a single gene in just one line, which contains the information about exons, coding sequence location (CDS), and positions of untranslated regions (UTRs).  This tool <em>unpacks<\/em> this information by converting a single line describing a gene into a collection of lines representing individual exons, introns, UTRs, etc.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<p>Extracting <strong>Coding Exons + UTR Exons<\/strong> from the following two BED lines:<\/p>\n<pre class=\"literal-block\">\nchr7 127475281 127491632 NM_000230 0 + 127486022 127488767 0 3 29,172,3225,    0,10713,13126\nchr7 127486011 127488900 D49487    0 + 127486022 127488767 0 2 155,490,        0,2399\n<\/pre>\n<p>will return:<\/p>\n<pre class=\"literal-block\">\nchr7 127475281 127475310 NM_000230 0 +\nchr7 127485994 127486166 NM_000230 0 +\nchr7 127488407 127491632 NM_000230 0 +\nchr7 127486011 127486166 D49487    0 +\nchr7 127488410 127488900 D49487    0 +\n<\/pre>\n<hr class=\"docutils\" />\n<p class=\"infomark\"><strong>About formats<\/strong><\/p>\n<p><strong>BED format<\/strong> Browser Extensible Data format was designed at UCSC for displaying data tracks in the Genome Browser. It has three required fields and additional optional ones. In the specific case of this tool the following fields must be present:<\/p>\n<pre class=\"literal-block\">\n 1. chrom - The name of the chromosome (e.g. chr1, chrY_random).\n 2. chromStart - The starting position in the chromosome. (The first base in a chromosome is numbered 0.)\n 3. chromEnd - The ending position in the chromosome, plus 1 (i.e., a half-open interval).\n 4. name - The name of the BED line.\n 5. score - A score between 0 and 1000.\n 6. strand - Defines the strand - either '+' or '-'.\n 7. thickStart - The starting position where the feature is drawn thickly at the Genome Browser.\n 8. thickEnd - The ending position where the feature is drawn thickly at the Genome Browser.\n 9. reserved - This should always be set to zero.\n10. blockCount - The number of blocks (exons) in the BED line.\n11. blockSizes - A comma-separated list of the block sizes. The number of items in this list should correspond to blockCount.\n12. blockStarts - A comma-separated list of block starts. All of the blockStart positions should be calculated relative to chromStart. The number of items in this list should correspond to blockCount.\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "bxops",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=gene2exon1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "gene2exon1",
        "name": "Gene BED To Exon/Intron/Codon BED"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "bxops",
    "name": "Operate on Genomic Intervals"
  },
  {
    "elems": [
      {
        "panel_section_name": "Statistics",
        "xrefs": [],
        "description": "for any numerical column",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"warningmark\">This tool expects input datasets consisting of tab-delimited columns (blank or comment lines beginning with a # character are automatically skipped).<\/p>\n<p class=\"infomark\"><strong>TIP:<\/strong> If your data is not TAB delimited, use <em>Text Manipulation-&gt;Convert delimiters to TAB<\/em><\/p>\n<p class=\"infomark\"><strong>TIP:<\/strong> Computing summary statistics may throw exceptions if the data value in every line of the columns being summarized is not numerical.  If a line is missing a value or contains a non-numerical value in the column being summarized, that line is skipped and the value is not included in the statistical computation.  The number of invalid skipped lines is documented in the resulting history item.<\/p>\n<p class=\"infomark\"><strong>USING R FUNCTIONS:<\/strong> Most functions (like <em>abs<\/em>) take only a single expression. <em>log<\/em> can take one or two parameters, like <em>log(expression,base)<\/em><\/p>\n<p>Currently, these R functions are supported: <em>abs, sign, sqrt, floor, ceiling, trunc, round, signif, exp, log, cos, sin, tan, acos, asin, atan, cosh, sinh, tanh, acosh, asinh, atanh, lgamma, gamma, gammaCody, digamma, trigamma, cumsum, cumprod, cummax, cummin<\/em><\/p>\n<hr class=\"docutils\" />\n<p><strong>Syntax<\/strong><\/p>\n<p>This tool computes basic summary statistics on a given column, or on a valid expression containing one or more columns.<\/p>\n<ul class=\"simple\">\n<li>Columns are referenced with <strong>c<\/strong> and a <strong>number<\/strong>. For example, <strong>c1<\/strong> refers to the first column of a tab-delimited file.<\/li>\n<li>For example:<ul>\n<li><strong>log(c5)<\/strong> calculates the summary statistics for the natural log of column 5<\/li>\n<li><strong>(c5 + c6 + c7) / 3<\/strong> calculates the summary statistics on the average of columns 5-7<\/li>\n<li><strong>log(c5,10)<\/strong> summary statistics of the base 10 log of column 5<\/li>\n<li><strong>sqrt(c5+c9)<\/strong> summary statistics of the square root of column 5 + column 9<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Examples<\/strong><\/p>\n<ul>\n<li><p class=\"first\">Input Dataset:<\/p>\n<pre class=\"literal-block\">\nc1      c2      c3      c4      c5              c6\n586     chrX    161416  170887  41108_at        16990\n73      chrX    505078  532318  35073_at        1700\n595     chrX    1361578 1388460 33665_s_at      1960\n74      chrX    1420620 1461919 1185_at         8600\n<\/pre>\n<\/li>\n<li><p class=\"first\">Summary Statistics on column c6 of the above input dataset:<\/p>\n<pre class=\"literal-block\">\n#sum       mean      stdev     0%        25%       50%       75%        100%\n29250.000  7312.500  7198.636  1700.000  1895.000  5280.000  10697.500  16990.000\n<\/pre>\n<\/li>\n<\/ul>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [
          "topic_2269"
        ],
        "panel_section_id": "stats",
        "version": "1.1.2",
        "link": "/tool_runner?tool_id=Summary_Statistics1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Summary_Statistics1",
        "name": "Summary Statistics"
      },
      {
        "panel_section_name": "Statistics",
        "xrefs": [],
        "description": "occurrences of each record",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p class=\"infomark\"><strong>TIP:<\/strong> If your data is not TAB delimited, use <em>Text Manipulation-&gt;Convert<\/em><\/p>\n<hr class=\"docutils\" />\n<p><strong>Syntax<\/strong><\/p>\n<p>This tool counts occurrences of unique values in selected column(s).<\/p>\n<ul class=\"simple\">\n<li>If multiple columns are selected, counting is performed on each unique group of all values in the selected columns.<\/li>\n<li>The first column of the resulting dataset will be the count of unique values in the selected column(s) and will be followed by each value.<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<ul>\n<li><p class=\"first\">Input file:<\/p>\n<pre class=\"literal-block\">\nchr1   10  100  gene1\nchr1  105  200  gene2\nchr1  205  300  gene3\nchr2   10  100  gene4\nchr2 1000 1900  gene5\nchr3   15 1656  gene6\nchr4   10 1765  gene7\nchr4   10 1765  gene8\n<\/pre>\n<\/li>\n<li><p class=\"first\">Counting unique values in column c1 will result in:<\/p>\n<pre class=\"literal-block\">\n3 chr1\n2 chr2\n1 chr3\n2 chr4\n<\/pre>\n<\/li>\n<li><p class=\"first\">Counting unique values in the grouping of columns c2 and c3 will result in:<\/p>\n<pre class=\"literal-block\">\n2    10    100\n2    10    1765\n1    1000  1900\n1    105   200\n1    15    1656\n1    205   300\n<\/pre>\n<\/li>\n<\/ul>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "stats",
        "version": "1.0.3",
        "link": "/tool_runner?tool_id=Count1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "Count1",
        "name": "Count"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "stats",
    "name": "Statistics"
  },
  {
    "elems": [
      {
        "panel_section_name": "Graph/Display Data",
        "xrefs": [],
        "description": "for display at UCSC",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>What it does<\/strong><\/p>\n<p>This tool converts a Variant Call Format (VCF) file into a Multiple Alignment Format (MAF) custom track file suitable for display at genome browsers.<\/p>\n<p>This file should be used for display purposes only (e.g as a UCSC Custom Track). Performing an analysis using the output created by this tool as input is not recommended; the source VCF file should be used when performing an analysis.<\/p>\n<p><em>Unknown nucleotides<\/em> are represented as '*' as required to allow the display to draw properly; these include e.g. reference bases which appear before a deletion and are not available without querying the original reference sequence.<\/p>\n<p><strong>Example<\/strong><\/p>\n<p>Starting with a VCF:<\/p>\n<pre class=\"literal-block\">\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  NA00001 NA00002 NA00003\n20  14370   rs6054257   G   A   29  0   NS=3;DP=14;AF=0.5;DB;H2 GT:GQ:DP:HQ 0|0:48:1:51,51  1|0:48:8:51,51  1/1:43:5:-1,-1\n20  17330   .   T   A   3   q10 NS=3;DP=11;AF=0.017 GT:GQ:DP:HQ 0|0:49:3:58,50  0|1:3:5:65,3    0/0:41:3:-1,-1\n20  1110696 rs6040355   A   G,T 67  0   NS=2;DP=10;AF=0.333,0.667;AA=T;DB   GT:GQ:DP:HQ 1|2:21:6:23,27  2|1:2:0:18,2    2/2:35:4:-1,-1\n20  1230237 .   T   .   47  0   NS=3;DP=13;AA=T GT:GQ:DP:HQ 0|0:54:7:56,60  0|0:48:4:51,51  0/0:61:2:-1,-1\n20  1234567 microsat1   G   D4,IGA  50  0   NS=3;DP=9;AA=G  GT:GQ:DP    0/1:35:4    0/2:17:2    1/1:40:3\n<\/pre>\n<p>Under the following conditions: <strong>VCF Source type:<\/strong> <em>Per Population (file)<\/em>, <strong>Name for this population:<\/strong> <em>CHB+JPT<\/em>\nResults in the following MAF custom track:<\/p>\n<pre class=\"literal-block\">\ntrack name=&quot;Galaxy Custom Track&quot; visibility=pack\na score=0\ns hg18.chr20  14369 1 + 14370 G\ns CHB+JPT_1.1     0 1 +     1 A\n\na score=0\ns hg18.chr20  17329 1 + 17330 T\ns CHB+JPT_1.2     0 1 +     1 A\n\na score=0\ns hg18.chr20  1110695 1 + 1110696 A\ns CHB+JPT_1.3       0 1 +       1 G\ns CHB+JPT_2.3       0 1 +       1 T\n\na score=0\ns hg18.chr20  1230236 1 + 1230237 T\ns CHB+JPT_1.4       0 1 +       1 .\n\na score=0\ns hg18.chr20  1234565 5 + 1234572 *G--***\ns CHB+JPT_1.5       0 1 +       1 *------\ns CHB+JPT_2.5       0 7 +       7 *GGA***\n<\/pre>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "plots",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=vcf_to_maf_customtrack1",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "vcf_to_maf_customtrack1",
        "name": "VCF to MAF Custom Track"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "plots",
    "name": "Graph/Display Data"
  },
  {
    "elems": [
      {
        "panel_section_name": "Phenotype Association",
        "xrefs": [],
        "description": "tools for functional profiling of gene lists",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>Dataset formats<\/strong><\/p>\n<p>The input dataset is <a class=\"reference external\" href=\"/static/formatHelp.html#tab\">tabular<\/a> with a column of identifiers.\nThe output dataset is <a class=\"reference external\" href=\"/static/formatHelp.html#html\">html<\/a> with a link to g:Profiler.\n(<a class=\"reference external\" href=\"/static/formatHelp.html\">Dataset missing?<\/a>)<\/p>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>This tool creates a link to the g:GOSt tool (Gene Group Functional\nProfiling), which is part of the g:Profiler site at the University\nof Tartu in Estonia.  g:GOSt retrieves the most significant Gene\nOntology (GO) terms, KEGG and REACTOME pathways, and TRANSFAC motifs\nfor a user-specified group of genes, proteins, or microarray probes.\ng:GOSt also allows analysis of ranked or ordered lists of genes,\nvisual browsing of GO graph structure, interactive visualization of\nretrieved results, and many other features.  Multiple testing\ncorrections are applied to extract only statistically important\nresults.<\/p>\n<p>The g:GOSt form is pre-filled with gene, protein, or microarray probe\nIDs from the selected column of a tabular Galaxy dataset.  Or you\ncan chose to use the genomic coordinates (must be lastest build used by\nEnsembl).  The coordinates don't have to be genes they can be for\nSNPs, and g:GOst will map to the gene ID.  To follow\nthe created link, click on the eye icon when the Galaxy tool has\nfinished running.  Once at the g:Profiler site, scroll down to see\nthe g:GOSt results.  You can also adjust the options in the g:GOSt\nform to your liking, or use the row of links between the form and\nthe results to run other g:Profiler tools using the same list of IDs.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Reference<\/strong><\/p>\n<p>Reimand J, Kull M, Peterson H, Hansen J, Vilo J. (2007) g:Profiler -- a web-based\ntoolset for functional profiling of gene lists from large-scale experiments.\nNucleic Acids Res. 35(Web Server issue):W193-200. Epub 2007 May 3.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "hgv",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=hgv_linkToGProfile",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "hgv_linkToGProfile",
        "name": "g:Profiler"
      },
      {
        "panel_section_name": "Phenotype Association",
        "xrefs": [],
        "description": "functional annotation for a list of genes",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<blockquote>\n<\/blockquote>\n<p class=\"infomark\">The list is limited to 400 IDs.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Dataset formats<\/strong><\/p>\n<p>The input dataset is in <a class=\"reference external\" href=\"/static/formatHelp.html#tab\">tabular<\/a> format.  The output dataset is <a class=\"reference external\" href=\"/static/formatHelp.html#html\">html<\/a> with\na link to the DAVID website as described below.\n(<a class=\"reference external\" href=\"/static/formatHelp.html\">Dataset missing?<\/a>)<\/p>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>This tool creates a link to the Database for Annotation,\nVisualization, and Integrated Discovery (DAVID) website at NIH,\nsending a list of IDs from the selected column of a tabular\nGalaxy dataset.  To follow the created link, click on the\neye icon once the Galaxy tool has finished running.<\/p>\n<p>DAVID provides a comprehensive set of functional annotation tools\nto help investigators discover biological meaning behind large\nlists of genes.<\/p>\n<hr class=\"docutils\" />\n<p><strong>References<\/strong><\/p>\n<p>Huang DW, Sherman BT, Lempicki RA. (2009) Systematic and integrative analysis\nof large gene lists using DAVID bioinformatics resources.\nNat Protoc. 4(1):44-57.<\/p>\n<p>Dennis G, Sherman BT, Hosack DA, Yang J, Gao W, Lane HC, Lempicki RA. (2003)\nDAVID: database for annotation, visualization, and integrated discovery.\nGenome Biol. 4(5):P3. Epub 2003 Apr 3.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "hgv",
        "version": "1.0.1",
        "link": "/tool_runner?tool_id=hgv_david",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "hgv_david",
        "name": "DAVID"
      },
      {
        "panel_section_name": "Phenotype Association",
        "xrefs": [],
        "description": "linkage disequilibrium and tag SNPs",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>Dataset formats<\/strong><\/p>\n<p>The input and output datasets are <a class=\"reference external\" href=\"/static/formatHelp.html#tab\">tabular<\/a>.\n(<a class=\"reference external\" href=\"/static/formatHelp.html\">Dataset missing?<\/a>)<\/p>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>This tool can be used to analyze the patterns of linkage disequilibrium\n(LD) between polymorphic sites in a locus.  SNPs are grouped based on the\nthreshold level of LD as measured by r<sup>2<\/sup> (regardless of genomic\nposition), and a representative &quot;tag SNP&quot; is reported for each group.\nThe other SNPs in the group are in LD with the tag SNP, but not necessarily\nwith each other.<\/p>\n<p>The underlying algorithm is the same as the one used in ldSelect (Carlson\net al. 2004).  However, this tool is implemented to be much faster and more\nefficient than ldSelect.<\/p>\n<p>The input is a tabular file with genotype information for each individual\nat each SNP site, in exactly four columns: site ID, sample ID, and the\ntwo allele nucleotides.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Example<\/strong><\/p>\n<ul>\n<li><p class=\"first\">input file:<\/p>\n<pre class=\"literal-block\">\nrs2334386  NA20364  G  T\nrs2334386  NA20363  G  G\nrs2334386  NA20360  G  G\nrs2334386  NA20359  G  G\nrs2334386  NA20358  G  G\nrs2334386  NA20356  G  G\nrs2334386  NA20357  G  G\nrs2334386  NA20350  G  G\nrs2334386  NA20349  G  G\nrs2334386  NA20348  G  G\nrs2334386  NA20347  G  G\nrs2334386  NA20346  G  G\nrs2334386  NA20345  G  G\nrs2334386  NA20344  G  G\nrs2334386  NA20342  G  G\netc.\n<\/pre>\n<\/li>\n<li><p class=\"first\">output file:<\/p>\n<pre class=\"literal-block\">\nrs2238748  rs2793064,rs6518516,rs6518517,rs2283641,rs5993533,rs715590,rs2072123,rs2105421,rs2800954,rs1557847,rs807750,rs807753,rs5993488,rs8138035,rs2800980,rs2525079,rs5992353,rs712966,rs2525036,rs807743,rs1034727,rs807744,rs2074003\nrs2871023  rs1210715,rs1210711,rs5748189,rs1210709,rs3788298,rs7284649,rs9306217,rs9604954,rs1210703,rs5748179,rs5746727,rs5748190,rs5993603,rs2238766,rs885981,rs2238763,rs5748165,rs9605996,rs9606001,rs5992398\nrs7292006  rs13447232,rs5993665,rs2073733,rs1057457,rs756658,rs5992395,rs2073760,rs739369,rs9606017,rs739370,rs4493360,rs2073736\nrs2518840  rs1061325,rs2283646,rs362148,rs1340958,rs361956,rs361991,rs2073754,rs2040771,rs2073740,rs2282684\nrs2073775  rs10160,rs2800981,rs807751,rs5993492,rs2189490,rs5747997,rs2238743\nrs5747263  rs12159924,rs2300688,rs4239846,rs3747025,rs3747024,rs3747023,rs2300691\nrs433576   rs9605439,rs1109052,rs400509,rs401099,rs396012,rs410456,rs385105\nrs2106145  rs5748131,rs2013516,rs1210684,rs1210685,rs2238767,rs2277837\nrs2587082  rs2257083,rs2109659,rs2587081,rs5747306,rs2535704,rs2535694\nrs807667   rs2800974,rs756651,rs762523,rs2800973,rs1018764\nrs2518866  rs1206542,rs807467,rs807464,rs807462,rs712950\nrs1110661  rs1110660,rs7286607,rs1110659,rs5992917,rs1110662\nrs759076   rs5748760,rs5748755,rs5748752,rs4819925,rs933461\nrs5746487  rs5992895,rs2034113,rs2075455,rs1867353\nrs5748212  rs5746736,rs4141527,rs5748147,rs5748202\netc.\n<\/pre>\n<\/li>\n<\/ul>\n<hr class=\"docutils\" />\n<p><strong>Reference<\/strong><\/p>\n<p>Carlson CS, Eberle MA, Rieder MJ, Yi Q, Kruglyak L, Nickerson DA. (2004)\nSelecting a maximally informative set of single-nucleotide polymorphisms for\nassociation analyses using linkage disequilibrium.\nAm J Hum Genet. 74(1):106-20. Epub 2003 Dec 15.<\/p>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "hgv",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=hgv_ldtools",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "hgv_ldtools",
        "name": "LD"
      },
      {
        "panel_section_name": "Phenotype Association",
        "xrefs": [],
        "description": "Convert from MasterVar to pgSnp format",
        "is_workflow_compatible": true,
        "labels": [],
        "help": "<p><strong>Dataset formats<\/strong><\/p>\n<p>The input dataset is in the <a class=\"reference external\" href=\"./static/formatHelp.html#mastervar\">MasterVar<\/a> format provided by the Complete Genomics\nanalysis process (Galaxy considers this to be <a class=\"reference external\" href=\"./static/formatHelp.html#tab\">tabular<\/a>, but it must have the\ncolumns specified for MasterVar).\nThe output dataset is in <a class=\"reference external\" href=\"./static/formatHelp.html#pgSnp\">pgSnp<\/a> format.  (<a class=\"reference external\" href=\"./static/formatHelp.html\">Dataset missing?<\/a>)<\/p>\n<hr class=\"docutils\" />\n<p><strong>What it does<\/strong><\/p>\n<p>This converts a Complete Genomics MasterVar file to pgSnp format,\nso it can be viewed in browsers or used with the phenotype association and\ninterval operations tools.\nPositions homozygous for the reference are skipped.<\/p>\n<hr class=\"docutils\" />\n<p><strong>Examples<\/strong><\/p>\n<ul>\n<li><p class=\"first\">input MasterVar file:<\/p>\n<pre class=\"literal-block\">\n934     2       chr1    41980   41981   hom     snp     A       G       G       76      97                      dbsnp.86:rs806721       425     1       1       1       2       -170                            ERVL-E-int:ERVL:47.4    2       1.17    N\n935     2       chr1    41981   42198   hom     ref     =       =       =                                                                                       -170                                            1.17    N\n1102    2       chr1    53205   53206   het-ref snp     G       C       G       93      127                     dbsnp.100:rs2854676     477     7       30      0       37      -127                                    2       1.17    N\netc.\n<\/pre>\n<\/li>\n<li><p class=\"first\">output:<\/p>\n<pre class=\"literal-block\">\nchr1    41980   41981   G       1       1       76\nchr1    51672   51673   C       1       1       53\nchr1    52237   52238   G       1       7       63\nchr1    53205   53206   C/G     2       7,30    93,127\netc.\n<\/pre>\n<\/li>\n<\/ul>\n",
        "edam_operations": [],
        "form_style": "regular",
        "edam_topics": [],
        "panel_section_id": "hgv",
        "version": "1.0.0",
        "link": "/tool_runner?tool_id=master2pgSnp",
        "target": "galaxy_main",
        "min_width": -1,
        "model_class": "Tool",
        "hidden": "",
        "id": "master2pgSnp",
        "name": "MasterVar to pgSnp"
      }
    ],
    "model_class": "ToolSection",
    "version": "",
    "id": "hgv",
    "name": "Phenotype Association"
  }
]